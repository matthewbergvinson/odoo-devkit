{
    "version": "2.0.0",
    "problemMatchers": [
        {
            "name": "odoo-server-startup",
            "owner": "odoo-server",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3} \\d+ (ERROR|WARNING) ([^\\s]+) ([^:]+): (.+)$",
                    "severity": 1,
                    "file": 2,
                    "location": 3,
                    "message": 4
                }
            ]
        },
        {
            "name": "odoo-module-import-error",
            "owner": "odoo-import",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^ImportError: (.+) in ([^\\s]+)$",
                    "severity": "error",
                    "message": 1,
                    "file": 2
                },
                {
                    "regexp": "^ModuleNotFoundError: No module named '([^']+)'.*in ([^\\s]+)$",
                    "severity": "error",
                    "message": "Module '$1' not found",
                    "file": 2
                }
            ]
        },
        {
            "name": "odoo-xml-validation",
            "owner": "odoo-xml",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+\\.xml):(\\d+): (.+): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                },
                {
                    "regexp": "^\\s*File \"([^\"]+\\.xml)\", line (\\d+), in (.+)$",
                    "file": 1,
                    "line": 2,
                    "message": 3,
                    "severity": "error"
                }
            ]
        },
        {
            "name": "odoo-database-constraint",
            "owner": "odoo-database",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^psycopg2\\.IntegrityError: (.+)$",
                    "severity": "error",
                    "message": "Database Integrity Error: $1"
                },
                {
                    "regexp": "^psycopg2\\.ProgrammingError: (.+)$",
                    "severity": "error",
                    "message": "Database Programming Error: $1"
                }
            ]
        },
        {
            "name": "odoo-field-definition-error",
            "owner": "odoo-fields",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+\\.py):(\\d+): (.+): Field '([^']+)' (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": "Field '$4': $5"
                },
                {
                    "regexp": "^ValueError: (.+) for field '([^']+)' in model '([^']+)'$",
                    "severity": "error",
                    "message": "$1 for field '$2' in model '$3'"
                }
            ]
        },
        {
            "name": "odoo-access-rights-error",
            "owner": "odoo-security",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^AccessError: (.+) \\((.+)\\)$",
                    "severity": "error",
                    "message": "Access Rights Error: $1 ($2)"
                },
                {
                    "regexp": "^(.+/security/[^\\s]+):(\\d+): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": "error",
                    "message": 3
                }
            ]
        },
        {
            "name": "odoo-qweb-template-error",
            "owner": "odoo-qweb",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^QWebException: (.+) in template '([^']+)' \\((.+):(\\d+)\\)$",
                    "severity": "error",
                    "message": "QWeb Template Error: $1 in template '$2'",
                    "file": 3,
                    "line": 4
                },
                {
                    "regexp": "^TemplateNotFound: (.+)$",
                    "severity": "error",
                    "message": "Template Not Found: $1"
                }
            ]
        },
        {
            "name": "odoo-orm-error",
            "owner": "odoo-orm",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+\\.py):(\\d+): (.+): (.+) in (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": "$4 in $5"
                },
                {
                    "regexp": "^ValidationError: (.+)$",
                    "severity": "error",
                    "message": "ORM Validation Error: $1"
                }
            ]
        },
        {
            "name": "odoo-migration-error",
            "owner": "odoo-migration",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+/migrations/[^\\s]+\\.py):(\\d+): (.+): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                },
                {
                    "regexp": "^MigrationError: (.+) in ([^\\s]+)$",
                    "severity": "error",
                    "message": "Migration Error: $1",
                    "file": 2
                }
            ]
        },
        {
            "name": "odoo-translation-error",
            "owner": "odoo-translation",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+\\.po):(\\d+): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": "warning",
                    "message": 3
                },
                {
                    "regexp": "^PoError: (.+) in ([^\\s]+\\.po):(\\d+)$",
                    "severity": "error",
                    "message": "Translation Error: $1",
                    "file": 2,
                    "line": 3
                }
            ]
        },
        {
            "name": "odoo-manifest-error",
            "owner": "odoo-manifest",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+/__manifest__\\.py):(\\d+): (.+): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                },
                {
                    "regexp": "^ManifestError: (.+) in ([^\\s]+)$",
                    "severity": "error",
                    "message": "Manifest Error: $1",
                    "file": 2
                }
            ]
        },
        {
            "name": "odoo-comprehensive",
            "owner": "odoo-all",
            "fileLocation": ["relative", "${workspaceFolder}"],
            "pattern": [
                {
                    "regexp": "^(.+):(\\d+):(\\d+): (ERROR|WARNING|INFO): (.+)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                },
                {
                    "regexp": "^(.+):(\\d+): (ERROR|WARNING): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            ]
        }
    ],
    "tasks": [
        {
            "label": "🧪 Test: Run All Tests",
            "type": "shell",
            "command": "make",
            "args": ["test"],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false,
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-comprehensive"]
        },
        {
            "label": "🧪 Test: Current Module",
            "type": "shell",
            "command": "make",
            "args": ["test-module", "MODULE=${input:moduleName}"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-module-import-error", "$odoo-comprehensive"]
        },
        {
            "label": "🔄 Test: Integration Tests",
            "type": "shell",
            "command": "make",
            "args": ["test-integration"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-comprehensive"]
        },
        {
            "label": "⚡ Test: Performance Tests",
            "type": "shell",
            "command": "make",
            "args": ["test-performance"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-database-constraint", "$odoo-comprehensive"]
        },
        {
            "label": "👥 Test: Customer Workflows",
            "type": "shell",
            "command": "make",
            "args": ["test-customer-flows"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-orm-error", "$odoo-comprehensive"]
        },
        {
            "label": "💰 Test: Sales Workflows",
            "type": "shell",
            "command": "make",
            "args": ["test-sales-flows"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-orm-error", "$odoo-comprehensive"]
        },
        {
            "label": "🗃️ Test: Database Performance",
            "type": "shell",
            "command": "make",
            "args": ["test-database-performance"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-database-constraint", "$odoo-comprehensive"]
        },
        {
            "label": "🖥️ Test: View Performance",
            "type": "shell",
            "command": "make",
            "args": ["test-view-performance"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-qweb-template-error", "$odoo-comprehensive"]
        },
        {
            "label": "🚀 Test: CI/CD Pipeline",
            "type": "shell",
            "command": "make",
            "args": ["test-integration-ci"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "group": "testing"
            },
            "problemMatcher": ["$python", "$odoo-comprehensive"]
        },

        {
            "label": "📊 Coverage: Generate Report",
            "type": "shell",
            "command": "make",
            "args": ["coverage-report"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "coverage"
            },
            "problemMatcher": ["$python"]
        },
        {
            "label": "📊 Coverage: HTML Report",
            "type": "shell",
            "command": "make",
            "args": ["coverage-html"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "group": "coverage"
            },
            "problemMatcher": ["$python"]
        },
        {
            "label": "📊 Coverage: Validate Thresholds",
            "type": "shell",
            "command": "make",
            "args": ["coverage-validate"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "coverage"
            },
            "problemMatcher": ["$python"]
        },
        {
            "label": "📊 Coverage: Full Analysis",
            "type": "shell",
            "command": "make",
            "args": ["coverage-full"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "coverage"
            },
            "problemMatcher": ["$python"]
        },
        {
            "label": "📊 Coverage: Insights & Recommendations",
            "type": "shell",
            "command": "make",
            "args": ["coverage-insights"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "coverage"
            },
            "problemMatcher": ["$python"]
        },

        {
            "label": "🔍 Lint: All Code",
            "type": "shell",
            "command": "make",
            "args": ["lint"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "quality"
            },
            "problemMatcher": [
                {
                    "owner": "flake8",
                    "fileLocation": ["relative", "${workspaceFolder}"],
                    "pattern": {
                        "regexp": "^(.+):(\\d+):(\\d+): (\\w+)(\\d+) (.+)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "code": 5,
                        "message": 6
                    }
                },
                {
                    "owner": "pylint",
                    "fileLocation": ["relative", "${workspaceFolder}"],
                    "pattern": {
                        "regexp": "^(.+):(\\d+):(\\d+): (\\w+): (.+) \\((.+)\\)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5,
                        "code": 6
                    }
                },
                "$odoo-field-definition-error"
            ]
        },
        {
            "label": "🔍 Lint: Current File",
            "type": "shell",
            "command": "flake8",
            "args": ["${file}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "group": "quality"
            },
            "problemMatcher": {
                "owner": "flake8",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+): (\\w+)(\\d+) (.+)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "code": 5,
                    "message": 6
                }
            }
        },
        {
            "label": "🎨 Format: All Code",
            "type": "shell",
            "command": "make",
            "args": ["format"],
            "group": "build",
            "presentation": {
                "echo": false,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "group": "quality"
            }
        },
        {
            "label": "🎨 Format: Current File",
            "type": "shell",
            "command": "black",
            "args": ["${file}"],
            "group": "build",
            "presentation": {
                "echo": false,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "group": "quality"
            }
        },
        {
            "label": "🔍 Lint: Pylint Odoo",
            "type": "shell",
            "command": "make",
            "args": ["pylint-odoo"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "quality"
            },
            "problemMatcher": {
                "owner": "pylint-odoo",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+): (\\w+): (.+) \\((.+)\\)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5,
                    "code": 6
                }
            }
        },
        {
            "label": "🔍 Type Check: MyPy",
            "type": "shell",
            "command": "make",
            "args": ["mypy"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "quality"
            },
            "problemMatcher": {
                "owner": "mypy",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.+):(\\d+): (error|warning|note): (.+)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },

        {
            "label": "✅ Validate: All Modules",
            "type": "shell",
            "command": "make",
            "args": ["validate"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "validation"
            },
            "problemMatcher": [
                {
                    "owner": "odoo-validator",
                    "fileLocation": ["relative", "${workspaceFolder}"],
                    "pattern": {
                        "regexp": "^ERROR: ([^:]+): (.*)$",
                        "file": 1,
                        "message": 2,
                        "severity": "error"
                    }
                },
                "$odoo-xml-validation",
                "$odoo-manifest-error",
                "$odoo-field-definition-error"
            ]
        },
        {
            "label": "✅ Validate: Current Module",
            "type": "shell",
            "command": "make",
            "args": ["validate-module", "MODULE=${input:moduleName}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "validation"
            },
            "problemMatcher": [
                {
                    "owner": "odoo-validator",
                    "fileLocation": ["relative", "${workspaceFolder}"],
                    "pattern": {
                        "regexp": "^ERROR: ([^:]+): (.*)$",
                        "file": 1,
                        "message": 2,
                        "severity": "error"
                    }
                },
                "$odoo-xml-validation",
                "$odoo-manifest-error",
                "$odoo-field-definition-error"
            ]
        },
        {
            "label": "✅ Validate: Pre-commit Hooks",
            "type": "shell",
            "command": "make",
            "args": ["pre-commit"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "validation"
            },
            "problemMatcher": ["$python", "$odoo-comprehensive"]
        },

        {
            "label": "📦 Module: Test Installation",
            "type": "shell",
            "command": "make",
            "args": ["module-test-install", "MODULE=${input:moduleName}", "DEMO=true"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "modules"
            },
            "problemMatcher": ["$python", "$odoo-module-import-error", "$odoo-manifest-error", "$odoo-comprehensive"]
        },
        {
            "label": "📦 Module: Test Upgrade",
            "type": "shell",
            "command": "make",
            "args": ["module-test-upgrade", "MODULE=${input:moduleName}"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "modules"
            },
            "problemMatcher": ["$python", "$odoo-migration-error", "$odoo-database-constraint", "$odoo-comprehensive"]
        },
        {
            "label": "📦 Module: Test Dependencies",
            "type": "shell",
            "command": "make",
            "args": ["module-test-dependencies", "MODULE=${input:moduleName}"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "modules"
            },
            "problemMatcher": ["$python", "$odoo-module-import-error", "$odoo-comprehensive"]
        },
        {
            "label": "📦 Module: Royal Textiles Complete Test",
            "type": "shell",
            "command": "make",
            "args": ["module-test-royal-textiles"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "modules"
            },
            "problemMatcher": ["$python", "$odoo-module-import-error", "$odoo-manifest-error", "$odoo-field-definition-error", "$odoo-comprehensive"]
        },
        {
            "label": "📦 Module: RTP Customers Complete Test",
            "type": "shell",
            "command": "make",
            "args": ["module-test-rtp-customers"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "modules"
            },
            "problemMatcher": ["$python", "$odoo-module-import-error", "$odoo-manifest-error", "$odoo-field-definition-error", "$odoo-comprehensive"]
        },

        {
            "label": "🗃️ DB: Create Database",
            "type": "shell",
            "command": "make",
            "args": ["db-create", "NAME=${input:databaseName}", "TYPE=dev"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "database"
            },
            "problemMatcher": ["$odoo-database-constraint"]
        },
        {
            "label": "🗃️ DB: List Databases",
            "type": "shell",
            "command": "make",
            "args": ["db-list"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "database"
            },
            "problemMatcher": ["$odoo-database-constraint"]
        },
        {
            "label": "🗃️ DB: Drop Database",
            "type": "shell",
            "command": "make",
            "args": ["db-drop", "NAME=${input:databaseName}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "database"
            },
            "problemMatcher": ["$odoo-database-constraint"]
        },
        {
            "label": "🗃️ DB: Backup Database",
            "type": "shell",
            "command": "make",
            "args": ["backup-create", "NAME=${input:databaseName}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "database"
            },
            "problemMatcher": ["$odoo-database-constraint"]
        },
        {
            "label": "🗃️ DB: Create Test Database",
            "type": "shell",
            "command": "make",
            "args": ["test-db-create", "NAME=${input:testDatabaseName}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "database"
            },
            "problemMatcher": ["$odoo-database-constraint"]
        },
        {
            "label": "🗃️ DB: Generate Sample Data",
            "type": "shell",
            "command": "make",
            "args": ["data-development", "DB=${input:databaseName}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "database"
            },
            "problemMatcher": ["$odoo-database-constraint", "$odoo-orm-error"]
        },

        {
            "label": "🚀 Server: Start Odoo",
            "type": "shell",
            "command": "make",
            "args": ["start-odoo"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "group": "server"
            },
            "isBackground": true,
            "problemMatcher": ["$odoo-server-startup", "$odoo-module-import-error", "$odoo-database-constraint", "$odoo-comprehensive"]
        },
        {
            "label": "🚀 Server: Stop Odoo",
            "type": "shell",
            "command": "make",
            "args": ["stop-odoo"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "server"
            },
            "problemMatcher": []
        },
        {
            "label": "🚀 Server: Restart Odoo",
            "type": "shell",
            "command": "make",
            "args": ["restart-odoo"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "server"
            },
            "problemMatcher": ["$odoo-server-startup", "$odoo-module-import-error", "$odoo-comprehensive"]
        },
        {
            "label": "🚀 Server: Start with Debugpy",
            "type": "shell",
            "command": "make",
            "args": ["start-odoo-debug"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "group": "server"
            },
            "isBackground": true,
            "problemMatcher": ["$odoo-server-startup", "$odoo-module-import-error", "$odoo-database-constraint", "$odoo-comprehensive"]
        },

        {
            "label": "🐳 Docker: Start Development Environment",
            "type": "shell",
            "command": "make",
            "args": ["docker-up", "PROFILE=development"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "group": "docker"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "🐳 Docker: Stop Services",
            "type": "shell",
            "command": "make",
            "args": ["docker-down"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "docker"
            },
            "problemMatcher": []
        },
        {
            "label": "🐳 Docker: View Logs",
            "type": "shell",
            "command": "make",
            "args": ["docker-logs", "SERVICE=${input:dockerService}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "docker"
            },
            "problemMatcher": []
        },
        {
            "label": "🐳 Docker: Open Shell",
            "type": "shell",
            "command": "make",
            "args": ["docker-shell", "SERVICE=${input:dockerService}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "docker"
            },
            "problemMatcher": []
        },
        {
            "label": "🐳 Docker: Status",
            "type": "shell",
            "command": "make",
            "args": ["docker-status"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "docker"
            },
            "problemMatcher": []
        },

        {
            "label": "🐛 Debug: Setup Debugpy",
            "type": "shell",
            "command": "make",
            "args": ["setup-debugpy"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "debug"
            },
            "problemMatcher": []
        },
        {
            "label": "🐛 Debug: Test Connection",
            "type": "shell",
            "command": "make",
            "args": ["debug-test-connection"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "debug"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "🐛 Debug: Show Help",
            "type": "shell",
            "command": "make",
            "args": ["debug-help"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "debug"
            },
            "problemMatcher": []
        },
        {
            "label": "🐛 Debug: Validate VS Code Config",
            "type": "shell",
            "command": "make",
            "args": ["validate-vscode-config"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "debug"
            },
            "problemMatcher": []
        },

        {
            "label": "🚢 Deploy: Check Readiness",
            "type": "shell",
            "command": "make",
            "args": ["deploy-check"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "group": "deploy"
            },
            "problemMatcher": [
                "$python",
                {
                    "owner": "deploy-check",
                    "fileLocation": ["relative", "${workspaceFolder}"],
                    "pattern": {
                        "regexp": "^❌ (.*)$",
                        "message": 1,
                        "severity": "error"
                    }
                }
            ]
        },
        {
            "label": "🚢 Deploy: Full Validation Pipeline",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "make lint && make validate && make test && make coverage-validate && echo '✅ All checks passed!'"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "group": "deploy"
            },
            "problemMatcher": ["$python"]
        },
        {
            "label": "🚢 Deploy: CI Simulation",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "make test-integration-ci && make test-performance-ci && make module-test-ci"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "group": "deploy"
            },
            "problemMatcher": ["$python"]
        },

        {
            "label": "🧹 Utility: Clean Temporary Files",
            "type": "shell",
            "command": "make",
            "args": ["clean"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "group": "utility"
            },
            "problemMatcher": []
        },
        {
            "label": "🧹 Utility: Clean Coverage Files",
            "type": "shell",
            "command": "make",
            "args": ["coverage-clean"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "group": "utility"
            },
            "problemMatcher": []
        },
        {
            "label": "🧹 Utility: Clean Debug Processes",
            "type": "shell",
            "command": "make",
            "args": ["debug-cleanup"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "utility"
            },
            "problemMatcher": []
        },
        {
            "label": "📖 Help: Show All Make Commands",
            "type": "shell",
            "command": "make",
            "args": ["help"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "group": "utility"
            },
            "problemMatcher": []
        },

        // ==========================================
        // Terminal Profile Tasks - Task 5.7
        // ==========================================
        {
            "label": "🖥️ Terminal: Open Development Environment",
            "type": "shell",
            "command": "echo",
            "args": ["🚀 Odoo Development Terminal Ready!"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-development.conf",
                        "ODOO_LOG_LEVEL": "info",
                        "RTP_ENV": "development"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "🧪 Terminal: Open Testing Environment",
            "type": "shell",
            "command": "echo",
            "args": ["🧪 Odoo Testing Terminal Ready!"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-testing.conf",
                        "ODOO_LOG_LEVEL": "debug",
                        "RTP_ENV": "testing",
                        "RTP_TESTING": "true"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "🚀 Terminal: Open Production Environment",
            "type": "shell",
            "command": "echo",
            "args": ["🚀 Odoo Production Terminal Ready!"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-production.conf",
                        "ODOO_LOG_LEVEL": "warning",
                        "RTP_ENV": "production",
                        "RTP_TESTING": "false"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "🗃️ Terminal: Open Database Management",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '🗃️ Database Terminal Ready!' && echo 'PostgreSQL Commands Available:' && echo '  • psql -U odoo -h localhost -p 5432' && echo '  • make db-list' && echo '  • make backup-list'"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "PGUSER": "odoo",
                        "PGHOST": "localhost",
                        "PGPORT": "5432",
                        "PGDATABASE": "postgres"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "🐳 Terminal: Open Docker Environment",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '🐳 Docker Terminal Ready!' && echo 'Docker Commands Available:' && echo '  • docker-compose ps' && echo '  • make docker-status' && echo '  • make docker-logs SERVICE=odoo'"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "COMPOSE_PROJECT_NAME": "rtp-denver",
                        "DOCKER_BUILDKIT": "1",
                        "COMPOSE_DOCKER_CLI_BUILD": "1"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "⚡ Terminal: Quick Commands Menu",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '⚡ Royal Textiles Odoo Quick Commands' && echo '===========================================' && echo '🔧 Development:' && echo '  • make start-odoo' && echo '  • make stop-odoo' && echo '  • make restart-odoo' && echo '' && echo '🧪 Testing:' && echo '  • make test' && echo '  • make test-module MODULE=royal_textiles_sales' && echo '  • make coverage' && echo '' && echo '🔍 Quality:' && echo '  • make lint' && echo '  • make validate' && echo '  • make format' && echo '' && echo '🗃️ Database:' && echo '  • make db-create NAME=mydb' && echo '  • make db-list' && echo '  • make backup-create NAME=mydb' && echo '' && echo '📦 Modules:' && echo '  • make module-test-royal-textiles' && echo '  • make module-test-rtp-customers' && echo '' && echo '🚀 Deployment:' && echo '  • make deploy-check' && echo '' && echo '📖 Help:' && echo '  • make help' && echo ''"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "problemMatcher": []
        },
        {
            "label": "🎯 Terminal: Module Development Session",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '🎯 Module Development Session for: ${input:moduleName}' && echo 'Environment: Development' && echo 'Quick Commands:' && echo '  • make test-module MODULE=${input:moduleName}' && echo '  • make validate-module MODULE=${input:moduleName}' && echo '  • make module-test-install MODULE=${input:moduleName}' && echo '  • make module-test-upgrade MODULE=${input:moduleName}' && echo '' && echo 'Ready for development!' && cd custom_modules/${input:moduleName} && pwd && ls -la"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-development.conf",
                        "ODOO_LOG_LEVEL": "info",
                        "RTP_ENV": "development",
                        "RTP_CURRENT_MODULE": "${input:moduleName}"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "🔧 Terminal: Interactive Odoo Shell",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '🔧 Starting Odoo Shell...' && echo 'Database: ${input:databaseName}' && echo 'Use: self.env to access environment' && echo 'Use: self.env.user to access current user' && echo 'Use: self.env[\\'model.name\\'] to access models' && echo '' && python3 local-odoo/odoo/odoo-bin shell -c local-odoo/config/odoo-development.conf -d ${input:databaseName}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-development.conf",
                        "ODOO_LOG_LEVEL": "info",
                        "RTP_ENV": "development"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "⚡ Terminal: Performance Monitoring",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '⚡ Performance Monitoring Terminal' && echo 'Commands available:' && echo '  • htop - System resources' && echo '  • iostat - I/O statistics' && echo '  • pg_stat_activity - PostgreSQL activity' && echo '  • make test-performance - Run performance tests' && echo '  • make test-database-performance - Database performance' && echo '  • make test-view-performance - View performance' && echo '' && echo 'Monitoring tools ready!'"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-development.conf",
                        "PERFORMANCE_MONITORING": "true",
                        "RTP_ENV": "performance"
                    }
                }
            },
            "problemMatcher": []
        },
        {
            "label": "🎨 Terminal: Development Tools",
            "type": "shell",
            "command": "bash",
            "args": ["-c", "echo '🎨 Development Tools Terminal' && echo '=============================' && echo '🔧 Code Quality:' && echo '  • make lint - Run all linting' && echo '  • make format - Format code' && echo '  • make validate - Validate modules' && echo '' && echo '🐛 Debugging:' && echo '  • make debug-help - Show debug options' && echo '  • make setup-debugpy - Setup debugging' && echo '  • make debug-test-connection - Test debug connection' && echo '' && echo '✂️ Snippets:' && echo '  • make snippets-help - Show available snippets' && echo '  • make snippets-list - List all snippets' && echo '' && echo '🔧 Workspace:' && echo '  • make workspace-validate - Validate workspace' && echo '  • make workspace-info - Show workspace info' && echo ''"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "group": "terminal"
            },
            "options": {
                "shell": {
                    "executable": "zsh",
                    "args": ["-l"],
                    "env": {
                        "ODOO_RC": "${workspaceFolder}/local-odoo/config/odoo-development.conf",
                        "DEV_TOOLS": "true",
                        "RTP_ENV": "development"
                    }
                }
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "moduleName",
            "description": "Enter the module name",
            "default": "royal_textiles_sales",
            "type": "promptString"
        },
        {
            "id": "databaseName",
            "description": "Enter database name",
            "default": "rtp_dev",
            "type": "promptString"
        },
        {
            "id": "testDatabaseName",
            "description": "Enter test database name",
            "default": "test_rtp",
            "type": "promptString"
        },
        {
            "id": "dockerService",
            "description": "Enter Docker service name",
            "default": "odoo",
            "type": "promptString"
        },
        {
            "id": "testType",
            "description": "Select test type",
            "default": "unit",
            "type": "pickString",
            "options": [
                "unit",
                "integration",
                "performance",
                "functional",
                "all"
            ]
        },
        {
            "id": "coverageThreshold",
            "description": "Enter coverage threshold percentage",
            "default": "75",
            "type": "promptString"
        }
    ]
}
