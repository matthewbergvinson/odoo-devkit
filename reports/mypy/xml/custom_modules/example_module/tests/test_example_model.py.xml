<?xml-stylesheet type="text/xsl" href="../../../../mypy-html.xslt"?><mypy-report-file name="custom_modules/example_module/tests/test_example_model.py" module="custom_modules.example_module.tests.test_example_model"><line any_info="No Anys on this line!" content="from odoo.exceptions import ValidationError" number="1" precision="any"/><line any_info="No Anys on this line!" content="from odoo.tests.common import TransactionCase" number="2" precision="any"/><line any_info="No Anys on this line!" content="" number="3" precision="empty"/><line any_info="No Anys on this line!" content="" number="4" precision="empty"/><line any_info="No Anys on this line!" content="class TestExampleModel(TransactionCase):" number="5" precision="precise"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test cases for the example model.&quot;&quot;&quot;" number="6" precision="empty"/><line any_info="No Anys on this line!" content="" number="7" precision="empty"/><line any_info="No Anys on this line!" content="    def setUp(self):" number="8" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Set up test data.&quot;&quot;&quot;" number="9" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        super().setUp()" number="10" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        self.example_model = self.env['example.model']" number="11" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        self.tag_model = self.env['example.tag']" number="12" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        self.line_model = self.env['example.line']" number="13" precision="any"/><line any_info="No Anys on this line!" content="" number="14" precision="empty"/><line any_info="No Anys on this line!" content="        # Create test tags" number="15" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.tag_test = self.tag_model.create({'name': 'Test Tag', 'color': 1})" number="16" precision="any"/><line any_info="No Anys on this line!" content="" number="17" precision="empty"/><line any_info="No Anys on this line!" content="        # Create test partner" number="18" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.partner = self.env['res.partner'].create({'name': 'Test Partner', 'email': 'test@example.com'})" number="19" precision="any"/><line any_info="No Anys on this line!" content="" number="20" precision="empty"/><line any_info="No Anys on this line!" content="    def test_create_example_record(self):" number="21" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test creating an example record.&quot;&quot;&quot;" number="22" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create(" number="23" precision="any"/><line any_info="No Anys on this line!" content="            {" number="24" precision="empty"/><line any_info="No Anys on this line!" content="                'name': 'Test Example'," number="25" precision="any"/><line any_info="No Anys on this line!" content="                'description': 'Test description'," number="26" precision="any"/><line any_info="No Anys on this line!" content="                'value': 100.0," number="27" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                'partner_id': self.partner.id," number="28" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                'tag_ids': [(6, 0, [self.tag_test.id])]," number="29" precision="any"/><line any_info="No Anys on this line!" content="            }" number="30" precision="empty"/><line any_info="No Anys on this line!" content="        )" number="31" precision="empty"/><line any_info="No Anys on this line!" content="" number="32" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.name, 'Test Example')" number="33" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.description, 'Test description')" number="34" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.value, 100.0)" number="35" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.state, 'draft')" number="36" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(example.partner_id, self.partner)" number="37" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertIn(self.tag_test, example.tag_ids)" number="38" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertTrue(example.active)" number="39" precision="any"/><line any_info="No Anys on this line!" content="" number="40" precision="empty"/><line any_info="No Anys on this line!" content="    def test_state_transitions(self):" number="41" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test state transitions.&quot;&quot;&quot;" number="42" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create({'name': 'Test Example', 'value': 100.0})" number="43" precision="any"/><line any_info="No Anys on this line!" content="" number="44" precision="empty"/><line any_info="No Anys on this line!" content="        # Test confirm action" number="45" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        example.action_confirm()" number="46" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.state, 'confirmed')" number="47" precision="any"/><line any_info="No Anys on this line!" content="" number="48" precision="empty"/><line any_info="No Anys on this line!" content="        # Test done action" number="49" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        example.action_done()" number="50" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.state, 'done')" number="51" precision="any"/><line any_info="No Anys on this line!" content="" number="52" precision="empty"/><line any_info="No Anys on this line!" content="        # Test reset to draft" number="53" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        example.action_reset_to_draft()" number="54" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.state, 'draft')" number="55" precision="any"/><line any_info="No Anys on this line!" content="" number="56" precision="empty"/><line any_info="No Anys on this line!" content="        # Test cancel action" number="57" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        example.action_cancel()" number="58" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.state, 'cancelled')" number="59" precision="any"/><line any_info="No Anys on this line!" content="" number="60" precision="empty"/><line any_info="No Anys on this line!" content="    def test_compute_total_value(self):" number="61" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test total value computation.&quot;&quot;&quot;" number="62" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create({'name': 'Test Example', 'value': 100.0})" number="63" precision="any"/><line any_info="No Anys on this line!" content="" number="64" precision="empty"/><line any_info="No Anys on this line!" content="        # Initially no lines, total should be 0" number="65" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.total_value, 0.0)" number="66" precision="any"/><line any_info="No Anys on this line!" content="" number="67" precision="empty"/><line any_info="No Anys on this line!" content="        # Add lines" number="68" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.line_model.create({'example_id': example.id, 'name': 'Line 1', 'value': 50.0})" number="69" precision="any"/><line any_info="No Anys on this line!" content="" number="70" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.line_model.create({'example_id': example.id, 'name': 'Line 2', 'value': 30.0})" number="71" precision="any"/><line any_info="No Anys on this line!" content="" number="72" precision="empty"/><line any_info="No Anys on this line!" content="        # Total should be computed" number="73" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.total_value, 80.0)" number="74" precision="any"/><line any_info="No Anys on this line!" content="" number="75" precision="empty"/><line any_info="No Anys on this line!" content="    def test_value_constraint(self):" number="76" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test value constraint validation.&quot;&quot;&quot;" number="77" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create({'name': 'Test Example', 'value': 100.0})" number="78" precision="any"/><line any_info="No Anys on this line!" content="" number="79" precision="empty"/><line any_info="No Anys on this line!" content="        # Test positive value is allowed" number="80" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        example.write({'value': 50.0})" number="81" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.value, 50.0)" number="82" precision="any"/><line any_info="No Anys on this line!" content="" number="83" precision="empty"/><line any_info="No Anys on this line!" content="        # Test negative value raises ValidationError" number="84" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Unimported (x1)" content="        with self.assertRaises(ValidationError):" number="85" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="            example.write({'value': -10.0})" number="86" precision="any"/><line any_info="No Anys on this line!" content="" number="87" precision="empty"/><line any_info="No Anys on this line!" content="    def test_search_and_filtering(self):" number="88" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test search and filtering functionality.&quot;&quot;&quot;" number="89" precision="empty"/><line any_info="No Anys on this line!" content="        # Create test records" number="90" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example1 = self.example_model.create({'name': 'Example 1', 'value': 100.0, 'state': 'draft'})" number="91" precision="any"/><line any_info="No Anys on this line!" content="" number="92" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example2 = self.example_model.create({'name': 'Example 2', 'value': 200.0, 'state': 'confirmed'})" number="93" precision="any"/><line any_info="No Anys on this line!" content="" number="94" precision="empty"/><line any_info="No Anys on this line!" content="        # Test search by name" number="95" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        results = self.example_model.search([('name', 'ilike', 'Example 1')])" number="96" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertIn(example1, results)" number="97" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertNotIn(example2, results)" number="98" precision="any"/><line any_info="No Anys on this line!" content="" number="99" precision="empty"/><line any_info="No Anys on this line!" content="        # Test search by state" number="100" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        results = self.example_model.search([('state', '=', 'confirmed')])" number="101" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertIn(example2, results)" number="102" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertNotIn(example1, results)" number="103" precision="any"/><line any_info="No Anys on this line!" content="" number="104" precision="empty"/><line any_info="No Anys on this line!" content="        # Test search by value range" number="105" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        results = self.example_model.search([('value', '&gt;', 150.0)])" number="106" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertIn(example2, results)" number="107" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertNotIn(example1, results)" number="108" precision="any"/><line any_info="No Anys on this line!" content="" number="109" precision="empty"/><line any_info="No Anys on this line!" content="    def test_tag_relationship(self):" number="110" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test many2many relationship with tags.&quot;&quot;&quot;" number="111" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create({'name': 'Test Example', 'value': 100.0})" number="112" precision="any"/><line any_info="No Anys on this line!" content="" number="113" precision="empty"/><line any_info="No Anys on this line!" content="        # Create additional tags" number="114" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        tag1 = self.tag_model.create({'name': 'Tag 1', 'color': 1})" number="115" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        tag2 = self.tag_model.create({'name': 'Tag 2', 'color': 2})" number="116" precision="any"/><line any_info="No Anys on this line!" content="" number="117" precision="empty"/><line any_info="No Anys on this line!" content="        # Add tags to example" number="118" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        example.write({'tag_ids': [(6, 0, [tag1.id, tag2.id])]})" number="119" precision="any"/><line any_info="No Anys on this line!" content="" number="120" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(len(example.tag_ids), 2)" number="121" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertIn(tag1, example.tag_ids)" number="122" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertIn(tag2, example.tag_ids)" number="123" precision="any"/><line any_info="No Anys on this line!" content="" number="124" precision="empty"/><line any_info="No Anys on this line!" content="    def test_line_relationship(self):" number="125" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test one2many relationship with lines.&quot;&quot;&quot;" number="126" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create({'name': 'Test Example', 'value': 100.0})" number="127" precision="any"/><line any_info="No Anys on this line!" content="" number="128" precision="empty"/><line any_info="No Anys on this line!" content="        # Create lines" number="129" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        line1 = self.line_model.create({'example_id': example.id, 'name': 'Line 1', 'value': 50.0, 'sequence': 10})" number="130" precision="any"/><line any_info="No Anys on this line!" content="" number="131" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        line2 = self.line_model.create({'example_id': example.id, 'name': 'Line 2', 'value': 30.0, 'sequence': 20})" number="132" precision="any"/><line any_info="No Anys on this line!" content="" number="133" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(len(example.line_ids), 2)" number="134" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertIn(line1, example.line_ids)" number="135" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertIn(line2, example.line_ids)" number="136" precision="any"/><line any_info="No Anys on this line!" content="" number="137" precision="empty"/><line any_info="No Anys on this line!" content="        # Test cascade delete" number="138" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        example.unlink()" number="139" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertFalse(line1.exists())" number="140" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertFalse(line2.exists())" number="141" precision="any"/><line any_info="No Anys on this line!" content="" number="142" precision="empty"/><line any_info="No Anys on this line!" content="    def test_default_values(self):" number="143" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test default values are set correctly.&quot;&quot;&quot;" number="144" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example = self.example_model.create({'name': 'Test Example'})" number="145" precision="any"/><line any_info="No Anys on this line!" content="" number="146" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.state, 'draft')" number="147" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertTrue(example.active)" number="148" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.value, 0.0)" number="149" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        self.assertEqual(example.total_value, 0.0)" number="150" precision="any"/><line any_info="No Anys on this line!" content="" number="151" precision="empty"/><line any_info="No Anys on this line!" content="    def test_required_fields(self):" number="152" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test required field validation.&quot;&quot;&quot;" number="153" precision="empty"/><line any_info="No Anys on this line!" content="        # Test that name is required" number="154" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        with self.assertRaises(Exception):" number="155" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            self.example_model.create({'value': 100.0})" number="156" precision="any"/><line any_info="No Anys on this line!" content="" number="157" precision="empty"/><line any_info="No Anys on this line!" content="    def test_ordering(self):" number="158" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Test record ordering.&quot;&quot;&quot;" number="159" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example_z = self.example_model.create({'name': 'Z Example', 'value': 100.0})" number="160" precision="any"/><line any_info="No Anys on this line!" content="" number="161" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        example_a = self.example_model.create({'name': 'A Example', 'value': 100.0})" number="162" precision="any"/><line any_info="No Anys on this line!" content="" number="163" precision="empty"/><line any_info="No Anys on this line!" content="        # Search should return records ordered by name" number="164" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        results = self.example_model.search([('name', 'in', ['Z Example', 'A Example'])])" number="165" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(results[0], example_a)" number="166" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        self.assertEqual(results[1], example_z)" number="167" precision="any"/></mypy-report-file>
