<?xml-stylesheet type="text/xsl" href="../../mypy-html.xslt"?><mypy-report-file name="scripts/validate-security.py" module="scripts.validate-security"><line any_info="No Anys on this line!" content="#!/usr/bin/env python3" number="1" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="2" precision="empty"/><line any_info="No Anys on this line!" content="Odoo Security File Validation Script" number="3" precision="empty"/><line any_info="No Anys on this line!" content="Royal Textiles Project - Local Testing Infrastructure" number="4" precision="empty"/><line any_info="No Anys on this line!" content="" number="5" precision="empty"/><line any_info="No Anys on this line!" content="This script provides comprehensive validation of security files in Odoo modules," number="6" precision="empty"/><line any_info="No Anys on this line!" content="including CSV access rights files, XML security rules, group definitions," number="7" precision="empty"/><line any_info="No Anys on this line!" content="and security structure validation." number="8" precision="empty"/><line any_info="No Anys on this line!" content="" number="9" precision="empty"/><line any_info="No Anys on this line!" content="Key Features:" number="10" precision="empty"/><line any_info="No Anys on this line!" content="- CSV format and structure validation" number="11" precision="empty"/><line any_info="No Anys on this line!" content="- Access rights column validation" number="12" precision="empty"/><line any_info="No Anys on this line!" content="- Security rule XML validation" number="13" precision="empty"/><line any_info="No Anys on this line!" content="- Group definition validation" number="14" precision="empty"/><line any_info="No Anys on this line!" content="- Permission value validation" number="15" precision="empty"/><line any_info="No Anys on this line!" content="- Reference integrity checking" number="16" precision="empty"/><line any_info="No Anys on this line!" content="- Security file organization validation" number="17" precision="empty"/><line any_info="No Anys on this line!" content="" number="18" precision="empty"/><line any_info="No Anys on this line!" content="Usage:" number="19" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-security.py [module_name]" number="20" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-security.py  # validates all modules" number="21" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="22" precision="empty"/><line any_info="No Anys on this line!" content="" number="23" precision="empty"/><line any_info="No Anys on this line!" content="import csv" number="24" precision="precise"/><line any_info="No Anys on this line!" content="import sys" number="25" precision="precise"/><line any_info="No Anys on this line!" content="import xml.etree.ElementTree as ET" number="26" precision="precise"/><line any_info="No Anys on this line!" content="from pathlib import Path" number="27" precision="precise"/><line any_info="No Anys on this line!" content="from typing import Dict, List, Optional, Set" number="28" precision="precise"/><line any_info="No Anys on this line!" content="" number="29" precision="empty"/><line any_info="No Anys on this line!" content="" number="30" precision="empty"/><line any_info="No Anys on this line!" content="class SecurityValidator:" number="31" precision="precise"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Comprehensive validator for Odoo security files.&quot;&quot;&quot;" number="32" precision="empty"/><line any_info="No Anys on this line!" content="" number="33" precision="empty"/><line any_info="No Anys on this line!" content="    # Required columns for ir.model.access.csv" number="34" precision="empty"/><line any_info="No Anys on this line!" content="    REQUIRED_ACCESS_COLUMNS = {" number="35" precision="precise"/><line any_info="No Anys on this line!" content="        'id'," number="36" precision="precise"/><line any_info="No Anys on this line!" content="        'name'," number="37" precision="precise"/><line any_info="No Anys on this line!" content="        'model_id:id'," number="38" precision="precise"/><line any_info="No Anys on this line!" content="        'group_id:id'," number="39" precision="precise"/><line any_info="No Anys on this line!" content="        'perm_read'," number="40" precision="precise"/><line any_info="No Anys on this line!" content="        'perm_write'," number="41" precision="precise"/><line any_info="No Anys on this line!" content="        'perm_create'," number="42" precision="precise"/><line any_info="No Anys on this line!" content="        'perm_unlink'," number="43" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="44" precision="empty"/><line any_info="No Anys on this line!" content="" number="45" precision="empty"/><line any_info="No Anys on this line!" content="    # Optional columns for ir.model.access.csv" number="46" precision="empty"/><line any_info="No Anys on this line!" content="    OPTIONAL_ACCESS_COLUMNS = {'active', 'comment'}" number="47" precision="precise"/><line any_info="No Anys on this line!" content="" number="48" precision="empty"/><line any_info="No Anys on this line!" content="    # Valid boolean values for permission columns" number="49" precision="empty"/><line any_info="No Anys on this line!" content="    VALID_PERMISSION_VALUES = {'1', '0', 'True', 'False', 'true', 'false'}" number="50" precision="precise"/><line any_info="No Anys on this line!" content="" number="51" precision="empty"/><line any_info="No Anys on this line!" content="    # Valid security models in XML" number="52" precision="empty"/><line any_info="No Anys on this line!" content="    SECURITY_MODELS = {" number="53" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.model.access'," number="54" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.rule'," number="55" precision="precise"/><line any_info="No Anys on this line!" content="        'res.groups'," number="56" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.module.category'," number="57" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.actions.act_window'," number="58" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.ui.menu'," number="59" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="60" precision="empty"/><line any_info="No Anys on this line!" content="" number="61" precision="empty"/><line any_info="No Anys on this line!" content="    # Required fields for different security record types" number="62" precision="empty"/><line any_info="No Anys on this line!" content="    REQUIRED_FIELDS = {" number="63" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.model.access': {'name', 'model_id', 'perm_read', 'perm_write', 'perm_create', 'perm_unlink'}," number="64" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.rule': {'name', 'model_id'}," number="65" precision="precise"/><line any_info="No Anys on this line!" content="        'res.groups': {'name', 'category_id'}," number="66" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.module.category': {'name'}," number="67" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="68" precision="empty"/><line any_info="No Anys on this line!" content="" number="69" precision="empty"/><line any_info="No Anys on this line!" content="    def __init__(self, base_path: str = &quot;custom_modules&quot;):" number="70" precision="precise"/><line any_info="No Anys on this line!" content="        self.base_path = Path(base_path)" number="71" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors: List[str] = []" number="72" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings: List[str] = []" number="73" precision="precise"/><line any_info="No Anys on this line!" content="        self.info: List[str] = []" number="74" precision="precise"/><line any_info="No Anys on this line!" content="        self.module_models: Dict[str, Set[str]] = {}" number="75" precision="precise"/><line any_info="No Anys on this line!" content="        self.module_groups: Dict[str, Set[str]] = {}" number="76" precision="precise"/><line any_info="No Anys on this line!" content="" number="77" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def error(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="78" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an error message.&quot;&quot;&quot;" number="79" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="80" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="81" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="82" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors.append(f&quot;❌ {location}: {message}&quot;)" number="83" precision="precise"/><line any_info="No Anys on this line!" content="" number="84" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def warning(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="85" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add a warning message.&quot;&quot;&quot;" number="86" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="87" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="88" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="89" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings.append(f&quot;⚠️  {location}: {message}&quot;)" number="90" precision="precise"/><line any_info="No Anys on this line!" content="" number="91" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def add_info(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="92" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an info message.&quot;&quot;&quot;" number="93" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="94" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="95" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="96" precision="precise"/><line any_info="No Anys on this line!" content="        self.info.append(f&quot;ℹ️  {location}: {message}&quot;)" number="97" precision="precise"/><line any_info="No Anys on this line!" content="" number="98" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_csv_structure(self, file_path: Path) -&gt; bool:" number="99" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate CSV file structure and format.&quot;&quot;&quot;" number="100" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="101" precision="precise"/><line any_info="No Anys on this line!" content="" number="102" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="103" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x7)&#10;Explicit (x1)" content="            with open(file_path, 'r', encoding='utf-8') as f:" number="104" precision="precise"/><line any_info="No Anys on this line!" content="                # Check if file is empty" number="105" precision="empty"/><line any_info="No Anys on this line!" content="                content = f.read().strip()" number="106" precision="precise"/><line any_info="No Anys on this line!" content="                if not content:" number="107" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(&quot;Empty CSV file&quot;, str(file_path))" number="108" precision="any"/><line any_info="No Anys on this line!" content="                    return False" number="109" precision="precise"/><line any_info="No Anys on this line!" content="" number="110" precision="empty"/><line any_info="No Anys on this line!" content="                # Reset file pointer for CSV reader" number="111" precision="empty"/><line any_info="No Anys on this line!" content="                f.seek(0)" number="112" precision="precise"/><line any_info="No Anys on this line!" content="" number="113" precision="empty"/><line any_info="No Anys on this line!" content="                # Detect CSV dialect" number="114" precision="empty"/><line any_info="No Anys on this line!" content="                sample = f.read(1024)" number="115" precision="precise"/><line any_info="No Anys on this line!" content="                f.seek(0)" number="116" precision="precise"/><line any_info="No Anys on this line!" content="" number="117" precision="empty"/><line any_info="No Anys on this line!" content="                try:" number="118" precision="empty"/><line any_info="No Anys on this line!" content="                    dialect = csv.Sniffer().sniff(sample)" number="119" precision="precise"/><line any_info="No Anys on this line!" content="                except csv.Error:" number="120" precision="precise"/><line any_info="No Anys on this line!" content="                    # Use default dialect if detection fails" number="121" precision="empty"/><line any_info="No Anys on this line!" content="                    dialect = csv.excel" number="122" precision="precise"/><line any_info="No Anys on this line!" content="" number="123" precision="empty"/><line any_info="No Anys on this line!" content="                # Read CSV with detected dialect" number="124" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)&#10;Explicit (x1)" content="                reader = csv.DictReader(f, dialect=dialect)" number="125" precision="precise"/><line any_info="No Anys on this line!" content="" number="126" precision="empty"/><line any_info="No Anys on this line!" content="                # Validate column structure" number="127" precision="empty"/><line any_info="No Anys on this line!" content="                if not reader.fieldnames:" number="128" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.error(&quot;CSV file has no headers&quot;, str(file_path))" number="129" precision="any"/><line any_info="No Anys on this line!" content="                    return False" number="130" precision="precise"/><line any_info="No Anys on this line!" content="" number="131" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="                fieldnames = set(reader.fieldnames)" number="132" precision="precise"/><line any_info="No Anys on this line!" content="" number="133" precision="empty"/><line any_info="No Anys on this line!" content="                # Check for required columns" number="134" precision="empty"/><line any_info="No Anys on this line!" content="                missing_required = self.REQUIRED_ACCESS_COLUMNS - fieldnames" number="135" precision="precise"/><line any_info="No Anys on this line!" content="                if missing_required:" number="136" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.error(f&quot;Missing required columns: {', '.join(missing_required)}&quot;, str(file_path))" number="137" precision="any"/><line any_info="No Anys on this line!" content="                    success = False" number="138" precision="precise"/><line any_info="No Anys on this line!" content="" number="139" precision="empty"/><line any_info="No Anys on this line!" content="                # Check for unknown columns" number="140" precision="empty"/><line any_info="No Anys on this line!" content="                valid_columns = self.REQUIRED_ACCESS_COLUMNS | self.OPTIONAL_ACCESS_COLUMNS" number="141" precision="precise"/><line any_info="No Anys on this line!" content="                unknown_columns = fieldnames - valid_columns" number="142" precision="precise"/><line any_info="No Anys on this line!" content="                if unknown_columns:" number="143" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(f&quot;Unknown columns: {', '.join(unknown_columns)}&quot;, str(file_path))" number="144" precision="any"/><line any_info="No Anys on this line!" content="" number="145" precision="empty"/><line any_info="No Anys on this line!" content="                # Validate row content" number="146" precision="empty"/><line any_info="No Anys on this line!" content="                row_num = 1" number="147" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="                for row in reader:" number="148" precision="imprecise"/><line any_info="No Anys on this line!" content="                    row_num += 1" number="149" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="                    success &amp;= self.validate_csv_row(row, file_path, row_num)" number="150" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="151" precision="empty"/><line any_info="No Anys on this line!" content="                # Check if file has any data rows" number="152" precision="empty"/><line any_info="No Anys on this line!" content="                if row_num == 1:" number="153" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(&quot;CSV file has headers but no data&quot;, str(file_path))" number="154" precision="any"/><line any_info="No Anys on this line!" content="" number="155" precision="empty"/><line any_info="No Anys on this line!" content="        except UnicodeDecodeError:" number="156" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;File encoding not supported. Use UTF-8.&quot;, str(file_path))" number="157" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="158" precision="precise"/><line any_info="No Anys on this line!" content="        except Exception as e:" number="159" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Error reading CSV file: {e}&quot;, str(file_path))" number="160" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="161" precision="precise"/><line any_info="No Anys on this line!" content="" number="162" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="163" precision="precise"/><line any_info="No Anys on this line!" content="" number="164" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_csv_row(self, row: Dict[str, str], file_path: Path, row_num: int) -&gt; bool:" number="165" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate a single CSV row.&quot;&quot;&quot;" number="166" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="167" precision="precise"/><line any_info="No Anys on this line!" content="" number="168" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for empty required fields" number="169" precision="empty"/><line any_info="No Anys on this line!" content="        for field in self.REQUIRED_ACCESS_COLUMNS:" number="170" precision="precise"/><line any_info="No Anys on this line!" content="            if field in row and not row[field].strip():" number="171" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Empty required field '{field}'&quot;, str(file_path), row_num)" number="172" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="173" precision="precise"/><line any_info="No Anys on this line!" content="" number="174" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate permission values" number="175" precision="empty"/><line any_info="No Anys on this line!" content="        permission_fields = {'perm_read', 'perm_write', 'perm_create', 'perm_unlink'}" number="176" precision="precise"/><line any_info="No Anys on this line!" content="        for field in permission_fields:" number="177" precision="precise"/><line any_info="No Anys on this line!" content="            if field in row and row[field].strip():" number="178" precision="precise"/><line any_info="No Anys on this line!" content="                value = row[field].strip()" number="179" precision="precise"/><line any_info="No Anys on this line!" content="                if value not in self.VALID_PERMISSION_VALUES:" number="180" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.error(" number="181" precision="any"/><line any_info="No Anys on this line!" content="                        f&quot;Invalid permission value '{value}' for {field}. Use: {', '.join(self.VALID_PERMISSION_VALUES)}&quot;," number="182" precision="precise"/><line any_info="No Anys on this line!" content="                        str(file_path)," number="183" precision="precise"/><line any_info="No Anys on this line!" content="                        row_num," number="184" precision="precise"/><line any_info="No Anys on this line!" content="                    )" number="185" precision="empty"/><line any_info="No Anys on this line!" content="                    success = False" number="186" precision="precise"/><line any_info="No Anys on this line!" content="" number="187" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate ID format" number="188" precision="empty"/><line any_info="No Anys on this line!" content="        if 'id' in row and row['id'].strip():" number="189" precision="precise"/><line any_info="No Anys on this line!" content="            id_value = row['id'].strip()" number="190" precision="precise"/><line any_info="No Anys on this line!" content="            if not id_value.replace('_', '').replace('.', '').isalnum():" number="191" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;ID '{id_value}' contains unusual characters&quot;, str(file_path), row_num)" number="192" precision="any"/><line any_info="No Anys on this line!" content="" number="193" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate model reference format" number="194" precision="empty"/><line any_info="No Anys on this line!" content="        if 'model_id:id' in row and row['model_id:id'].strip():" number="195" precision="precise"/><line any_info="No Anys on this line!" content="            model_ref = row['model_id:id'].strip()" number="196" precision="precise"/><line any_info="No Anys on this line!" content="            if not model_ref.startswith('model_'):" number="197" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Model reference '{model_ref}' should start with 'model_'&quot;, str(file_path), row_num)" number="198" precision="any"/><line any_info="No Anys on this line!" content="" number="199" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate group reference format" number="200" precision="empty"/><line any_info="No Anys on this line!" content="        if 'group_id:id' in row and row['group_id:id'].strip():" number="201" precision="precise"/><line any_info="No Anys on this line!" content="            group_ref = row['group_id:id'].strip()" number="202" precision="precise"/><line any_info="No Anys on this line!" content="            # Group references can be external (module.group_name) or internal" number="203" precision="empty"/><line any_info="No Anys on this line!" content="            if '.' not in group_ref and not group_ref.startswith('group_'):" number="204" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.add_info(" number="205" precision="any"/><line any_info="No Anys on this line!" content="                    f&quot;Group reference '{group_ref}' - consider using 'group_' prefix or module.group format&quot;," number="206" precision="precise"/><line any_info="No Anys on this line!" content="                    str(file_path)," number="207" precision="precise"/><line any_info="No Anys on this line!" content="                    row_num," number="208" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="209" precision="empty"/><line any_info="No Anys on this line!" content="" number="210" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="211" precision="precise"/><line any_info="No Anys on this line!" content="" number="212" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_xml_security(self, file_path: Path) -&gt; bool:" number="213" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate XML security files.&quot;&quot;&quot;" number="214" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="215" precision="precise"/><line any_info="No Anys on this line!" content="" number="216" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="217" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            tree = ET.parse(file_path)" number="218" precision="precise"/><line any_info="No Anys on this line!" content="            root = tree.getroot()" number="219" precision="precise"/><line any_info="No Anys on this line!" content="        except ET.ParseError as e:" number="220" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;XML parsing error: {e}&quot;, str(file_path))" number="221" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="222" precision="precise"/><line any_info="No Anys on this line!" content="        except Exception as e:" number="223" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Error reading XML file: {e}&quot;, str(file_path))" number="224" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="225" precision="precise"/><line any_info="No Anys on this line!" content="" number="226" precision="empty"/><line any_info="No Anys on this line!" content="        # Check root element" number="227" precision="empty"/><line any_info="No Anys on this line!" content="        if root.tag not in ['odoo', 'openerp']:" number="228" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Invalid root element '{root.tag}'. Expected 'odoo' or 'openerp'&quot;, str(file_path))" number="229" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="230" precision="precise"/><line any_info="No Anys on this line!" content="" number="231" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate security records" number="232" precision="empty"/><line any_info="No Anys on this line!" content="        for record in root.iter('record'):" number="233" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            model = record.attrib.get('model')" number="234" precision="precise"/><line any_info="No Anys on this line!" content="            if model in self.SECURITY_MODELS:" number="235" precision="precise"/><line any_info="No Anys on this line!" content="                success &amp;= self.validate_security_record(record, file_path)" number="236" precision="precise"/><line any_info="No Anys on this line!" content="" number="237" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate menu items (they can have security implications)" number="238" precision="empty"/><line any_info="No Anys on this line!" content="        for menuitem in root.iter('menuitem'):" number="239" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_menuitem_security(menuitem, file_path)" number="240" precision="precise"/><line any_info="No Anys on this line!" content="" number="241" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="242" precision="precise"/><line any_info="No Anys on this line!" content="" number="243" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_security_record(self, record: ET.Element, file_path: Path) -&gt; bool:" number="244" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate a security record in XML.&quot;&quot;&quot;" number="245" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="246" precision="precise"/><line any_info="No Anys on this line!" content="" number="247" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        model = record.attrib.get('model')" number="248" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        record_id = record.attrib.get('id', 'unknown')" number="249" precision="precise"/><line any_info="No Anys on this line!" content="" number="250" precision="empty"/><line any_info="No Anys on this line!" content="        # Check required attributes" number="251" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        if not record.attrib.get('id'):" number="252" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;Security record missing 'id' attribute&quot;, str(file_path))" number="253" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="254" precision="precise"/><line any_info="No Anys on this line!" content="" number="255" precision="empty"/><line any_info="No Anys on this line!" content="        if not model:" number="256" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;Security record missing 'model' attribute&quot;, str(file_path))" number="257" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="258" precision="precise"/><line any_info="No Anys on this line!" content="            return success" number="259" precision="precise"/><line any_info="No Anys on this line!" content="" number="260" precision="empty"/><line any_info="No Anys on this line!" content="        # Get field values" number="261" precision="empty"/><line any_info="No Anys on this line!" content="        field_values = {}" number="262" precision="precise"/><line any_info="No Anys on this line!" content="        for field in record.findall('field'):" number="263" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            field_name = field.attrib.get('name')" number="264" precision="precise"/><line any_info="No Anys on this line!" content="            if field_name:" number="265" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="                field_values[field_name] = field.text or field.attrib.get('ref', '')" number="266" precision="precise"/><line any_info="No Anys on this line!" content="" number="267" precision="empty"/><line any_info="No Anys on this line!" content="        # Check required fields for specific models" number="268" precision="empty"/><line any_info="No Anys on this line!" content="        if model in self.REQUIRED_FIELDS:" number="269" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="            missing_fields = self.REQUIRED_FIELDS[model] - set(field_values.keys())" number="270" precision="precise"/><line any_info="No Anys on this line!" content="            if missing_fields:" number="271" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Record '{record_id}' missing required fields: {', '.join(missing_fields)}&quot;, str(file_path))" number="272" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="273" precision="precise"/><line any_info="No Anys on this line!" content="" number="274" precision="empty"/><line any_info="No Anys on this line!" content="        # Model-specific validation" number="275" precision="empty"/><line any_info="No Anys on this line!" content="        if model == 'ir.model.access':" number="276" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_access_record(record, field_values, file_path)" number="277" precision="precise"/><line any_info="No Anys on this line!" content="        elif model == 'ir.rule':" number="278" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_rule_record(record, field_values, file_path)" number="279" precision="precise"/><line any_info="No Anys on this line!" content="        elif model == 'res.groups':" number="280" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_group_record(record, field_values, file_path)" number="281" precision="precise"/><line any_info="No Anys on this line!" content="" number="282" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="283" precision="precise"/><line any_info="No Anys on this line!" content="" number="284" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_access_record(self, record: ET.Element, fields: Dict[str, str], file_path: Path) -&gt; bool:" number="285" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate ir.model.access record.&quot;&quot;&quot;" number="286" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="287" precision="precise"/><line any_info="No Anys on this line!" content="" number="288" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate permission fields" number="289" precision="empty"/><line any_info="No Anys on this line!" content="        permission_fields = {'perm_read', 'perm_write', 'perm_create', 'perm_unlink'}" number="290" precision="precise"/><line any_info="No Anys on this line!" content="        for perm_field in permission_fields:" number="291" precision="precise"/><line any_info="No Anys on this line!" content="            if perm_field in fields:" number="292" precision="precise"/><line any_info="No Anys on this line!" content="                value = fields[perm_field].strip()" number="293" precision="precise"/><line any_info="No Anys on this line!" content="                if value and value not in self.VALID_PERMISSION_VALUES:" number="294" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.error(f&quot;Invalid permission value '{value}' for {perm_field}&quot;, str(file_path))" number="295" precision="any"/><line any_info="No Anys on this line!" content="                    success = False" number="296" precision="precise"/><line any_info="No Anys on this line!" content="" number="297" precision="empty"/><line any_info="No Anys on this line!" content="        # Check model reference" number="298" precision="empty"/><line any_info="No Anys on this line!" content="        if 'model_id' in fields:" number="299" precision="precise"/><line any_info="No Anys on this line!" content="            model_ref = fields['model_id']" number="300" precision="precise"/><line any_info="No Anys on this line!" content="            if model_ref and not model_ref.startswith('model_'):" number="301" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Model reference '{model_ref}' should reference a model record&quot;, str(file_path))" number="302" precision="any"/><line any_info="No Anys on this line!" content="" number="303" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="304" precision="precise"/><line any_info="No Anys on this line!" content="" number="305" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_rule_record(self, record: ET.Element, fields: Dict[str, str], file_path: Path) -&gt; bool:" number="306" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate ir.rule record.&quot;&quot;&quot;" number="307" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="308" precision="precise"/><line any_info="No Anys on this line!" content="" number="309" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for domain_force field" number="310" precision="empty"/><line any_info="No Anys on this line!" content="        if 'domain_force' not in fields:" number="311" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;Security rule without 'domain_force' field&quot;, str(file_path))" number="312" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        elif fields.get('domain_force'):" number="313" precision="precise"/><line any_info="No Anys on this line!" content="            domain = fields['domain_force']" number="314" precision="precise"/><line any_info="No Anys on this line!" content="            # Basic domain syntax validation" number="315" precision="empty"/><line any_info="No Anys on this line!" content="            if not (domain.startswith('[') and domain.endswith(']')):" number="316" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Domain '{domain}' should be a list format&quot;, str(file_path))" number="317" precision="any"/><line any_info="No Anys on this line!" content="" number="318" precision="empty"/><line any_info="No Anys on this line!" content="        # Check rule type fields" number="319" precision="empty"/><line any_info="No Anys on this line!" content="        rule_types = {'perm_read', 'perm_write', 'perm_create', 'perm_unlink'}" number="320" precision="precise"/><line any_info="No Anys on this line!" content="        has_rule_type = any(field in fields for field in rule_types)" number="321" precision="precise"/><line any_info="No Anys on this line!" content="        if not has_rule_type:" number="322" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(&quot;Security rule without specific permission types (applies to all)&quot;, str(file_path))" number="323" precision="any"/><line any_info="No Anys on this line!" content="" number="324" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="325" precision="precise"/><line any_info="No Anys on this line!" content="" number="326" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_group_record(self, record: ET.Element, fields: Dict[str, str], file_path: Path) -&gt; bool:" number="327" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate res.groups record.&quot;&quot;&quot;" number="328" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="329" precision="precise"/><line any_info="No Anys on this line!" content="" number="330" precision="empty"/><line any_info="No Anys on this line!" content="        # Check category reference" number="331" precision="empty"/><line any_info="No Anys on this line!" content="        if 'category_id' in fields:" number="332" precision="precise"/><line any_info="No Anys on this line!" content="            category_ref = fields['category_id']" number="333" precision="precise"/><line any_info="No Anys on this line!" content="            if category_ref and not (category_ref.startswith('module_category_') or '.' in category_ref):" number="334" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.add_info(" number="335" precision="any"/><line any_info="No Anys on this line!" content="                    f&quot;Category reference '{category_ref}' - ensure it references a valid category&quot;, str(file_path)" number="336" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="337" precision="empty"/><line any_info="No Anys on this line!" content="" number="338" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for implied_ids field (group inheritance)" number="339" precision="empty"/><line any_info="No Anys on this line!" content="        if 'implied_ids' in fields:" number="340" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(&quot;Group uses inheritance (implied_ids)&quot;, str(file_path))" number="341" precision="any"/><line any_info="No Anys on this line!" content="" number="342" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="343" precision="precise"/><line any_info="No Anys on this line!" content="" number="344" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_menuitem_security(self, menuitem: ET.Element, file_path: Path) -&gt; bool:" number="345" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate menuitem security attributes.&quot;&quot;&quot;" number="346" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="347" precision="precise"/><line any_info="No Anys on this line!" content="" number="348" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for groups attribute" number="349" precision="empty"/><line any_info="No Anys on this line!" content="        if 'groups' in menuitem.attrib:" number="350" precision="precise"/><line any_info="No Anys on this line!" content="            groups = menuitem.attrib['groups']" number="351" precision="precise"/><line any_info="No Anys on this line!" content="            # Groups should be comma-separated external IDs" number="352" precision="empty"/><line any_info="No Anys on this line!" content="            if groups and not all(g.strip() for g in groups.split(',')):" number="353" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(&quot;Empty group reference in menuitem&quot;, str(file_path))" number="354" precision="any"/><line any_info="No Anys on this line!" content="        else:" number="355" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(&quot;Menu item without explicit groups (visible to all users)&quot;, str(file_path))" number="356" precision="any"/><line any_info="No Anys on this line!" content="" number="357" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="358" precision="precise"/><line any_info="No Anys on this line!" content="" number="359" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_security_file_organization(self, module_path: Path, module_name: str) -&gt; bool:" number="360" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate security file organization and naming.&quot;&quot;&quot;" number="361" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="362" precision="precise"/><line any_info="No Anys on this line!" content="" number="363" precision="empty"/><line any_info="No Anys on this line!" content="        security_dir = module_path / 'security'" number="364" precision="precise"/><line any_info="No Anys on this line!" content="" number="365" precision="empty"/><line any_info="No Anys on this line!" content="        if not security_dir.exists():" number="366" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(f&quot;No security directory found in module: {module_name}&quot;)" number="367" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="368" precision="precise"/><line any_info="No Anys on this line!" content="" number="369" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for common security files" number="370" precision="empty"/><line any_info="No Anys on this line!" content="        access_csv = security_dir / 'ir.model.access.csv'" number="371" precision="precise"/><line any_info="No Anys on this line!" content="        if not access_csv.exists():" number="372" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(&quot;No ir.model.access.csv file found&quot;, str(security_dir))" number="373" precision="any"/><line any_info="No Anys on this line!" content="" number="374" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for XML security files" number="375" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        xml_files = list(security_dir.glob('*.xml'))" number="376" precision="precise"/><line any_info="No Anys on this line!" content="        if not xml_files:" number="377" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(&quot;No XML security files found&quot;, str(security_dir))" number="378" precision="any"/><line any_info="No Anys on this line!" content="" number="379" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate file naming conventions" number="380" precision="empty"/><line any_info="No Anys on this line!" content="        for file_path in security_dir.iterdir():" number="381" precision="precise"/><line any_info="No Anys on this line!" content="            if file_path.is_file():" number="382" precision="precise"/><line any_info="No Anys on this line!" content="                filename = file_path.name" number="383" precision="precise"/><line any_info="No Anys on this line!" content="                if filename.endswith('.csv') and filename != 'ir.model.access.csv':" number="384" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(f&quot;Unusual CSV filename: {filename}&quot;, str(file_path))" number="385" precision="any"/><line any_info="No Anys on this line!" content="                elif filename.endswith('.xml') and not filename.endswith('_security.xml'):" number="386" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(f&quot;Consider using '_security.xml' suffix: {filename}&quot;, str(file_path))" number="387" precision="any"/><line any_info="No Anys on this line!" content="" number="388" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="389" precision="precise"/><line any_info="No Anys on this line!" content="" number="390" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_module_security(self, module_name: str) -&gt; bool:" number="391" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate all security files in a module.&quot;&quot;&quot;" number="392" precision="empty"/><line any_info="No Anys on this line!" content="        module_path = self.base_path / module_name" number="393" precision="precise"/><line any_info="No Anys on this line!" content="" number="394" precision="empty"/><line any_info="No Anys on this line!" content="        if not module_path.exists():" number="395" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Module directory not found: {module_name}&quot;)" number="396" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="397" precision="precise"/><line any_info="No Anys on this line!" content="" number="398" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="399" precision="precise"/><line any_info="No Anys on this line!" content="" number="400" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate file organization" number="401" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.validate_security_file_organization(module_path, module_name)" number="402" precision="precise"/><line any_info="No Anys on this line!" content="" number="403" precision="empty"/><line any_info="No Anys on this line!" content="        security_dir = module_path / 'security'" number="404" precision="precise"/><line any_info="No Anys on this line!" content="        if not security_dir.exists():" number="405" precision="precise"/><line any_info="No Anys on this line!" content="            return success" number="406" precision="precise"/><line any_info="No Anys on this line!" content="" number="407" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate CSV files" number="408" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        csv_files = list(security_dir.glob('*.csv'))" number="409" precision="precise"/><line any_info="No Anys on this line!" content="        for csv_file in csv_files:" number="410" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_csv_structure(csv_file):" number="411" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="412" precision="precise"/><line any_info="No Anys on this line!" content="" number="413" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate XML files" number="414" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        xml_files = list(security_dir.glob('*.xml'))" number="415" precision="precise"/><line any_info="No Anys on this line!" content="        for xml_file in xml_files:" number="416" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_xml_security(xml_file):" number="417" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="418" precision="precise"/><line any_info="No Anys on this line!" content="" number="419" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="420" precision="precise"/><line any_info="No Anys on this line!" content="" number="421" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_all_modules(self) -&gt; bool:" number="422" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate security files in all modules.&quot;&quot;&quot;" number="423" precision="empty"/><line any_info="No Anys on this line!" content="        if not self.base_path.exists():" number="424" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Custom modules directory not found: {self.base_path}&quot;)" number="425" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="426" precision="precise"/><line any_info="No Anys on this line!" content="" number="427" precision="empty"/><line any_info="No Anys on this line!" content="        modules = [d for d in self.base_path.iterdir() if d.is_dir() and not d.name.startswith('.')]" number="428" precision="precise"/><line any_info="No Anys on this line!" content="" number="429" precision="empty"/><line any_info="No Anys on this line!" content="        if not modules:" number="430" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;No modules found in custom_modules directory&quot;)" number="431" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="432" precision="precise"/><line any_info="No Anys on this line!" content="" number="433" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="434" precision="precise"/><line any_info="No Anys on this line!" content="        for module_dir in modules:" number="435" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_module_security(module_dir.name):" number="436" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="437" precision="precise"/><line any_info="No Anys on this line!" content="" number="438" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="439" precision="precise"/><line any_info="No Anys on this line!" content="" number="440" precision="empty"/><line any_info="No Anys on this line!" content="    def print_results(self):" number="441" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Print validation results in a clear, structured format.&quot;&quot;&quot;" number="442" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="443" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;🔍 ODOO SECURITY FILE VALIDATION RESULTS&quot;)" number="444" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="445" precision="any"/><line any_info="No Anys on this line!" content="" number="446" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        total_issues = len(self.errors) + len(self.warnings)" number="447" precision="any"/><line any_info="No Anys on this line!" content="" number="448" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.errors:" number="449" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n❌ CRITICAL ERRORS ({len(self.errors)}):&quot;)" number="450" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for error in self.errors:" number="451" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {error}&quot;)" number="452" precision="any"/><line any_info="No Anys on this line!" content="" number="453" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.warnings:" number="454" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n⚠️  WARNINGS ({len(self.warnings)}):&quot;)" number="455" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for warning in self.warnings:" number="456" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {warning}&quot;)" number="457" precision="any"/><line any_info="No Anys on this line!" content="" number="458" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.info:" number="459" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\nℹ️  SUGGESTIONS ({len(self.info)}):&quot;)" number="460" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for info in self.info:" number="461" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {info}&quot;)" number="462" precision="any"/><line any_info="No Anys on this line!" content="" number="463" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="464" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        if not self.errors and not self.warnings:" number="465" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;✅ ALL SECURITY VALIDATIONS PASSED!&quot;)" number="466" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        elif not self.errors:" number="467" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;✅ No errors found ({len(self.warnings)} warnings)&quot;)" number="468" precision="any"/><line any_info="No Anys on this line!" content="        else:" number="469" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            print(f&quot;❌ Validation failed: {len(self.errors)} errors, {len(self.warnings)} warnings&quot;)" number="470" precision="any"/><line any_info="No Anys on this line!" content="" number="471" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        if total_issues == 0:" number="472" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;🎉 Your security files are properly configured!&quot;)" number="473" precision="any"/><line any_info="No Anys on this line!" content="" number="474" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="475" precision="any"/><line any_info="No Anys on this line!" content="" number="476" precision="empty"/><line any_info="No Anys on this line!" content="" number="477" precision="empty"/><line any_info="No Anys on this line!" content="def main():" number="478" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Main function.&quot;&quot;&quot;" number="479" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    validator = SecurityValidator()" number="480" precision="any"/><line any_info="No Anys on this line!" content="" number="481" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;🔍 Starting Odoo Security File Validation...&quot;)" number="482" precision="any"/><line any_info="No Anys on this line!" content="" number="483" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    if len(sys.argv) &gt; 1:" number="484" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        module_name = sys.argv[1]" number="485" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;📦 Validating security files in module: {module_name}&quot;)" number="486" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        success = validator.validate_module_security(module_name)" number="487" precision="any"/><line any_info="No Anys on this line!" content="    else:" number="488" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;📦 Validating security files in all modules...&quot;)" number="489" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        success = validator.validate_all_modules()" number="490" precision="any"/><line any_info="No Anys on this line!" content="" number="491" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    validator.print_results()" number="492" precision="any"/><line any_info="No Anys on this line!" content="" number="493" precision="empty"/><line any_info="No Anys on this line!" content="    # Exit with error code if validation failed" number="494" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="    sys.exit(0 if success and not validator.errors else 1)" number="495" precision="any"/><line any_info="No Anys on this line!" content="" number="496" precision="empty"/><line any_info="No Anys on this line!" content="" number="497" precision="empty"/><line any_info="No Anys on this line!" content="if __name__ == &quot;__main__&quot;:" number="498" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    main()" number="499" precision="any"/></mypy-report-file>