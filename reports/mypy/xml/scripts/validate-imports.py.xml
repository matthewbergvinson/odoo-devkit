<?xml-stylesheet type="text/xsl" href="../../mypy-html.xslt"?><mypy-report-file name="scripts/validate-imports.py" module="scripts.validate-imports"><line any_info="No Anys on this line!" content="#!/usr/bin/env python3" number="1" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="2" precision="empty"/><line any_info="No Anys on this line!" content="Odoo Python Import Validation Script" number="3" precision="empty"/><line any_info="No Anys on this line!" content="Royal Textiles Project - Local Testing Infrastructure" number="4" precision="empty"/><line any_info="No Anys on this line!" content="" number="5" precision="empty"/><line any_info="No Anys on this line!" content="This script provides comprehensive validation of Python imports in Odoo modules," number="6" precision="empty"/><line any_info="No Anys on this line!" content="detecting circular imports, invalid paths, unused imports, and Odoo-specific" number="7" precision="empty"/><line any_info="No Anys on this line!" content="import patterns." number="8" precision="empty"/><line any_info="No Anys on this line!" content="" number="9" precision="empty"/><line any_info="No Anys on this line!" content="Key Features:" number="10" precision="empty"/><line any_info="No Anys on this line!" content="- Circular import detection" number="11" precision="empty"/><line any_info="No Anys on this line!" content="- Invalid import path validation" number="12" precision="empty"/><line any_info="No Anys on this line!" content="- Unused import detection" number="13" precision="empty"/><line any_info="No Anys on this line!" content="- Odoo-specific import pattern validation" number="14" precision="empty"/><line any_info="No Anys on this line!" content="- Deprecated import pattern detection" number="15" precision="empty"/><line any_info="No Anys on this line!" content="- Missing dependency detection" number="16" precision="empty"/><line any_info="No Anys on this line!" content="- Import organization validation" number="17" precision="empty"/><line any_info="No Anys on this line!" content="" number="18" precision="empty"/><line any_info="No Anys on this line!" content="Usage:" number="19" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-imports.py [module_name]" number="20" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-imports.py  # validates all modules" number="21" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="22" precision="empty"/><line any_info="No Anys on this line!" content="" number="23" precision="empty"/><line any_info="No Anys on this line!" content="import ast" number="24" precision="precise"/><line any_info="No Anys on this line!" content="import sys" number="25" precision="precise"/><line any_info="No Anys on this line!" content="from collections import defaultdict" number="26" precision="precise"/><line any_info="No Anys on this line!" content="from pathlib import Path" number="27" precision="precise"/><line any_info="No Anys on this line!" content="from typing import Dict, List, Optional, Set, Tuple" number="28" precision="precise"/><line any_info="No Anys on this line!" content="" number="29" precision="empty"/><line any_info="No Anys on this line!" content="" number="30" precision="empty"/><line any_info="No Anys on this line!" content="class ImportValidator:" number="31" precision="precise"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Comprehensive validator for Python imports in Odoo modules.&quot;&quot;&quot;" number="32" precision="empty"/><line any_info="No Anys on this line!" content="" number="33" precision="empty"/><line any_info="No Anys on this line!" content="    # Standard Odoo imports" number="34" precision="empty"/><line any_info="No Anys on this line!" content="    ODOO_CORE_IMPORTS = {" number="35" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.models'," number="36" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.fields'," number="37" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.api'," number="38" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.exceptions'," number="39" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.tools'," number="40" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.release'," number="41" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.service'," number="42" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.sql_db'," number="43" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.http'," number="44" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.osv'," number="45" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.workflow'," number="46" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.report'," number="47" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.addons'," number="48" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.modules'," number="49" precision="precise"/><line any_info="No Anys on this line!" content="        'odoo.tests'," number="50" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="51" precision="empty"/><line any_info="No Anys on this line!" content="" number="52" precision="empty"/><line any_info="No Anys on this line!" content="    # Common third-party imports used in Odoo" number="53" precision="empty"/><line any_info="No Anys on this line!" content="    COMMON_THIRD_PARTY = {" number="54" precision="precise"/><line any_info="No Anys on this line!" content="        'datetime'," number="55" precision="precise"/><line any_info="No Anys on this line!" content="        'json'," number="56" precision="precise"/><line any_info="No Anys on this line!" content="        'logging'," number="57" precision="precise"/><line any_info="No Anys on this line!" content="        'os'," number="58" precision="precise"/><line any_info="No Anys on this line!" content="        'sys'," number="59" precision="precise"/><line any_info="No Anys on this line!" content="        'time'," number="60" precision="precise"/><line any_info="No Anys on this line!" content="        'uuid'," number="61" precision="precise"/><line any_info="No Anys on this line!" content="        'base64'," number="62" precision="precise"/><line any_info="No Anys on this line!" content="        'hashlib'," number="63" precision="precise"/><line any_info="No Anys on this line!" content="        'urllib'," number="64" precision="precise"/><line any_info="No Anys on this line!" content="        'requests'," number="65" precision="precise"/><line any_info="No Anys on this line!" content="        'werkzeug'," number="66" precision="precise"/><line any_info="No Anys on this line!" content="        'psycopg2'," number="67" precision="precise"/><line any_info="No Anys on this line!" content="        'babel'," number="68" precision="precise"/><line any_info="No Anys on this line!" content="        'lxml'," number="69" precision="precise"/><line any_info="No Anys on this line!" content="        'PIL'," number="70" precision="precise"/><line any_info="No Anys on this line!" content="        'reportlab'," number="71" precision="precise"/><line any_info="No Anys on this line!" content="        'xlsxwriter'," number="72" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="73" precision="empty"/><line any_info="No Anys on this line!" content="" number="74" precision="empty"/><line any_info="No Anys on this line!" content="    # Deprecated import patterns" number="75" precision="empty"/><line any_info="No Anys on this line!" content="    DEPRECATED_PATTERNS = {" number="76" precision="precise"/><line any_info="No Anys on this line!" content="        'openerp': 'Use &quot;odoo&quot; instead of &quot;openerp&quot;'," number="77" precision="precise"/><line any_info="No Anys on this line!" content="        'osv': 'Use &quot;odoo.models&quot; instead of &quot;osv&quot;'," number="78" precision="precise"/><line any_info="No Anys on this line!" content="        'netsvc': 'Use &quot;odoo.service&quot; instead of &quot;netsvc&quot;'," number="79" precision="precise"/><line any_info="No Anys on this line!" content="        'pooler': 'Use &quot;odoo.sql_db&quot; instead of &quot;pooler&quot;'," number="80" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="81" precision="empty"/><line any_info="No Anys on this line!" content="" number="82" precision="empty"/><line any_info="No Anys on this line!" content="    # Required Odoo imports for different file types" number="83" precision="empty"/><line any_info="No Anys on this line!" content="    REQUIRED_IMPORTS = {" number="84" precision="precise"/><line any_info="No Anys on this line!" content="        'models': ['odoo.models']," number="85" precision="precise"/><line any_info="No Anys on this line!" content="        'controllers': ['odoo.http']," number="86" precision="precise"/><line any_info="No Anys on this line!" content="        'wizards': ['odoo.models']," number="87" precision="precise"/><line any_info="No Anys on this line!" content="        'reports': ['odoo.report']," number="88" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="89" precision="empty"/><line any_info="No Anys on this line!" content="" number="90" precision="empty"/><line any_info="No Anys on this line!" content="    def __init__(self, base_path: str = &quot;custom_modules&quot;):" number="91" precision="precise"/><line any_info="No Anys on this line!" content="        self.base_path = Path(base_path)" number="92" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors: List[str] = []" number="93" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings: List[str] = []" number="94" precision="precise"/><line any_info="No Anys on this line!" content="        self.info: List[str] = []" number="95" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x31)" content="        self.module_imports: Dict[str, Set[str]] = defaultdict(set)" number="96" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x31)" content="        self.file_imports: Dict[str, List[Tuple[str, int]]] = defaultdict(list)" number="97" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x31)" content="        self.import_graph: Dict[str, Set[str]] = defaultdict(set)" number="98" precision="precise"/><line any_info="No Anys on this line!" content="" number="99" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def error(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="100" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an error message.&quot;&quot;&quot;" number="101" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="102" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="103" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="104" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors.append(f&quot;❌ {location}: {message}&quot;)" number="105" precision="precise"/><line any_info="No Anys on this line!" content="" number="106" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def warning(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="107" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add a warning message.&quot;&quot;&quot;" number="108" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="109" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="110" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="111" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings.append(f&quot;⚠️  {location}: {message}&quot;)" number="112" precision="precise"/><line any_info="No Anys on this line!" content="" number="113" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def add_info(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="114" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an info message.&quot;&quot;&quot;" number="115" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="116" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="117" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="118" precision="precise"/><line any_info="No Anys on this line!" content="        self.info.append(f&quot;ℹ️  {location}: {message}&quot;)" number="119" precision="precise"/><line any_info="No Anys on this line!" content="" number="120" precision="empty"/><line any_info="No Anys on this line!" content="    def parse_python_file(self, file_path: Path) -&gt; Optional[ast.AST]:" number="121" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Parse a Python file and return its AST.&quot;&quot;&quot;" number="122" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="123" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x7)&#10;Explicit (x1)" content="            with open(file_path, 'r', encoding='utf-8') as f:" number="124" precision="precise"/><line any_info="No Anys on this line!" content="                content = f.read()" number="125" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x5)" content="            return ast.parse(content, filename=str(file_path))" number="126" precision="precise"/><line any_info="No Anys on this line!" content="        except SyntaxError as e:" number="127" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Python syntax error: {e}&quot;, str(file_path), e.lineno)" number="128" precision="any"/><line any_info="No Anys on this line!" content="            return None" number="129" precision="precise"/><line any_info="No Anys on this line!" content="        except Exception as e:" number="130" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Error parsing file: {e}&quot;, str(file_path))" number="131" precision="any"/><line any_info="No Anys on this line!" content="            return None" number="132" precision="precise"/><line any_info="No Anys on this line!" content="" number="133" precision="empty"/><line any_info="No Anys on this line!" content="    def extract_imports(self, tree: ast.AST) -&gt; List[Tuple[str, int, str]]:" number="134" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Extract all import statements from AST.&quot;&quot;&quot;" number="135" precision="empty"/><line any_info="No Anys on this line!" content="        imports = []" number="136" precision="precise"/><line any_info="No Anys on this line!" content="" number="137" precision="empty"/><line any_info="No Anys on this line!" content="        for node in ast.walk(tree):" number="138" precision="precise"/><line any_info="No Anys on this line!" content="            if isinstance(node, ast.Import):" number="139" precision="precise"/><line any_info="No Anys on this line!" content="                for alias in node.names:" number="140" precision="precise"/><line any_info="No Anys on this line!" content="                    imports.append((alias.name, node.lineno, 'import'))" number="141" precision="precise"/><line any_info="No Anys on this line!" content="            elif isinstance(node, ast.ImportFrom):" number="142" precision="precise"/><line any_info="No Anys on this line!" content="                if node.module:" number="143" precision="precise"/><line any_info="No Anys on this line!" content="                    imports.append((node.module, node.lineno, 'from'))" number="144" precision="precise"/><line any_info="No Anys on this line!" content="                    for alias in node.names:" number="145" precision="precise"/><line any_info="No Anys on this line!" content="                        full_name = f&quot;{node.module}.{alias.name}&quot; if alias.name != '*' else node.module" number="146" precision="precise"/><line any_info="No Anys on this line!" content="                        imports.append((full_name, node.lineno, 'from_item'))" number="147" precision="precise"/><line any_info="No Anys on this line!" content="" number="148" precision="empty"/><line any_info="No Anys on this line!" content="        return imports" number="149" precision="precise"/><line any_info="No Anys on this line!" content="" number="150" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_import_path(self, import_path: str, file_path: Path, line_num: int) -&gt; bool:" number="151" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate that an import path is valid.&quot;&quot;&quot;" number="152" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="153" precision="precise"/><line any_info="No Anys on this line!" content="" number="154" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for deprecated patterns" number="155" precision="empty"/><line any_info="No Anys on this line!" content="        for deprecated, message in self.DEPRECATED_PATTERNS.items():" number="156" precision="precise"/><line any_info="No Anys on this line!" content="            if import_path.startswith(deprecated):" number="157" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Deprecated import '{import_path}': {message}&quot;, str(file_path), line_num)" number="158" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="159" precision="precise"/><line any_info="No Anys on this line!" content="" number="160" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for relative imports outside of package" number="161" precision="empty"/><line any_info="No Anys on this line!" content="        if import_path.startswith('.'):" number="162" precision="precise"/><line any_info="No Anys on this line!" content="            # Relative imports should be within the same module" number="163" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(f&quot;Relative import used: {import_path}&quot;, str(file_path), line_num)" number="164" precision="any"/><line any_info="No Anys on this line!" content="" number="165" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for overly long import paths" number="166" precision="empty"/><line any_info="No Anys on this line!" content="        if len(import_path.split('.')) &gt; 6:" number="167" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;Very long import path: {import_path}&quot;, str(file_path), line_num)" number="168" precision="any"/><line any_info="No Anys on this line!" content="" number="169" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for imports from __init__.py files" number="170" precision="empty"/><line any_info="No Anys on this line!" content="        if import_path.endswith('.__init__'):" number="171" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;Importing from __init__.py: {import_path}&quot;, str(file_path), line_num)" number="172" precision="any"/><line any_info="No Anys on this line!" content="" number="173" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="174" precision="precise"/><line any_info="No Anys on this line!" content="" number="175" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_odoo_imports(self, imports: List[Tuple[str, int, str]], file_path: Path) -&gt; bool:" number="176" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate Odoo-specific import patterns.&quot;&quot;&quot;" number="177" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="178" precision="precise"/><line any_info="No Anys on this line!" content="" number="179" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for required Odoo imports based on file type" number="180" precision="empty"/><line any_info="No Anys on this line!" content="        file_type = self.get_file_type(file_path)" number="181" precision="precise"/><line any_info="No Anys on this line!" content="        if file_type in self.REQUIRED_IMPORTS:" number="182" precision="precise"/><line any_info="No Anys on this line!" content="            found_required = False" number="183" precision="precise"/><line any_info="No Anys on this line!" content="            for required_import in self.REQUIRED_IMPORTS[file_type]:" number="184" precision="precise"/><line any_info="No Anys on this line!" content="                for import_path, _, _ in imports:" number="185" precision="precise"/><line any_info="No Anys on this line!" content="                    if import_path.startswith(required_import):" number="186" precision="precise"/><line any_info="No Anys on this line!" content="                        found_required = True" number="187" precision="precise"/><line any_info="No Anys on this line!" content="                        break" number="188" precision="precise"/><line any_info="No Anys on this line!" content="                if found_required:" number="189" precision="precise"/><line any_info="No Anys on this line!" content="                    break" number="190" precision="precise"/><line any_info="No Anys on this line!" content="" number="191" precision="empty"/><line any_info="No Anys on this line!" content="            if not found_required:" number="192" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(" number="193" precision="any"/><line any_info="No Anys on this line!" content="                    f&quot;Missing required Odoo import for {file_type} file: {self.REQUIRED_IMPORTS[file_type]}&quot;," number="194" precision="precise"/><line any_info="No Anys on this line!" content="                    str(file_path)," number="195" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="196" precision="empty"/><line any_info="No Anys on this line!" content="                success = False" number="197" precision="precise"/><line any_info="No Anys on this line!" content="" number="198" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for proper Odoo import structure" number="199" precision="empty"/><line any_info="No Anys on this line!" content="        odoo_imports = [imp for imp in imports if imp[0].startswith('odoo')]" number="200" precision="precise"/><line any_info="No Anys on this line!" content="        if odoo_imports:" number="201" precision="precise"/><line any_info="No Anys on this line!" content="            # Check for proper odoo.addons imports" number="202" precision="empty"/><line any_info="No Anys on this line!" content="            addons_imports = [imp for imp in odoo_imports if 'addons' in imp[0]]" number="203" precision="precise"/><line any_info="No Anys on this line!" content="            for import_path, line_num, import_type in addons_imports:" number="204" precision="precise"/><line any_info="No Anys on this line!" content="                if not import_path.startswith('odoo.addons.'):" number="205" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(f&quot;Use 'odoo.addons.module_name' format: {import_path}&quot;, str(file_path), line_num)" number="206" precision="any"/><line any_info="No Anys on this line!" content="" number="207" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="208" precision="precise"/><line any_info="No Anys on this line!" content="" number="209" precision="empty"/><line any_info="No Anys on this line!" content="    def get_file_type(self, file_path: Path) -&gt; str:" number="210" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Determine the type of Odoo file based on path and content.&quot;&quot;&quot;" number="211" precision="empty"/><line any_info="No Anys on this line!" content="        path_str = str(file_path)" number="212" precision="precise"/><line any_info="No Anys on this line!" content="" number="213" precision="empty"/><line any_info="No Anys on this line!" content="        if 'models' in path_str:" number="214" precision="precise"/><line any_info="No Anys on this line!" content="            return 'models'" number="215" precision="precise"/><line any_info="No Anys on this line!" content="        elif 'controllers' in path_str:" number="216" precision="precise"/><line any_info="No Anys on this line!" content="            return 'controllers'" number="217" precision="precise"/><line any_info="No Anys on this line!" content="        elif 'wizards' in path_str:" number="218" precision="precise"/><line any_info="No Anys on this line!" content="            return 'wizards'" number="219" precision="precise"/><line any_info="No Anys on this line!" content="        elif 'reports' in path_str:" number="220" precision="precise"/><line any_info="No Anys on this line!" content="            return 'reports'" number="221" precision="precise"/><line any_info="No Anys on this line!" content="        elif 'tests' in path_str:" number="222" precision="precise"/><line any_info="No Anys on this line!" content="            return 'tests'" number="223" precision="precise"/><line any_info="No Anys on this line!" content="        else:" number="224" precision="empty"/><line any_info="No Anys on this line!" content="            return 'other'" number="225" precision="precise"/><line any_info="No Anys on this line!" content="" number="226" precision="empty"/><line any_info="No Anys on this line!" content="    def check_circular_imports(self, module_name: str) -&gt; bool:" number="227" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Check for circular imports within a module.&quot;&quot;&quot;" number="228" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="229" precision="precise"/><line any_info="No Anys on this line!" content="" number="230" precision="empty"/><line any_info="No Anys on this line!" content="        # Build import graph" number="231" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        visited = set()" number="232" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        rec_stack = set()" number="233" precision="precise"/><line any_info="No Anys on this line!" content="" number="234" precision="empty"/><line any_info="No Anys on this line!" content="        def has_cycle(node: str) -&gt; bool:" number="235" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if node in rec_stack:" number="236" precision="imprecise"/><line any_info="No Anys on this line!" content="                return True" number="237" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            if node in visited:" number="238" precision="imprecise"/><line any_info="No Anys on this line!" content="                return False" number="239" precision="precise"/><line any_info="No Anys on this line!" content="" number="240" precision="empty"/><line any_info="No Anys on this line!" content="            visited.add(node)" number="241" precision="precise"/><line any_info="No Anys on this line!" content="            rec_stack.add(node)" number="242" precision="precise"/><line any_info="No Anys on this line!" content="" number="243" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x5)" content="            for neighbor in self.import_graph.get(node, set()):" number="244" precision="precise"/><line any_info="No Anys on this line!" content="                if has_cycle(neighbor):" number="245" precision="precise"/><line any_info="No Anys on this line!" content="                    return True" number="246" precision="precise"/><line any_info="No Anys on this line!" content="" number="247" precision="empty"/><line any_info="No Anys on this line!" content="            rec_stack.remove(node)" number="248" precision="precise"/><line any_info="No Anys on this line!" content="            return False" number="249" precision="precise"/><line any_info="No Anys on this line!" content="" number="250" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for cycles in the import graph" number="251" precision="empty"/><line any_info="No Anys on this line!" content="        for node in self.import_graph:" number="252" precision="precise"/><line any_info="No Anys on this line!" content="            if node not in visited:" number="253" precision="precise"/><line any_info="No Anys on this line!" content="                if has_cycle(node):" number="254" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.error(f&quot;Circular import detected involving: {node}&quot;)" number="255" precision="any"/><line any_info="No Anys on this line!" content="                    success = False" number="256" precision="precise"/><line any_info="No Anys on this line!" content="" number="257" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="258" precision="precise"/><line any_info="No Anys on this line!" content="" number="259" precision="empty"/><line any_info="No Anys on this line!" content="    def check_unused_imports(self, tree: ast.AST, imports: List[Tuple[str, int, str]], file_path: Path) -&gt; bool:" number="260" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Check for unused imports in a file.&quot;&quot;&quot;" number="261" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="262" precision="precise"/><line any_info="No Anys on this line!" content="" number="263" precision="empty"/><line any_info="No Anys on this line!" content="        # Extract all names used in the file" number="264" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        used_names = set()" number="265" precision="precise"/><line any_info="No Anys on this line!" content="" number="266" precision="empty"/><line any_info="No Anys on this line!" content="        class NameVisitor(ast.NodeVisitor):" number="267" precision="precise"/><line any_info="No Anys on this line!" content="            def visit_Name(self, node):" number="268" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                used_names.add(node.id)" number="269" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self.generic_visit(node)" number="270" precision="any"/><line any_info="No Anys on this line!" content="" number="271" precision="empty"/><line any_info="No Anys on this line!" content="            def visit_Attribute(self, node):" number="272" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                if isinstance(node.value, ast.Name):" number="273" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="                    used_names.add(node.value.id)" number="274" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                self.generic_visit(node)" number="275" precision="any"/><line any_info="No Anys on this line!" content="" number="276" precision="empty"/><line any_info="No Anys on this line!" content="        visitor = NameVisitor()" number="277" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        visitor.visit(tree)" number="278" precision="any"/><line any_info="No Anys on this line!" content="" number="279" precision="empty"/><line any_info="No Anys on this line!" content="        # Check each import" number="280" precision="empty"/><line any_info="No Anys on this line!" content="        for import_path, line_num, import_type in imports:" number="281" precision="precise"/><line any_info="No Anys on this line!" content="            if import_type == 'import':" number="282" precision="precise"/><line any_info="No Anys on this line!" content="                # For direct imports, check if the module name is used" number="283" precision="empty"/><line any_info="No Anys on this line!" content="                module_name = import_path.split('.')[0]" number="284" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                if module_name not in used_names:" number="285" precision="imprecise"/><line any_info="No Anys on this line!" content="                    # Don't flag common setup imports as unused" number="286" precision="empty"/><line any_info="No Anys on this line!" content="                    if import_path not in ['logging', 'os', 'sys']:" number="287" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                        self.warning(f&quot;Unused import: {import_path}&quot;, str(file_path), line_num)" number="288" precision="any"/><line any_info="No Anys on this line!" content="            elif import_type == 'from_item':" number="289" precision="precise"/><line any_info="No Anys on this line!" content="                # For from imports, check if the imported name is used" number="290" precision="empty"/><line any_info="No Anys on this line!" content="                imported_name = import_path.split('.')[-1]" number="291" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                if imported_name not in used_names and imported_name != '*':" number="292" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(f&quot;Unused import: {imported_name}&quot;, str(file_path), line_num)" number="293" precision="any"/><line any_info="No Anys on this line!" content="" number="294" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="295" precision="precise"/><line any_info="No Anys on this line!" content="" number="296" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_import_organization(self, imports: List[Tuple[str, int, str]], file_path: Path) -&gt; bool:" number="297" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate import organization and grouping.&quot;&quot;&quot;" number="298" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="299" precision="precise"/><line any_info="No Anys on this line!" content="" number="300" precision="empty"/><line any_info="No Anys on this line!" content="        if not imports:" number="301" precision="precise"/><line any_info="No Anys on this line!" content="            return success" number="302" precision="precise"/><line any_info="No Anys on this line!" content="" number="303" precision="empty"/><line any_info="No Anys on this line!" content="        # Group imports by type" number="304" precision="empty"/><line any_info="No Anys on this line!" content="        stdlib_imports = []" number="305" precision="precise"/><line any_info="No Anys on this line!" content="        third_party_imports = []" number="306" precision="precise"/><line any_info="No Anys on this line!" content="        odoo_imports = []" number="307" precision="precise"/><line any_info="No Anys on this line!" content="        local_imports = []" number="308" precision="precise"/><line any_info="No Anys on this line!" content="" number="309" precision="empty"/><line any_info="No Anys on this line!" content="        for import_path, line_num, import_type in imports:" number="310" precision="precise"/><line any_info="No Anys on this line!" content="            if import_type == 'import' or import_type == 'from':" number="311" precision="precise"/><line any_info="No Anys on this line!" content="                if import_path.startswith('odoo'):" number="312" precision="precise"/><line any_info="No Anys on this line!" content="                    odoo_imports.append((import_path, line_num))" number="313" precision="precise"/><line any_info="No Anys on this line!" content="                elif import_path.split('.')[0] in self.COMMON_THIRD_PARTY:" number="314" precision="precise"/><line any_info="No Anys on this line!" content="                    third_party_imports.append((import_path, line_num))" number="315" precision="precise"/><line any_info="No Anys on this line!" content="                elif import_path.startswith('.'):" number="316" precision="precise"/><line any_info="No Anys on this line!" content="                    local_imports.append((import_path, line_num))" number="317" precision="precise"/><line any_info="No Anys on this line!" content="                else:" number="318" precision="empty"/><line any_info="No Anys on this line!" content="                    stdlib_imports.append((import_path, line_num))" number="319" precision="precise"/><line any_info="No Anys on this line!" content="" number="320" precision="empty"/><line any_info="No Anys on this line!" content="        # Check if imports are properly grouped" number="321" precision="empty"/><line any_info="No Anys on this line!" content="        prev_line = 0" number="322" precision="precise"/><line any_info="No Anys on this line!" content="        current_group = None" number="323" precision="precise"/><line any_info="No Anys on this line!" content="" number="324" precision="empty"/><line any_info="No Anys on this line!" content="        for import_path, line_num, import_type in imports:" number="325" precision="precise"/><line any_info="No Anys on this line!" content="            if import_type in ['import', 'from']:" number="326" precision="precise"/><line any_info="No Anys on this line!" content="                if import_path.startswith('odoo'):" number="327" precision="precise"/><line any_info="No Anys on this line!" content="                    group = 'odoo'" number="328" precision="precise"/><line any_info="No Anys on this line!" content="                elif import_path.split('.')[0] in self.COMMON_THIRD_PARTY:" number="329" precision="precise"/><line any_info="No Anys on this line!" content="                    group = 'third_party'" number="330" precision="precise"/><line any_info="No Anys on this line!" content="                elif import_path.startswith('.'):" number="331" precision="precise"/><line any_info="No Anys on this line!" content="                    group = 'local'" number="332" precision="precise"/><line any_info="No Anys on this line!" content="                else:" number="333" precision="empty"/><line any_info="No Anys on this line!" content="                    group = 'stdlib'" number="334" precision="precise"/><line any_info="No Anys on this line!" content="" number="335" precision="empty"/><line any_info="No Anys on this line!" content="                if current_group and current_group != group and line_num == prev_line + 1:" number="336" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(" number="337" precision="any"/><line any_info="No Anys on this line!" content="                        f&quot;Consider grouping imports: {group} mixed with {current_group}&quot;, str(file_path), line_num" number="338" precision="precise"/><line any_info="No Anys on this line!" content="                    )" number="339" precision="empty"/><line any_info="No Anys on this line!" content="" number="340" precision="empty"/><line any_info="No Anys on this line!" content="                current_group = group" number="341" precision="precise"/><line any_info="No Anys on this line!" content="                prev_line = line_num" number="342" precision="precise"/><line any_info="No Anys on this line!" content="" number="343" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="344" precision="precise"/><line any_info="No Anys on this line!" content="" number="345" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_python_file(self, file_path: Path, module_name: str) -&gt; bool:" number="346" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate a single Python file.&quot;&quot;&quot;" number="347" precision="empty"/><line any_info="No Anys on this line!" content="        rel_path = file_path.relative_to(self.base_path / module_name)" number="348" precision="precise"/><line any_info="No Anys on this line!" content="" number="349" precision="empty"/><line any_info="No Anys on this line!" content="        # Parse the file" number="350" precision="empty"/><line any_info="No Anys on this line!" content="        tree = self.parse_python_file(file_path)" number="351" precision="precise"/><line any_info="No Anys on this line!" content="        if tree is None:" number="352" precision="precise"/><line any_info="No Anys on this line!" content="            return False" number="353" precision="precise"/><line any_info="No Anys on this line!" content="" number="354" precision="empty"/><line any_info="No Anys on this line!" content="        # Extract imports" number="355" precision="empty"/><line any_info="No Anys on this line!" content="        imports = self.extract_imports(tree)" number="356" precision="precise"/><line any_info="No Anys on this line!" content="" number="357" precision="empty"/><line any_info="No Anys on this line!" content="        # Store imports for circular dependency checking" number="358" precision="empty"/><line any_info="No Anys on this line!" content="        self.file_imports[str(rel_path)] = imports" number="359" precision="precise"/><line any_info="No Anys on this line!" content="" number="360" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="361" precision="precise"/><line any_info="No Anys on this line!" content="" number="362" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate each import" number="363" precision="empty"/><line any_info="No Anys on this line!" content="        for import_path, line_num, import_type in imports:" number="364" precision="precise"/><line any_info="No Anys on this line!" content="            if import_type in ['import', 'from']:" number="365" precision="precise"/><line any_info="No Anys on this line!" content="                success &amp;= self.validate_import_path(import_path, rel_path, line_num)" number="366" precision="precise"/><line any_info="No Anys on this line!" content="" number="367" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate Odoo-specific imports" number="368" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.validate_odoo_imports(imports, rel_path)" number="369" precision="precise"/><line any_info="No Anys on this line!" content="" number="370" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for unused imports" number="371" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.check_unused_imports(tree, imports, rel_path)" number="372" precision="precise"/><line any_info="No Anys on this line!" content="" number="373" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate import organization" number="374" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.validate_import_organization(imports, rel_path)" number="375" precision="precise"/><line any_info="No Anys on this line!" content="" number="376" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="377" precision="precise"/><line any_info="No Anys on this line!" content="" number="378" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_module_imports(self, module_name: str) -&gt; bool:" number="379" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate all Python files in a module.&quot;&quot;&quot;" number="380" precision="empty"/><line any_info="No Anys on this line!" content="        module_path = self.base_path / module_name" number="381" precision="precise"/><line any_info="No Anys on this line!" content="" number="382" precision="empty"/><line any_info="No Anys on this line!" content="        if not module_path.exists():" number="383" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Module directory not found: {module_name}&quot;)" number="384" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="385" precision="precise"/><line any_info="No Anys on this line!" content="" number="386" precision="empty"/><line any_info="No Anys on this line!" content="        # Find all Python files" number="387" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        python_files = list(module_path.rglob(&quot;*.py&quot;))" number="388" precision="precise"/><line any_info="No Anys on this line!" content="" number="389" precision="empty"/><line any_info="No Anys on this line!" content="        if not python_files:" number="390" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(f&quot;No Python files found in module: {module_name}&quot;)" number="391" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="392" precision="precise"/><line any_info="No Anys on this line!" content="" number="393" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="394" precision="precise"/><line any_info="No Anys on this line!" content="" number="395" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate each Python file" number="396" precision="empty"/><line any_info="No Anys on this line!" content="        for py_file in python_files:" number="397" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_python_file(py_file, module_name):" number="398" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="399" precision="precise"/><line any_info="No Anys on this line!" content="" number="400" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for circular imports within the module" number="401" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.check_circular_imports(module_name)" number="402" precision="precise"/><line any_info="No Anys on this line!" content="" number="403" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="404" precision="precise"/><line any_info="No Anys on this line!" content="" number="405" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_all_modules(self) -&gt; bool:" number="406" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate Python imports in all modules.&quot;&quot;&quot;" number="407" precision="empty"/><line any_info="No Anys on this line!" content="        if not self.base_path.exists():" number="408" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Custom modules directory not found: {self.base_path}&quot;)" number="409" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="410" precision="precise"/><line any_info="No Anys on this line!" content="" number="411" precision="empty"/><line any_info="No Anys on this line!" content="        modules = [d for d in self.base_path.iterdir() if d.is_dir() and not d.name.startswith('.')]" number="412" precision="precise"/><line any_info="No Anys on this line!" content="" number="413" precision="empty"/><line any_info="No Anys on this line!" content="        if not modules:" number="414" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;No modules found in custom_modules directory&quot;)" number="415" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="416" precision="precise"/><line any_info="No Anys on this line!" content="" number="417" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="418" precision="precise"/><line any_info="No Anys on this line!" content="        for module_dir in modules:" number="419" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_module_imports(module_dir.name):" number="420" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="421" precision="precise"/><line any_info="No Anys on this line!" content="" number="422" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="423" precision="precise"/><line any_info="No Anys on this line!" content="" number="424" precision="empty"/><line any_info="No Anys on this line!" content="    def print_results(self):" number="425" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Print validation results in a clear, structured format.&quot;&quot;&quot;" number="426" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="427" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;🔍 ODOO PYTHON IMPORT VALIDATION RESULTS&quot;)" number="428" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="429" precision="any"/><line any_info="No Anys on this line!" content="" number="430" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        total_issues = len(self.errors) + len(self.warnings)" number="431" precision="any"/><line any_info="No Anys on this line!" content="" number="432" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.errors:" number="433" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n❌ CRITICAL ERRORS ({len(self.errors)}):&quot;)" number="434" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for error in self.errors:" number="435" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {error}&quot;)" number="436" precision="any"/><line any_info="No Anys on this line!" content="" number="437" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.warnings:" number="438" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n⚠️  WARNINGS ({len(self.warnings)}):&quot;)" number="439" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for warning in self.warnings:" number="440" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {warning}&quot;)" number="441" precision="any"/><line any_info="No Anys on this line!" content="" number="442" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.info:" number="443" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\nℹ️  SUGGESTIONS ({len(self.info)}):&quot;)" number="444" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for info in self.info:" number="445" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {info}&quot;)" number="446" precision="any"/><line any_info="No Anys on this line!" content="" number="447" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="448" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        if not self.errors and not self.warnings:" number="449" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;✅ ALL IMPORT VALIDATIONS PASSED!&quot;)" number="450" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        elif not self.errors:" number="451" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;✅ No errors found ({len(self.warnings)} warnings)&quot;)" number="452" precision="any"/><line any_info="No Anys on this line!" content="        else:" number="453" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            print(f&quot;❌ Validation failed: {len(self.errors)} errors, {len(self.warnings)} warnings&quot;)" number="454" precision="any"/><line any_info="No Anys on this line!" content="" number="455" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        if total_issues == 0:" number="456" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;🎉 Your Python imports are clean and ready!&quot;)" number="457" precision="any"/><line any_info="No Anys on this line!" content="" number="458" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="459" precision="any"/><line any_info="No Anys on this line!" content="" number="460" precision="empty"/><line any_info="No Anys on this line!" content="" number="461" precision="empty"/><line any_info="No Anys on this line!" content="def main():" number="462" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Main function.&quot;&quot;&quot;" number="463" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    validator = ImportValidator()" number="464" precision="any"/><line any_info="No Anys on this line!" content="" number="465" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;🔍 Starting Odoo Python Import Validation...&quot;)" number="466" precision="any"/><line any_info="No Anys on this line!" content="" number="467" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    if len(sys.argv) &gt; 1:" number="468" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        module_name = sys.argv[1]" number="469" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;📦 Validating imports in module: {module_name}&quot;)" number="470" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        success = validator.validate_module_imports(module_name)" number="471" precision="any"/><line any_info="No Anys on this line!" content="    else:" number="472" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;📦 Validating imports in all modules...&quot;)" number="473" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        success = validator.validate_all_modules()" number="474" precision="any"/><line any_info="No Anys on this line!" content="" number="475" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    validator.print_results()" number="476" precision="any"/><line any_info="No Anys on this line!" content="" number="477" precision="empty"/><line any_info="No Anys on this line!" content="    # Exit with error code if validation failed" number="478" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="    sys.exit(0 if success and not validator.errors else 1)" number="479" precision="any"/><line any_info="No Anys on this line!" content="" number="480" precision="empty"/><line any_info="No Anys on this line!" content="" number="481" precision="empty"/><line any_info="No Anys on this line!" content="if __name__ == &quot;__main__&quot;:" number="482" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    main()" number="483" precision="any"/></mypy-report-file>
