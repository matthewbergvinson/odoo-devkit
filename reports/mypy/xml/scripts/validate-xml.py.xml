<?xml-stylesheet type="text/xsl" href="../../mypy-html.xslt"?><mypy-report-file name="scripts/validate-xml.py" module="scripts.validate-xml"><line any_info="No Anys on this line!" content="#!/usr/bin/env python3" number="1" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="2" precision="empty"/><line any_info="No Anys on this line!" content="Odoo XML Validation Script" number="3" precision="empty"/><line any_info="No Anys on this line!" content="Royal Textiles Project - Local Testing Infrastructure" number="4" precision="empty"/><line any_info="No Anys on this line!" content="" number="5" precision="empty"/><line any_info="No Anys on this line!" content="This script provides comprehensive validation of XML files in Odoo modules," number="6" precision="empty"/><line any_info="No Anys on this line!" content="including views, security files, and data files. It checks for XML syntax" number="7" precision="empty"/><line any_info="No Anys on this line!" content="errors and validates Odoo-specific structure requirements." number="8" precision="empty"/><line any_info="No Anys on this line!" content="" number="9" precision="empty"/><line any_info="No Anys on this line!" content="Key Features:" number="10" precision="empty"/><line any_info="No Anys on this line!" content="- XML syntax validation" number="11" precision="empty"/><line any_info="No Anys on this line!" content="- Odoo root element validation (&lt;odoo&gt;)" number="12" precision="empty"/><line any_info="No Anys on this line!" content="- Record structure validation" number="13" precision="empty"/><line any_info="No Anys on this line!" content="- Field and attribute validation" number="14" precision="empty"/><line any_info="No Anys on this line!" content="- Security file structure validation" number="15" precision="empty"/><line any_info="No Anys on this line!" content="- View structure validation for forms, trees, kanban, etc." number="16" precision="empty"/><line any_info="No Anys on this line!" content="- Menu and action validation" number="17" precision="empty"/><line any_info="No Anys on this line!" content="- Data file structure validation" number="18" precision="empty"/><line any_info="No Anys on this line!" content="" number="19" precision="empty"/><line any_info="No Anys on this line!" content="Usage:" number="20" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-xml.py [module_name]" number="21" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-xml.py  # validates all modules" number="22" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="23" precision="empty"/><line any_info="No Anys on this line!" content="" number="24" precision="empty"/><line any_info="No Anys on this line!" content="import re" number="25" precision="precise"/><line any_info="No Anys on this line!" content="import sys" number="26" precision="precise"/><line any_info="No Anys on this line!" content="import xml.etree.ElementTree as ET" number="27" precision="precise"/><line any_info="No Anys on this line!" content="from pathlib import Path" number="28" precision="precise"/><line any_info="No Anys on this line!" content="from typing import List, Optional, Tuple" number="29" precision="precise"/><line any_info="No Anys on this line!" content="" number="30" precision="empty"/><line any_info="No Anys on this line!" content="" number="31" precision="empty"/><line any_info="No Anys on this line!" content="class XMLValidator:" number="32" precision="precise"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Comprehensive validator for Odoo XML files.&quot;&quot;&quot;" number="33" precision="empty"/><line any_info="No Anys on this line!" content="" number="34" precision="empty"/><line any_info="No Anys on this line!" content="    # Valid Odoo view types" number="35" precision="empty"/><line any_info="No Anys on this line!" content="    VALID_VIEW_TYPES = {" number="36" precision="precise"/><line any_info="No Anys on this line!" content="        'form'," number="37" precision="precise"/><line any_info="No Anys on this line!" content="        'tree'," number="38" precision="precise"/><line any_info="No Anys on this line!" content="        'kanban'," number="39" precision="precise"/><line any_info="No Anys on this line!" content="        'calendar'," number="40" precision="precise"/><line any_info="No Anys on this line!" content="        'pivot'," number="41" precision="precise"/><line any_info="No Anys on this line!" content="        'graph'," number="42" precision="precise"/><line any_info="No Anys on this line!" content="        'gantt'," number="43" precision="precise"/><line any_info="No Anys on this line!" content="        'dashboard'," number="44" precision="precise"/><line any_info="No Anys on this line!" content="        'search'," number="45" precision="precise"/><line any_info="No Anys on this line!" content="        'activity'," number="46" precision="precise"/><line any_info="No Anys on this line!" content="        'qweb'," number="47" precision="precise"/><line any_info="No Anys on this line!" content="        'map'," number="48" precision="precise"/><line any_info="No Anys on this line!" content="        'cohort'," number="49" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="50" precision="empty"/><line any_info="No Anys on this line!" content="" number="51" precision="empty"/><line any_info="No Anys on this line!" content="    # Valid field widget types (common ones)" number="52" precision="empty"/><line any_info="No Anys on this line!" content="    VALID_WIDGETS = {" number="53" precision="precise"/><line any_info="No Anys on this line!" content="        'char'," number="54" precision="precise"/><line any_info="No Anys on this line!" content="        'text'," number="55" precision="precise"/><line any_info="No Anys on this line!" content="        'html'," number="56" precision="precise"/><line any_info="No Anys on this line!" content="        'email'," number="57" precision="precise"/><line any_info="No Anys on this line!" content="        'url'," number="58" precision="precise"/><line any_info="No Anys on this line!" content="        'phone'," number="59" precision="precise"/><line any_info="No Anys on this line!" content="        'image'," number="60" precision="precise"/><line any_info="No Anys on this line!" content="        'binary'," number="61" precision="precise"/><line any_info="No Anys on this line!" content="        'selection'," number="62" precision="precise"/><line any_info="No Anys on this line!" content="        'radio'," number="63" precision="precise"/><line any_info="No Anys on this line!" content="        'many2one'," number="64" precision="precise"/><line any_info="No Anys on this line!" content="        'many2many'," number="65" precision="precise"/><line any_info="No Anys on this line!" content="        'one2many'," number="66" precision="precise"/><line any_info="No Anys on this line!" content="        'date'," number="67" precision="precise"/><line any_info="No Anys on this line!" content="        'datetime'," number="68" precision="precise"/><line any_info="No Anys on this line!" content="        'float'," number="69" precision="precise"/><line any_info="No Anys on this line!" content="        'monetary'," number="70" precision="precise"/><line any_info="No Anys on this line!" content="        'integer'," number="71" precision="precise"/><line any_info="No Anys on this line!" content="        'boolean'," number="72" precision="precise"/><line any_info="No Anys on this line!" content="        'progressbar'," number="73" precision="precise"/><line any_info="No Anys on this line!" content="        'handle'," number="74" precision="precise"/><line any_info="No Anys on this line!" content="        'priority'," number="75" precision="precise"/><line any_info="No Anys on this line!" content="        'toggle_button'," number="76" precision="precise"/><line any_info="No Anys on this line!" content="        'badge'," number="77" precision="precise"/><line any_info="No Anys on this line!" content="        'statusbar'," number="78" precision="precise"/><line any_info="No Anys on this line!" content="        'percentage'," number="79" precision="precise"/><line any_info="No Anys on this line!" content="        'float_time'," number="80" precision="precise"/><line any_info="No Anys on this line!" content="        'color'," number="81" precision="precise"/><line any_info="No Anys on this line!" content="        'signature'," number="82" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="83" precision="empty"/><line any_info="No Anys on this line!" content="" number="84" precision="empty"/><line any_info="No Anys on this line!" content="    # Valid record models for security and data" number="85" precision="empty"/><line any_info="No Anys on this line!" content="    SECURITY_MODELS = {'ir.model.access', 'ir.rule', 'res.groups', 'ir.module.category'}" number="86" precision="precise"/><line any_info="No Anys on this line!" content="" number="87" precision="empty"/><line any_info="No Anys on this line!" content="    # Valid action types" number="88" precision="empty"/><line any_info="No Anys on this line!" content="    ACTION_MODELS = {" number="89" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.actions.act_window'," number="90" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.actions.act_url'," number="91" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.actions.server'," number="92" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.actions.report'," number="93" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.actions.client'," number="94" precision="precise"/><line any_info="No Anys on this line!" content="        'ir.ui.menu'," number="95" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="96" precision="empty"/><line any_info="No Anys on this line!" content="" number="97" precision="empty"/><line any_info="No Anys on this line!" content="    def __init__(self, base_path: str = &quot;custom_modules&quot;):" number="98" precision="precise"/><line any_info="No Anys on this line!" content="        self.base_path = Path(base_path)" number="99" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors: List[str] = []" number="100" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings: List[str] = []" number="101" precision="precise"/><line any_info="No Anys on this line!" content="        self.info: List[str] = []" number="102" precision="precise"/><line any_info="No Anys on this line!" content="" number="103" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def error(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="104" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an error message.&quot;&quot;&quot;" number="105" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="106" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="107" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="108" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors.append(f&quot;❌ {location}: {message}&quot;)" number="109" precision="precise"/><line any_info="No Anys on this line!" content="" number="110" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def warning(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="111" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add a warning message.&quot;&quot;&quot;" number="112" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="113" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="114" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="115" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings.append(f&quot;⚠️  {location}: {message}&quot;)" number="116" precision="precise"/><line any_info="No Anys on this line!" content="" number="117" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def add_info(self, message: str, file_path: str = &quot;&quot;, line_num: Optional[int] = None):" number="118" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an info message.&quot;&quot;&quot;" number="119" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{file_path}&quot;" number="120" precision="precise"/><line any_info="No Anys on this line!" content="        if line_num:" number="121" precision="precise"/><line any_info="No Anys on this line!" content="            location += f&quot;:{line_num}&quot;" number="122" precision="precise"/><line any_info="No Anys on this line!" content="        self.info.append(f&quot;ℹ️  {location}: {message}&quot;)" number="123" precision="precise"/><line any_info="No Anys on this line!" content="" number="124" precision="empty"/><line any_info="No Anys on this line!" content="    def get_line_number(self, element: ET.Element, xml_content: str) -&gt; Optional[int]:" number="125" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Get line number for an XML element (best effort).&quot;&quot;&quot;" number="126" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="127" precision="empty"/><line any_info="No Anys on this line!" content="            # This is a simplified approach - XML parsing doesn't preserve line numbers easily" number="128" precision="empty"/><line any_info="No Anys on this line!" content="            # We'll search for the element's tag in the content" number="129" precision="empty"/><line any_info="No Anys on this line!" content="            if hasattr(element, 'tag') and element.tag:" number="130" precision="precise"/><line any_info="No Anys on this line!" content="                # Look for the opening tag" number="131" precision="empty"/><line any_info="No Anys on this line!" content="                pattern = f&quot;&lt;{element.tag}&quot;" number="132" precision="precise"/><line any_info="No Anys on this line!" content="                lines = xml_content.split('\n')" number="133" precision="precise"/><line any_info="No Anys on this line!" content="                for i, line in enumerate(lines, 1):" number="134" precision="precise"/><line any_info="No Anys on this line!" content="                    if pattern in line:" number="135" precision="precise"/><line any_info="No Anys on this line!" content="                        return i" number="136" precision="precise"/><line any_info="No Anys on this line!" content="            return None" number="137" precision="precise"/><line any_info="No Anys on this line!" content="        except (AttributeError, ValueError):" number="138" precision="precise"/><line any_info="No Anys on this line!" content="            return None" number="139" precision="precise"/><line any_info="No Anys on this line!" content="" number="140" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_xml_syntax(self, file_path: Path) -&gt; Tuple[bool, Optional[ET.Element]]:" number="141" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate XML syntax and return parsed tree.&quot;&quot;&quot;" number="142" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="143" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            tree = ET.parse(file_path)" number="144" precision="precise"/><line any_info="No Anys on this line!" content="            root = tree.getroot()" number="145" precision="precise"/><line any_info="No Anys on this line!" content="            return True, root" number="146" precision="precise"/><line any_info="No Anys on this line!" content="        except ET.ParseError as e:" number="147" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;XML syntax error: {e}&quot;, str(file_path))" number="148" precision="any"/><line any_info="No Anys on this line!" content="            return False, None" number="149" precision="precise"/><line any_info="No Anys on this line!" content="        except UnicodeDecodeError:" number="150" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;File encoding not supported. Use UTF-8.&quot;, str(file_path))" number="151" precision="any"/><line any_info="No Anys on this line!" content="            return False, None" number="152" precision="precise"/><line any_info="No Anys on this line!" content="        except Exception as e:" number="153" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;XML parsing error: {e}&quot;, str(file_path))" number="154" precision="any"/><line any_info="No Anys on this line!" content="            return False, None" number="155" precision="precise"/><line any_info="No Anys on this line!" content="" number="156" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_odoo_root_structure(self, root: ET.Element, file_path: Path) -&gt; bool:" number="157" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate that XML has proper Odoo root structure.&quot;&quot;&quot;" number="158" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="159" precision="precise"/><line any_info="No Anys on this line!" content="" number="160" precision="empty"/><line any_info="No Anys on this line!" content="        # Check root element" number="161" precision="empty"/><line any_info="No Anys on this line!" content="        if root.tag != 'odoo':" number="162" precision="precise"/><line any_info="No Anys on this line!" content="            # Legacy format check" number="163" precision="empty"/><line any_info="No Anys on this line!" content="            if root.tag == 'openerp':" number="164" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(&quot;Using legacy '&lt;openerp&gt;' root element. Consider updating to '&lt;odoo&gt;'&quot;, str(file_path))" number="165" precision="any"/><line any_info="No Anys on this line!" content="            else:" number="166" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Root element should be '&lt;odoo&gt;', found '&lt;{root.tag}&gt;'&quot;, str(file_path))" number="167" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="168" precision="precise"/><line any_info="No Anys on this line!" content="" number="169" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for direct child elements - should typically be 'data' elements" number="170" precision="empty"/><line any_info="No Anys on this line!" content="        valid_root_children = {'data'}" number="171" precision="precise"/><line any_info="No Anys on this line!" content="        for child in root:" number="172" precision="precise"/><line any_info="No Anys on this line!" content="            if child.tag not in valid_root_children:" number="173" precision="precise"/><line any_info="No Anys on this line!" content="                if child.tag in {'record', 'menuitem', 'template'}:" number="174" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(" number="175" precision="any"/><line any_info="No Anys on this line!" content="                        f&quot;Found '{child.tag}' directly under root. Consider wrapping in '&lt;data&gt;' element&quot;," number="176" precision="precise"/><line any_info="No Anys on this line!" content="                        str(file_path)," number="177" precision="precise"/><line any_info="No Anys on this line!" content="                    )" number="178" precision="empty"/><line any_info="No Anys on this line!" content="                else:" number="179" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(f&quot;Unexpected root child element: '{child.tag}'&quot;, str(file_path))" number="180" precision="any"/><line any_info="No Anys on this line!" content="" number="181" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="182" precision="precise"/><line any_info="No Anys on this line!" content="" number="183" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_record_structure(self, record: ET.Element, file_path: Path) -&gt; bool:" number="184" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate structure of &lt;record&gt; elements.&quot;&quot;&quot;" number="185" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="186" precision="precise"/><line any_info="No Anys on this line!" content="" number="187" precision="empty"/><line any_info="No Anys on this line!" content="        # Check required attributes" number="188" precision="empty"/><line any_info="No Anys on this line!" content="        if 'id' not in record.attrib:" number="189" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;Record missing required 'id' attribute&quot;, str(file_path))" number="190" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="191" precision="precise"/><line any_info="No Anys on this line!" content="" number="192" precision="empty"/><line any_info="No Anys on this line!" content="        if 'model' not in record.attrib:" number="193" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;Record missing required 'model' attribute&quot;, str(file_path))" number="194" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="195" precision="precise"/><line any_info="No Anys on this line!" content="        else:" number="196" precision="empty"/><line any_info="No Anys on this line!" content="            model = record.attrib['model']" number="197" precision="precise"/><line any_info="No Anys on this line!" content="            # Validate model name format" number="198" precision="empty"/><line any_info="No Anys on this line!" content="            if not re.match(r'^[a-z][a-z0-9]*(\.[a-z][a-z0-9]*)*$', model):" number="199" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Model name '{model}' doesn't follow naming convention&quot;, str(file_path))" number="200" precision="any"/><line any_info="No Anys on this line!" content="" number="201" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate field elements" number="202" precision="empty"/><line any_info="No Anys on this line!" content="        for field in record.findall('field'):" number="203" precision="precise"/><line any_info="No Anys on this line!" content="            self.validate_field_element(field, file_path)" number="204" precision="precise"/><line any_info="No Anys on this line!" content="" number="205" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="206" precision="precise"/><line any_info="No Anys on this line!" content="" number="207" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_field_element(self, field: ET.Element, file_path: Path) -&gt; bool:" number="208" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate &lt;field&gt; elements within records.&quot;&quot;&quot;" number="209" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="210" precision="precise"/><line any_info="No Anys on this line!" content="" number="211" precision="empty"/><line any_info="No Anys on this line!" content="        # Check required 'name' attribute" number="212" precision="empty"/><line any_info="No Anys on this line!" content="        if 'name' not in field.attrib:" number="213" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(&quot;Field element missing required 'name' attribute&quot;, str(file_path))" number="214" precision="any"/><line any_info="No Anys on this line!" content="            success = False" number="215" precision="precise"/><line any_info="No Anys on this line!" content="" number="216" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        field_name = field.attrib.get('name', '')" number="217" precision="precise"/><line any_info="No Anys on this line!" content="" number="218" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for common field validation issues" number="219" precision="empty"/><line any_info="No Anys on this line!" content="        if 'eval' in field.attrib and 'ref' in field.attrib:" number="220" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;Field '{field_name}' has both 'eval' and 'ref' attributes&quot;, str(file_path))" number="221" precision="any"/><line any_info="No Anys on this line!" content="" number="222" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate reference fields" number="223" precision="empty"/><line any_info="No Anys on this line!" content="        if 'ref' in field.attrib:" number="224" precision="precise"/><line any_info="No Anys on this line!" content="            ref_value = field.attrib['ref']" number="225" precision="precise"/><line any_info="No Anys on this line!" content="            if not ref_value:" number="226" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Field '{field_name}' has empty 'ref' attribute&quot;, str(file_path))" number="227" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="228" precision="precise"/><line any_info="No Anys on this line!" content="" number="229" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for deprecated attributes" number="230" precision="empty"/><line any_info="No Anys on this line!" content="        deprecated_attrs = {'colspan', 'position'}" number="231" precision="precise"/><line any_info="No Anys on this line!" content="        for attr in deprecated_attrs:" number="232" precision="precise"/><line any_info="No Anys on this line!" content="            if attr in field.attrib and 'view' not in str(file_path).lower():" number="233" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Field '{field_name}' uses potentially deprecated attribute '{attr}'&quot;, str(file_path))" number="234" precision="any"/><line any_info="No Anys on this line!" content="" number="235" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="236" precision="precise"/><line any_info="No Anys on this line!" content="" number="237" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_view_structure(self, record: ET.Element, file_path: Path) -&gt; bool:" number="238" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate view-specific record structure.&quot;&quot;&quot;" number="239" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="240" precision="precise"/><line any_info="No Anys on this line!" content="" number="241" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="        if record.attrib.get('model') != 'ir.ui.view':" number="242" precision="precise"/><line any_info="No Anys on this line!" content="            return success" number="243" precision="precise"/><line any_info="No Anys on this line!" content="" number="244" precision="empty"/><line any_info="No Anys on this line!" content="        # Find view type and architecture" number="245" precision="empty"/><line any_info="No Anys on this line!" content="        view_type = None" number="246" precision="precise"/><line any_info="No Anys on this line!" content="        arch_field = None" number="247" precision="precise"/><line any_info="No Anys on this line!" content="" number="248" precision="empty"/><line any_info="No Anys on this line!" content="        for field in record.findall('field'):" number="249" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            field_name = field.attrib.get('name')" number="250" precision="precise"/><line any_info="No Anys on this line!" content="            if field_name == 'type':" number="251" precision="precise"/><line any_info="No Anys on this line!" content="                view_type = field.text" number="252" precision="precise"/><line any_info="No Anys on this line!" content="            elif field_name == 'arch':" number="253" precision="precise"/><line any_info="No Anys on this line!" content="                arch_field = field" number="254" precision="precise"/><line any_info="No Anys on this line!" content="" number="255" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate view type" number="256" precision="empty"/><line any_info="No Anys on this line!" content="        if view_type and view_type not in self.VALID_VIEW_TYPES:" number="257" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;Unknown view type: '{view_type}'&quot;, str(file_path))" number="258" precision="any"/><line any_info="No Anys on this line!" content="" number="259" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate view architecture" number="260" precision="empty"/><line any_info="No Anys on this line!" content="        if arch_field is not None:" number="261" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_view_architecture(arch_field, view_type, file_path)" number="262" precision="precise"/><line any_info="No Anys on this line!" content="" number="263" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="264" precision="precise"/><line any_info="No Anys on this line!" content="" number="265" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_view_architecture(self, arch_field: ET.Element, view_type: Optional[str], file_path: Path) -&gt; bool:" number="266" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate view architecture structure.&quot;&quot;&quot;" number="267" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="268" precision="precise"/><line any_info="No Anys on this line!" content="" number="269" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for proper view root elements" number="270" precision="empty"/><line any_info="No Anys on this line!" content="        valid_view_roots = {" number="271" precision="precise"/><line any_info="No Anys on this line!" content="            'form': {'form'}," number="272" precision="precise"/><line any_info="No Anys on this line!" content="            'tree': {'tree', 'list'}," number="273" precision="precise"/><line any_info="No Anys on this line!" content="            'kanban': {'kanban'}," number="274" precision="precise"/><line any_info="No Anys on this line!" content="            'search': {'search'}," number="275" precision="precise"/><line any_info="No Anys on this line!" content="            'calendar': {'calendar'}," number="276" precision="precise"/><line any_info="No Anys on this line!" content="            'pivot': {'pivot'}," number="277" precision="precise"/><line any_info="No Anys on this line!" content="            'graph': {'graph'}," number="278" precision="precise"/><line any_info="No Anys on this line!" content="            'gantt': {'gantt'}," number="279" precision="precise"/><line any_info="No Anys on this line!" content="        }" number="280" precision="empty"/><line any_info="No Anys on this line!" content="" number="281" precision="empty"/><line any_info="No Anys on this line!" content="        if view_type and view_type in valid_view_roots:" number="282" precision="precise"/><line any_info="No Anys on this line!" content="            found_valid_root = False" number="283" precision="precise"/><line any_info="No Anys on this line!" content="            for child in arch_field:" number="284" precision="precise"/><line any_info="No Anys on this line!" content="                if child.tag in valid_view_roots[view_type]:" number="285" precision="precise"/><line any_info="No Anys on this line!" content="                    found_valid_root = True" number="286" precision="precise"/><line any_info="No Anys on this line!" content="                    break" number="287" precision="precise"/><line any_info="No Anys on this line!" content="" number="288" precision="empty"/><line any_info="No Anys on this line!" content="            if not found_valid_root:" number="289" precision="precise"/><line any_info="No Anys on this line!" content="                expected_roots = ', '.join(valid_view_roots[view_type])" number="290" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;View type '{view_type}' should have root element: {expected_roots}&quot;, str(file_path))" number="291" precision="any"/><line any_info="No Anys on this line!" content="" number="292" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate field widgets in views" number="293" precision="empty"/><line any_info="No Anys on this line!" content="        for field_elem in arch_field.iter('field'):" number="294" precision="precise"/><line any_info="No Anys on this line!" content="            if 'widget' in field_elem.attrib:" number="295" precision="precise"/><line any_info="No Anys on this line!" content="                widget = field_elem.attrib['widget']" number="296" precision="precise"/><line any_info="No Anys on this line!" content="                if widget not in self.VALID_WIDGETS:" number="297" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(f&quot;Unknown widget type: '{widget}'&quot;, str(file_path))" number="298" precision="any"/><line any_info="No Anys on this line!" content="" number="299" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="300" precision="precise"/><line any_info="No Anys on this line!" content="" number="301" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_security_file(self, root: ET.Element, file_path: Path) -&gt; bool:" number="302" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate security-specific XML structure.&quot;&quot;&quot;" number="303" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="304" precision="precise"/><line any_info="No Anys on this line!" content="" number="305" precision="empty"/><line any_info="No Anys on this line!" content="        for record in root.iter('record'):" number="306" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            model = record.attrib.get('model')" number="307" precision="precise"/><line any_info="No Anys on this line!" content="" number="308" precision="empty"/><line any_info="No Anys on this line!" content="            if model in self.SECURITY_MODELS:" number="309" precision="precise"/><line any_info="No Anys on this line!" content="                success &amp;= self.validate_security_record(record, model, file_path)" number="310" precision="precise"/><line any_info="No Anys on this line!" content="" number="311" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="312" precision="precise"/><line any_info="No Anys on this line!" content="" number="313" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_security_record(self, record: ET.Element, model: str, file_path: Path) -&gt; bool:" number="314" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate specific security record types.&quot;&quot;&quot;" number="315" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="316" precision="precise"/><line any_info="No Anys on this line!" content="" number="317" precision="empty"/><line any_info="No Anys on this line!" content="        if model == 'ir.model.access':" number="318" precision="precise"/><line any_info="No Anys on this line!" content="            # Check required fields for access rights" number="319" precision="empty"/><line any_info="No Anys on this line!" content="            required_fields = {'name', 'model_id', 'perm_read', 'perm_write', 'perm_create', 'perm_unlink'}" number="320" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            declared_fields = {field.attrib.get('name') for field in record.findall('field')}" number="321" precision="precise"/><line any_info="No Anys on this line!" content="" number="322" precision="empty"/><line any_info="No Anys on this line!" content="            missing_fields = required_fields - declared_fields" number="323" precision="precise"/><line any_info="No Anys on this line!" content="            if missing_fields:" number="324" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(" number="325" precision="any"/><line any_info="No Anys on this line!" content="                    f&quot;Access rights record missing recommended fields: {', '.join(missing_fields)}&quot;, str(file_path)" number="326" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="327" precision="empty"/><line any_info="No Anys on this line!" content="" number="328" precision="empty"/><line any_info="No Anys on this line!" content="        elif model == 'ir.rule':" number="329" precision="precise"/><line any_info="No Anys on this line!" content="            # Check rule structure" number="330" precision="empty"/><line any_info="No Anys on this line!" content="            name_field = record.find(&quot;field[@name='name']&quot;)" number="331" precision="precise"/><line any_info="No Anys on this line!" content="            if name_field is None:" number="332" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(&quot;Security rule missing 'name' field&quot;, str(file_path))" number="333" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="334" precision="precise"/><line any_info="No Anys on this line!" content="" number="335" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="336" precision="precise"/><line any_info="No Anys on this line!" content="" number="337" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_menu_and_actions(self, root: ET.Element, file_path: Path) -&gt; bool:" number="338" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate menu items and actions.&quot;&quot;&quot;" number="339" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="340" precision="precise"/><line any_info="No Anys on this line!" content="" number="341" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate menuitem elements" number="342" precision="empty"/><line any_info="No Anys on this line!" content="        for menuitem in root.iter('menuitem'):" number="343" precision="precise"/><line any_info="No Anys on this line!" content="            if 'id' not in menuitem.attrib:" number="344" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(&quot;Menu item missing 'id' attribute&quot;, str(file_path))" number="345" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="346" precision="precise"/><line any_info="No Anys on this line!" content="" number="347" precision="empty"/><line any_info="No Anys on this line!" content="            if 'name' not in menuitem.attrib:" number="348" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(&quot;Menu item missing 'name' attribute&quot;, str(file_path))" number="349" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="350" precision="precise"/><line any_info="No Anys on this line!" content="" number="351" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate action records" number="352" precision="empty"/><line any_info="No Anys on this line!" content="        for record in root.iter('record'):" number="353" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            model = record.attrib.get('model')" number="354" precision="precise"/><line any_info="No Anys on this line!" content="            if model in self.ACTION_MODELS:" number="355" precision="precise"/><line any_info="No Anys on this line!" content="                success &amp;= self.validate_action_record(record, model, file_path)" number="356" precision="precise"/><line any_info="No Anys on this line!" content="" number="357" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="358" precision="precise"/><line any_info="No Anys on this line!" content="" number="359" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_action_record(self, record: ET.Element, model: str, file_path: Path) -&gt; bool:" number="360" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate action record structure.&quot;&quot;&quot;" number="361" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="362" precision="precise"/><line any_info="No Anys on this line!" content="" number="363" precision="empty"/><line any_info="No Anys on this line!" content="        if model == 'ir.actions.act_window':" number="364" precision="precise"/><line any_info="No Anys on this line!" content="            # Check for required fields" number="365" precision="empty"/><line any_info="No Anys on this line!" content="            required_fields = {'name', 'res_model', 'view_mode'}" number="366" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            declared_fields = {field.attrib.get('name') for field in record.findall('field')}" number="367" precision="precise"/><line any_info="No Anys on this line!" content="" number="368" precision="empty"/><line any_info="No Anys on this line!" content="            missing_fields = required_fields - declared_fields" number="369" precision="precise"/><line any_info="No Anys on this line!" content="            if missing_fields:" number="370" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Window action missing recommended fields: {', '.join(missing_fields)}&quot;, str(file_path))" number="371" precision="any"/><line any_info="No Anys on this line!" content="" number="372" precision="empty"/><line any_info="No Anys on this line!" content="        elif model == 'ir.ui.menu':" number="373" precision="precise"/><line any_info="No Anys on this line!" content="            # Validate menu structure" number="374" precision="empty"/><line any_info="No Anys on this line!" content="            action_field = record.find(&quot;field[@name='action']&quot;)" number="375" precision="precise"/><line any_info="No Anys on this line!" content="            if action_field is not None and 'ref' in action_field.attrib:" number="376" precision="precise"/><line any_info="No Anys on this line!" content="                # This is good - menu references an action" number="377" precision="empty"/><line any_info="No Anys on this line!" content="                pass" number="378" precision="precise"/><line any_info="No Anys on this line!" content="            else:" number="379" precision="empty"/><line any_info="No Anys on this line!" content="                parent_field = record.find(&quot;field[@name='parent_id']&quot;)" number="380" precision="precise"/><line any_info="No Anys on this line!" content="                if parent_field is None:" number="381" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(&quot;Menu item without action or parent - may be a root menu&quot;, str(file_path))" number="382" precision="any"/><line any_info="No Anys on this line!" content="" number="383" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="384" precision="precise"/><line any_info="No Anys on this line!" content="" number="385" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_xml_file(self, file_path: Path, module_name: str) -&gt; bool:" number="386" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate a single XML file.&quot;&quot;&quot;" number="387" precision="empty"/><line any_info="No Anys on this line!" content="        rel_path = file_path.relative_to(self.base_path / module_name)" number="388" precision="precise"/><line any_info="No Anys on this line!" content="" number="389" precision="empty"/><line any_info="No Anys on this line!" content="        # Step 1: Validate XML syntax" number="390" precision="empty"/><line any_info="No Anys on this line!" content="        syntax_valid, root = self.validate_xml_syntax(file_path)" number="391" precision="precise"/><line any_info="No Anys on this line!" content="        if not syntax_valid or root is None:" number="392" precision="precise"/><line any_info="No Anys on this line!" content="            return False" number="393" precision="precise"/><line any_info="No Anys on this line!" content="" number="394" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="395" precision="precise"/><line any_info="No Anys on this line!" content="" number="396" precision="empty"/><line any_info="No Anys on this line!" content="        # Step 2: Validate Odoo root structure" number="397" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.validate_odoo_root_structure(root, rel_path)" number="398" precision="precise"/><line any_info="No Anys on this line!" content="" number="399" precision="empty"/><line any_info="No Anys on this line!" content="        # Step 3: Validate record structures" number="400" precision="empty"/><line any_info="No Anys on this line!" content="        for record in root.iter('record'):" number="401" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_record_structure(record, rel_path)" number="402" precision="precise"/><line any_info="No Anys on this line!" content="" number="403" precision="empty"/><line any_info="No Anys on this line!" content="        # Step 4: Validate view-specific structures" number="404" precision="empty"/><line any_info="No Anys on this line!" content="        for record in root.iter('record'):" number="405" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x2)" content="            if record.attrib.get('model') == 'ir.ui.view':" number="406" precision="precise"/><line any_info="No Anys on this line!" content="                success &amp;= self.validate_view_structure(record, rel_path)" number="407" precision="precise"/><line any_info="No Anys on this line!" content="" number="408" precision="empty"/><line any_info="No Anys on this line!" content="        # Step 5: Validate security files" number="409" precision="empty"/><line any_info="No Anys on this line!" content="        if 'security' in str(rel_path):" number="410" precision="precise"/><line any_info="No Anys on this line!" content="            success &amp;= self.validate_security_file(root, rel_path)" number="411" precision="precise"/><line any_info="No Anys on this line!" content="" number="412" precision="empty"/><line any_info="No Anys on this line!" content="        # Step 6: Validate menus and actions" number="413" precision="empty"/><line any_info="No Anys on this line!" content="        success &amp;= self.validate_menu_and_actions(root, rel_path)" number="414" precision="precise"/><line any_info="No Anys on this line!" content="" number="415" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="416" precision="precise"/><line any_info="No Anys on this line!" content="" number="417" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_module_xml(self, module_name: str) -&gt; bool:" number="418" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate all XML files in a module.&quot;&quot;&quot;" number="419" precision="empty"/><line any_info="No Anys on this line!" content="        module_path = self.base_path / module_name" number="420" precision="precise"/><line any_info="No Anys on this line!" content="" number="421" precision="empty"/><line any_info="No Anys on this line!" content="        if not module_path.exists():" number="422" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Module directory not found: {module_name}&quot;)" number="423" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="424" precision="precise"/><line any_info="No Anys on this line!" content="" number="425" precision="empty"/><line any_info="No Anys on this line!" content="        # Find all XML files" number="426" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        xml_files = list(module_path.rglob(&quot;*.xml&quot;))" number="427" precision="precise"/><line any_info="No Anys on this line!" content="" number="428" precision="empty"/><line any_info="No Anys on this line!" content="        if not xml_files:" number="429" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(f&quot;No XML files found in module: {module_name}&quot;)" number="430" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="431" precision="precise"/><line any_info="No Anys on this line!" content="" number="432" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="433" precision="precise"/><line any_info="No Anys on this line!" content="        for xml_file in xml_files:" number="434" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_xml_file(xml_file, module_name):" number="435" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="436" precision="precise"/><line any_info="No Anys on this line!" content="" number="437" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="438" precision="precise"/><line any_info="No Anys on this line!" content="" number="439" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_all_modules(self) -&gt; bool:" number="440" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate XML files in all modules.&quot;&quot;&quot;" number="441" precision="empty"/><line any_info="No Anys on this line!" content="        if not self.base_path.exists():" number="442" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Custom modules directory not found: {self.base_path}&quot;)" number="443" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="444" precision="precise"/><line any_info="No Anys on this line!" content="" number="445" precision="empty"/><line any_info="No Anys on this line!" content="        modules = [d for d in self.base_path.iterdir() if d.is_dir() and not d.name.startswith('.')]" number="446" precision="precise"/><line any_info="No Anys on this line!" content="" number="447" precision="empty"/><line any_info="No Anys on this line!" content="        if not modules:" number="448" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;No modules found in custom_modules directory&quot;)" number="449" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="450" precision="precise"/><line any_info="No Anys on this line!" content="" number="451" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="452" precision="precise"/><line any_info="No Anys on this line!" content="        for module_dir in modules:" number="453" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_module_xml(module_dir.name):" number="454" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="455" precision="precise"/><line any_info="No Anys on this line!" content="" number="456" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="457" precision="precise"/><line any_info="No Anys on this line!" content="" number="458" precision="empty"/><line any_info="No Anys on this line!" content="    def print_results(self):" number="459" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Print validation results in a clear, structured format.&quot;&quot;&quot;" number="460" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="461" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;🔍 ODOO XML VALIDATION RESULTS&quot;)" number="462" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="463" precision="any"/><line any_info="No Anys on this line!" content="" number="464" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        total_issues = len(self.errors) + len(self.warnings)" number="465" precision="any"/><line any_info="No Anys on this line!" content="" number="466" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.errors:" number="467" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n❌ CRITICAL ERRORS ({len(self.errors)}):&quot;)" number="468" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for error in self.errors:" number="469" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {error}&quot;)" number="470" precision="any"/><line any_info="No Anys on this line!" content="" number="471" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.warnings:" number="472" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n⚠️  WARNINGS ({len(self.warnings)}):&quot;)" number="473" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for warning in self.warnings:" number="474" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {warning}&quot;)" number="475" precision="any"/><line any_info="No Anys on this line!" content="" number="476" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.info:" number="477" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\nℹ️  SUGGESTIONS ({len(self.info)}):&quot;)" number="478" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for info in self.info:" number="479" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {info}&quot;)" number="480" precision="any"/><line any_info="No Anys on this line!" content="" number="481" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="482" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        if not self.errors and not self.warnings:" number="483" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;✅ ALL XML VALIDATIONS PASSED!&quot;)" number="484" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        elif not self.errors:" number="485" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;✅ No errors found ({len(self.warnings)} warnings)&quot;)" number="486" precision="any"/><line any_info="No Anys on this line!" content="        else:" number="487" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            print(f&quot;❌ Validation failed: {len(self.errors)} errors, {len(self.warnings)} warnings&quot;)" number="488" precision="any"/><line any_info="No Anys on this line!" content="" number="489" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        if total_issues == 0:" number="490" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;🎉 Your XML files are ready for deployment!&quot;)" number="491" precision="any"/><line any_info="No Anys on this line!" content="" number="492" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="493" precision="any"/><line any_info="No Anys on this line!" content="" number="494" precision="empty"/><line any_info="No Anys on this line!" content="" number="495" precision="empty"/><line any_info="No Anys on this line!" content="def main():" number="496" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Main function.&quot;&quot;&quot;" number="497" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    validator = XMLValidator()" number="498" precision="any"/><line any_info="No Anys on this line!" content="" number="499" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;🔍 Starting Odoo XML Validation...&quot;)" number="500" precision="any"/><line any_info="No Anys on this line!" content="" number="501" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    if len(sys.argv) &gt; 1:" number="502" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        module_name = sys.argv[1]" number="503" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;📦 Validating XML files in module: {module_name}&quot;)" number="504" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        success = validator.validate_module_xml(module_name)" number="505" precision="any"/><line any_info="No Anys on this line!" content="    else:" number="506" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;📦 Validating XML files in all modules...&quot;)" number="507" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        success = validator.validate_all_modules()" number="508" precision="any"/><line any_info="No Anys on this line!" content="" number="509" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    validator.print_results()" number="510" precision="any"/><line any_info="No Anys on this line!" content="" number="511" precision="empty"/><line any_info="No Anys on this line!" content="    # Exit with error code if validation failed" number="512" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="    sys.exit(0 if success and not validator.errors else 1)" number="513" precision="any"/><line any_info="No Anys on this line!" content="" number="514" precision="empty"/><line any_info="No Anys on this line!" content="" number="515" precision="empty"/><line any_info="No Anys on this line!" content="if __name__ == &quot;__main__&quot;:" number="516" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    main()" number="517" precision="any"/></mypy-report-file>