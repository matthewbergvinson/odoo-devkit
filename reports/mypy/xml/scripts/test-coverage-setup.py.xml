<?xml-stylesheet type="text/xsl" href="../../mypy-html.xslt"?><mypy-report-file name="scripts/test-coverage-setup.py" module="scripts.test-coverage-setup"><line any_info="No Anys on this line!" content="#!/usr/bin/env python3" number="1" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="2" precision="empty"/><line any_info="No Anys on this line!" content="Test Coverage Setup Validation Script" number="3" precision="empty"/><line any_info="No Anys on this line!" content="Task 4.5: Implement test coverage reporting with coverage.py" number="4" precision="empty"/><line any_info="No Anys on this line!" content="" number="5" precision="empty"/><line any_info="No Anys on this line!" content="This script validates our coverage setup without requiring full Odoo installation." number="6" precision="empty"/><line any_info="No Anys on this line!" content="It tests our fixture system and coverage configuration independently." number="7" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="8" precision="empty"/><line any_info="No Anys on this line!" content="" number="9" precision="empty"/><line any_info="No Anys on this line!" content="import importlib.util" number="10" precision="precise"/><line any_info="No Anys on this line!" content="import os" number="11" precision="precise"/><line any_info="No Anys on this line!" content="import subprocess" number="12" precision="precise"/><line any_info="No Anys on this line!" content="import sys" number="13" precision="precise"/><line any_info="No Anys on this line!" content="from pathlib import Path" number="14" precision="precise"/><line any_info="No Anys on this line!" content="" number="15" precision="empty"/><line any_info="No Anys on this line!" content="" number="16" precision="empty"/><line any_info="No Anys on this line!" content="def test_coverage_installation():" number="17" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test if coverage.py is properly installed&quot;&quot;&quot;" number="18" precision="empty"/><line any_info="No Anys on this line!" content="    try:" number="19" precision="empty"/><line any_info="No Anys on this line!" content="        import coverage" number="20" precision="precise"/><line any_info="No Anys on this line!" content="" number="21" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        print(f&quot;✅ coverage.py installed: {coverage.__version__}&quot;)" number="22" precision="any"/><line any_info="No Anys on this line!" content="        return True" number="23" precision="any"/><line any_info="No Anys on this line!" content="    except ImportError:" number="24" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;❌ coverage.py not installed&quot;)" number="25" precision="any"/><line any_info="No Anys on this line!" content="        return False" number="26" precision="any"/><line any_info="No Anys on this line!" content="" number="27" precision="empty"/><line any_info="No Anys on this line!" content="" number="28" precision="empty"/><line any_info="No Anys on this line!" content="def test_coveragerc_config():" number="29" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test if .coveragerc configuration is valid&quot;&quot;&quot;" number="30" precision="empty"/><line any_info="No Anys on this line!" content="    try:" number="31" precision="empty"/><line any_info="No Anys on this line!" content="        import coverage" number="32" precision="precise"/><line any_info="No Anys on this line!" content="" number="33" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Explicit (x2)" content="        cov = coverage.Coverage()" number="34" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        config = cov.config" number="35" precision="any"/><line any_info="No Anys on this line!" content="" number="36" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;✅ .coveragerc configuration loaded successfully&quot;)" number="37" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        print(f&quot;   Source directories: {config.source}&quot;)" number="38" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        print(f&quot;   HTML directory: {config.html_dir}&quot;)" number="39" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="        print(f&quot;   Branch coverage: {config.branch}&quot;)" number="40" precision="any"/><line any_info="No Anys on this line!" content="" number="41" precision="empty"/><line any_info="No Anys on this line!" content="        return True" number="42" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    except Exception as e:" number="43" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;❌ .coveragerc configuration error: {e}&quot;)" number="44" precision="any"/><line any_info="No Anys on this line!" content="        return False" number="45" precision="any"/><line any_info="No Anys on this line!" content="" number="46" precision="empty"/><line any_info="No Anys on this line!" content="" number="47" precision="empty"/><line any_info="No Anys on this line!" content="def test_fixture_imports():" number="48" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test if our fixture modules can be imported&quot;&quot;&quot;" number="49" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    fixture_modules = [" number="50" precision="any"/><line any_info="No Anys on this line!" content="        'tests.fixtures.realistic_data'," number="51" precision="any"/><line any_info="No Anys on this line!" content="        'tests.fixtures.factories'," number="52" precision="any"/><line any_info="No Anys on this line!" content="        'tests.fixtures.scenarios'," number="53" precision="any"/><line any_info="No Anys on this line!" content="        'tests.fixtures.maintenance'," number="54" precision="any"/><line any_info="No Anys on this line!" content="    ]" number="55" precision="empty"/><line any_info="No Anys on this line!" content="" number="56" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    success = True" number="57" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    for module_name in fixture_modules:" number="58" precision="any"/><line any_info="No Anys on this line!" content="        try:" number="59" precision="empty"/><line any_info="No Anys on this line!" content="            # Try to import without triggering Odoo dependencies" number="60" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="            module_path = Path(module_name.replace('.', '/') + '.py')" number="61" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            if module_path.exists():" number="62" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;✅ Fixture module found: {module_name}&quot;)" number="63" precision="any"/><line any_info="No Anys on this line!" content="            else:" number="64" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;❌ Fixture module missing: {module_name}&quot;)" number="65" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                success = False" number="66" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        except Exception as e:" number="67" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            print(f&quot;❌ Error with fixture module {module_name}: {e}&quot;)" number="68" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            success = False" number="69" precision="any"/><line any_info="No Anys on this line!" content="" number="70" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    return success" number="71" precision="any"/><line any_info="No Anys on this line!" content="" number="72" precision="empty"/><line any_info="No Anys on this line!" content="" number="73" precision="empty"/><line any_info="No Anys on this line!" content="def test_make_targets():" number="74" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test if our Makefile coverage targets are available&quot;&quot;&quot;" number="75" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    targets = ['coverage-html', 'coverage-report', 'coverage-validate', 'coverage-clean', 'coverage-insights']" number="76" precision="any"/><line any_info="No Anys on this line!" content="" number="77" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    success = True" number="78" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    for target in targets:" number="79" precision="any"/><line any_info="No Anys on this line!" content="        try:" number="80" precision="empty"/><line any_info="No Anys on this line!" content="            # Check if target exists in Makefile" number="81" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)&#10;Explicit (x13)" content="            result = subprocess.run(['make', '-n', target], capture_output=True, text=True, timeout=5)" number="82" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            if result.returncode == 0:" number="83" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;✅ Make target available: {target}&quot;)" number="84" precision="any"/><line any_info="No Anys on this line!" content="            else:" number="85" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;❌ Make target not found: {target}&quot;)" number="86" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                success = False" number="87" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        except Exception as e:" number="88" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            print(f&quot;❌ Error testing make target {target}: {e}&quot;)" number="89" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            success = False" number="90" precision="any"/><line any_info="No Anys on this line!" content="" number="91" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    return success" number="92" precision="any"/><line any_info="No Anys on this line!" content="" number="93" precision="empty"/><line any_info="No Anys on this line!" content="" number="94" precision="empty"/><line any_info="No Anys on this line!" content="def test_simple_coverage_run():" number="95" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test a simple coverage run on our fixture files&quot;&quot;&quot;" number="96" precision="empty"/><line any_info="No Anys on this line!" content="    try:" number="97" precision="empty"/><line any_info="No Anys on this line!" content="        import coverage" number="98" precision="precise"/><line any_info="No Anys on this line!" content="" number="99" precision="empty"/><line any_info="No Anys on this line!" content="        # Create a simple test file to measure coverage on" number="100" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        test_content = '''" number="101" precision="any"/><line any_info="No Anys on this line!" content="def simple_function(x):" number="102" precision="empty"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;A simple function to test coverage on&quot;&quot;&quot;" number="103" precision="empty"/><line any_info="No Anys on this line!" content="    if x &gt; 0:" number="104" precision="empty"/><line any_info="No Anys on this line!" content="        return x * 2" number="105" precision="empty"/><line any_info="No Anys on this line!" content="    else:" number="106" precision="empty"/><line any_info="No Anys on this line!" content="        return 0" number="107" precision="empty"/><line any_info="No Anys on this line!" content="" number="108" precision="empty"/><line any_info="No Anys on this line!" content="def unused_function():" number="109" precision="empty"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;This function won't be called&quot;&quot;&quot;" number="110" precision="empty"/><line any_info="No Anys on this line!" content="    return &quot;unused&quot;" number="111" precision="empty"/><line any_info="No Anys on this line!" content="" number="112" precision="empty"/><line any_info="No Anys on this line!" content="# This will be measured by coverage" number="113" precision="empty"/><line any_info="No Anys on this line!" content="result = simple_function(5)" number="114" precision="empty"/><line any_info="No Anys on this line!" content="'''" number="115" precision="empty"/><line any_info="No Anys on this line!" content="" number="116" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        test_file = Path('temp_coverage_test.py')" number="117" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        test_file.write_text(test_content)" number="118" precision="any"/><line any_info="No Anys on this line!" content="" number="119" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="120" precision="empty"/><line any_info="No Anys on this line!" content="            # Run coverage on the test file" number="121" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Explicit (x2)" content="            cov = coverage.Coverage()" number="122" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            cov.start()" number="123" precision="any"/><line any_info="No Anys on this line!" content="" number="124" precision="empty"/><line any_info="No Anys on this line!" content="            # Import and run the test module" number="125" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            spec = importlib.util.spec_from_file_location(&quot;temp_test&quot;, test_file)" number="126" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            temp_module = importlib.util.module_from_spec(spec)" number="127" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            spec.loader.exec_module(temp_module)" number="128" precision="any"/><line any_info="No Anys on this line!" content="" number="129" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            cov.stop()" number="130" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            cov.save()" number="131" precision="any"/><line any_info="No Anys on this line!" content="" number="132" precision="empty"/><line any_info="No Anys on this line!" content="            # Generate a simple report" number="133" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            report_output = []" number="134" precision="any"/><line any_info="No Anys on this line!" content="" number="135" precision="empty"/><line any_info="No Anys on this line!" content="            def capture_output(line):" number="136" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                report_output.append(line)" number="137" precision="any"/><line any_info="No Anys on this line!" content="" number="138" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="            cov.report(file=capture_output)" number="139" precision="any"/><line any_info="No Anys on this line!" content="" number="140" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;✅ Simple coverage test successful&quot;)" number="141" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;   Coverage report preview:&quot;)" number="142" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            for line in report_output[:5]:  # Show first 5 lines" number="143" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;   {line}&quot;)" number="144" precision="any"/><line any_info="No Anys on this line!" content="" number="145" precision="empty"/><line any_info="No Anys on this line!" content="            return True" number="146" precision="any"/><line any_info="No Anys on this line!" content="" number="147" precision="empty"/><line any_info="No Anys on this line!" content="        finally:" number="148" precision="empty"/><line any_info="No Anys on this line!" content="            # Clean up" number="149" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="            if test_file.exists():" number="150" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="                test_file.unlink()" number="151" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            coverage_files = ['.coverage', 'coverage.xml', 'coverage.json']" number="152" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for cf in coverage_files:" number="153" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                if Path(cf).exists():" number="154" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                    Path(cf).unlink()" number="155" precision="any"/><line any_info="No Anys on this line!" content="" number="156" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    except Exception as e:" number="157" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;❌ Simple coverage test failed: {e}&quot;)" number="158" precision="any"/><line any_info="No Anys on this line!" content="        return False" number="159" precision="any"/><line any_info="No Anys on this line!" content="" number="160" precision="empty"/><line any_info="No Anys on this line!" content="" number="161" precision="empty"/><line any_info="No Anys on this line!" content="def test_html_report_structure():" number="162" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Test if HTML report directory structure is correct&quot;&quot;&quot;" number="163" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    html_dir = Path('htmlcov')" number="164" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    css_file = html_dir / 'coverage_style.css'" number="165" precision="any"/><line any_info="No Anys on this line!" content="" number="166" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    if css_file.exists():" number="167" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;✅ Custom CSS file found for HTML reports&quot;)" number="168" precision="any"/><line any_info="No Anys on this line!" content="        # Check if CSS contains our custom styling" number="169" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        css_content = css_file.read_text()" number="170" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if 'Royal Textiles Sales' in css_content:" number="171" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;✅ Custom CSS contains Royal Textiles branding&quot;)" number="172" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="173" precision="any"/><line any_info="No Anys on this line!" content="        else:" number="174" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;⚠️  Custom CSS found but missing branding&quot;)" number="175" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="176" precision="any"/><line any_info="No Anys on this line!" content="    else:" number="177" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;⚠️  Custom CSS file not found (will be created during coverage run)&quot;)" number="178" precision="any"/><line any_info="No Anys on this line!" content="        return True" number="179" precision="any"/><line any_info="No Anys on this line!" content="" number="180" precision="empty"/><line any_info="No Anys on this line!" content="" number="181" precision="empty"/><line any_info="No Anys on this line!" content="def main():" number="182" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Run all coverage setup validation tests&quot;&quot;&quot;" number="183" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;🔍 COVERAGE SETUP VALIDATION&quot;)" number="184" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;============================&quot;)" number="185" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print()" number="186" precision="any"/><line any_info="No Anys on this line!" content="" number="187" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    tests = [" number="188" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        (&quot;Coverage.py Installation&quot;, test_coverage_installation)," number="189" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        (&quot;.coveragerc Configuration&quot;, test_coveragerc_config)," number="190" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        (&quot;Fixture Module Structure&quot;, test_fixture_imports)," number="191" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        (&quot;Makefile Targets&quot;, test_make_targets)," number="192" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        (&quot;Simple Coverage Run&quot;, test_simple_coverage_run)," number="193" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        (&quot;HTML Report Structure&quot;, test_html_report_structure)," number="194" precision="any"/><line any_info="No Anys on this line!" content="    ]" number="195" precision="empty"/><line any_info="No Anys on this line!" content="" number="196" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    passed = 0" number="197" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    total = len(tests)" number="198" precision="any"/><line any_info="No Anys on this line!" content="" number="199" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    for test_name, test_func in tests:" number="200" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;Testing: {test_name}&quot;)" number="201" precision="any"/><line any_info="No Anys on this line!" content="        try:" number="202" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if test_func():" number="203" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="                passed += 1" number="204" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print()" number="205" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        except Exception as e:" number="206" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="            print(f&quot;❌ Test '{test_name}' crashed: {e}&quot;)" number="207" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print()" number="208" precision="any"/><line any_info="No Anys on this line!" content="" number="209" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;📊 VALIDATION SUMMARY&quot;)" number="210" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;===================&quot;)" number="211" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="    print(f&quot;Tests passed: {passed}/{total}&quot;)" number="212" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x9)" content="    print(f&quot;Success rate: {(passed/total)*100:.1f}%&quot;)" number="213" precision="any"/><line any_info="No Anys on this line!" content="" number="214" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    if passed == total:" number="215" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;🎉 All coverage setup tests passed!&quot;)" number="216" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print()" number="217" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;✅ Next steps:&quot;)" number="218" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;   1. Run 'make coverage-report' to generate comprehensive reports&quot;)" number="219" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;   2. Run 'make coverage-open' to view HTML report in browser&quot;)" number="220" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;   3. Use 'make coverage-insights' for detailed analysis&quot;)" number="221" precision="any"/><line any_info="No Anys on this line!" content="        return 0" number="222" precision="any"/><line any_info="No Anys on this line!" content="    else:" number="223" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;⚠️  Some tests failed. Please check the output above.&quot;)" number="224" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print()" number="225" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;🔧 Common fixes:&quot;)" number="226" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;   1. Ensure coverage.py is installed: pip install coverage&quot;)" number="227" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;   2. Check .coveragerc syntax&quot;)" number="228" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;   3. Verify fixture module files exist&quot;)" number="229" precision="any"/><line any_info="No Anys on this line!" content="        return 1" number="230" precision="any"/><line any_info="No Anys on this line!" content="" number="231" precision="empty"/><line any_info="No Anys on this line!" content="" number="232" precision="empty"/><line any_info="No Anys on this line!" content="if __name__ == &quot;__main__&quot;:" number="233" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    sys.exit(main())" number="234" precision="any"/></mypy-report-file>
