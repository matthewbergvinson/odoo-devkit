<?xml-stylesheet type="text/xsl" href="../../mypy-html.xslt"?><mypy-report-file name="scripts/validate-manifest.py" module="scripts.validate-manifest"><line any_info="No Anys on this line!" content="#!/usr/bin/env python3" number="1" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="2" precision="empty"/><line any_info="No Anys on this line!" content="Odoo Manifest Validation Script" number="3" precision="empty"/><line any_info="No Anys on this line!" content="Royal Textiles Project - Local Testing Infrastructure" number="4" precision="empty"/><line any_info="No Anys on this line!" content="" number="5" precision="empty"/><line any_info="No Anys on this line!" content="This script provides comprehensive validation of __manifest__.py files to ensure" number="6" precision="empty"/><line any_info="No Anys on this line!" content="they meet Odoo 18.0 requirements and best practices. It catches common manifest" number="7" precision="empty"/><line any_info="No Anys on this line!" content="errors that can prevent module installation or cause deployment failures." number="8" precision="empty"/><line any_info="No Anys on this line!" content="" number="9" precision="empty"/><line any_info="No Anys on this line!" content="Key Features:" number="10" precision="empty"/><line any_info="No Anys on this line!" content="- Robust parsing that handles various manifest formats" number="11" precision="empty"/><line any_info="No Anys on this line!" content="- Comprehensive field validation for Odoo 18.0" number="12" precision="empty"/><line any_info="No Anys on this line!" content="- Version format validation" number="13" precision="empty"/><line any_info="No Anys on this line!" content="- Dependency analysis and recommendations" number="14" precision="empty"/><line any_info="No Anys on this line!" content="- Data file validation" number="15" precision="empty"/><line any_info="No Anys on this line!" content="- License and author validation" number="16" precision="empty"/><line any_info="No Anys on this line!" content="- Category validation with Odoo standard categories" number="17" precision="empty"/><line any_info="No Anys on this line!" content="" number="18" precision="empty"/><line any_info="No Anys on this line!" content="Usage:" number="19" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-manifest.py [module_name]" number="20" precision="empty"/><line any_info="No Anys on this line!" content="    python scripts/validate-manifest.py  # validates all modules" number="21" precision="empty"/><line any_info="No Anys on this line!" content="&quot;&quot;&quot;" number="22" precision="empty"/><line any_info="No Anys on this line!" content="" number="23" precision="empty"/><line any_info="No Anys on this line!" content="import ast" number="24" precision="precise"/><line any_info="No Anys on this line!" content="import os" number="25" precision="precise"/><line any_info="No Anys on this line!" content="import re" number="26" precision="precise"/><line any_info="No Anys on this line!" content="import sys" number="27" precision="precise"/><line any_info="No Anys on this line!" content="from pathlib import Path" number="28" precision="precise"/><line any_info="No Anys on this line!" content="from typing import Any, Dict, List, Optional, Set, Tuple, Union" number="29" precision="precise"/><line any_info="No Anys on this line!" content="" number="30" precision="empty"/><line any_info="No Anys on this line!" content="" number="31" precision="empty"/><line any_info="No Anys on this line!" content="class ManifestValidator:" number="32" precision="precise"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Comprehensive validator for Odoo __manifest__.py files.&quot;&quot;&quot;" number="33" precision="empty"/><line any_info="No Anys on this line!" content="" number="34" precision="empty"/><line any_info="No Anys on this line!" content="    # Odoo 18.0 standard categories" number="35" precision="empty"/><line any_info="No Anys on this line!" content="    STANDARD_CATEGORIES = {" number="36" precision="precise"/><line any_info="No Anys on this line!" content="        'Accounting'," number="37" precision="precise"/><line any_info="No Anys on this line!" content="        'Discuss'," number="38" precision="precise"/><line any_info="No Anys on this line!" content="        'Document Management'," number="39" precision="precise"/><line any_info="No Anys on this line!" content="        'eCommerce'," number="40" precision="precise"/><line any_info="No Anys on this line!" content="        'Human Resources'," number="41" precision="precise"/><line any_info="No Anys on this line!" content="        'Industries'," number="42" precision="precise"/><line any_info="No Anys on this line!" content="        'Inventory'," number="43" precision="precise"/><line any_info="No Anys on this line!" content="        'Localization'," number="44" precision="precise"/><line any_info="No Anys on this line!" content="        'Manufacturing'," number="45" precision="precise"/><line any_info="No Anys on this line!" content="        'Marketing'," number="46" precision="precise"/><line any_info="No Anys on this line!" content="        'Point of Sale'," number="47" precision="precise"/><line any_info="No Anys on this line!" content="        'Productivity'," number="48" precision="precise"/><line any_info="No Anys on this line!" content="        'Project'," number="49" precision="precise"/><line any_info="No Anys on this line!" content="        'Purchases'," number="50" precision="precise"/><line any_info="No Anys on this line!" content="        'Sales'," number="51" precision="precise"/><line any_info="No Anys on this line!" content="        'Services'," number="52" precision="precise"/><line any_info="No Anys on this line!" content="        'Website'," number="53" precision="precise"/><line any_info="No Anys on this line!" content="        'Theme'," number="54" precision="precise"/><line any_info="No Anys on this line!" content="        'Administration'," number="55" precision="precise"/><line any_info="No Anys on this line!" content="        'Appraisals'," number="56" precision="precise"/><line any_info="No Anys on this line!" content="        'Approvals'," number="57" precision="precise"/><line any_info="No Anys on this line!" content="        'Attendances'," number="58" precision="precise"/><line any_info="No Anys on this line!" content="        'Barcode'," number="59" precision="precise"/><line any_info="No Anys on this line!" content="        'Calendar'," number="60" precision="precise"/><line any_info="No Anys on this line!" content="        'Contacts'," number="61" precision="precise"/><line any_info="No Anys on this line!" content="        'CRM'," number="62" precision="precise"/><line any_info="No Anys on this line!" content="        'Dashboards'," number="63" precision="precise"/><line any_info="No Anys on this line!" content="        'Events'," number="64" precision="precise"/><line any_info="No Anys on this line!" content="        'Expenses'," number="65" precision="precise"/><line any_info="No Anys on this line!" content="        'Fleet'," number="66" precision="precise"/><line any_info="No Anys on this line!" content="        'Helpdesk'," number="67" precision="precise"/><line any_info="No Anys on this line!" content="        'IoT'," number="68" precision="precise"/><line any_info="No Anys on this line!" content="        'Knowledge'," number="69" precision="precise"/><line any_info="No Anys on this line!" content="        'Live Chat'," number="70" precision="precise"/><line any_info="No Anys on this line!" content="        'Lunch'," number="71" precision="precise"/><line any_info="No Anys on this line!" content="        'Maintenance'," number="72" precision="precise"/><line any_info="No Anys on this line!" content="        'Mass Mailing'," number="73" precision="precise"/><line any_info="No Anys on this line!" content="        'Planning'," number="74" precision="precise"/><line any_info="No Anys on this line!" content="        'Recruitment'," number="75" precision="precise"/><line any_info="No Anys on this line!" content="        'Rentals'," number="76" precision="precise"/><line any_info="No Anys on this line!" content="        'Repair'," number="77" precision="precise"/><line any_info="No Anys on this line!" content="        'Reporting'," number="78" precision="precise"/><line any_info="No Anys on this line!" content="        'Sign'," number="79" precision="precise"/><line any_info="No Anys on this line!" content="        'SMS'," number="80" precision="precise"/><line any_info="No Anys on this line!" content="        'Social Marketing'," number="81" precision="precise"/><line any_info="No Anys on this line!" content="        'Surveys'," number="82" precision="precise"/><line any_info="No Anys on this line!" content="        'Timesheets'," number="83" precision="precise"/><line any_info="No Anys on this line!" content="        'VoIP'," number="84" precision="precise"/><line any_info="No Anys on this line!" content="        'Warehouse'," number="85" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="86" precision="empty"/><line any_info="No Anys on this line!" content="" number="87" precision="empty"/><line any_info="No Anys on this line!" content="    # Standard Odoo licenses" number="88" precision="empty"/><line any_info="No Anys on this line!" content="    VALID_LICENSES = {" number="89" precision="precise"/><line any_info="No Anys on this line!" content="        'LGPL-3'," number="90" precision="precise"/><line any_info="No Anys on this line!" content="        'GPL-3'," number="91" precision="precise"/><line any_info="No Anys on this line!" content="        'MIT'," number="92" precision="precise"/><line any_info="No Anys on this line!" content="        'BSD-3-Clause'," number="93" precision="precise"/><line any_info="No Anys on this line!" content="        'Apache-2.0'," number="94" precision="precise"/><line any_info="No Anys on this line!" content="        'OEEL-1',  # Odoo Enterprise Edition License" number="95" precision="precise"/><line any_info="No Anys on this line!" content="        'Other OSI approved licence'," number="96" precision="precise"/><line any_info="No Anys on this line!" content="        'Other proprietary'," number="97" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="98" precision="empty"/><line any_info="No Anys on this line!" content="" number="99" precision="empty"/><line any_info="No Anys on this line!" content="    # Core Odoo modules that are commonly depended upon" number="100" precision="empty"/><line any_info="No Anys on this line!" content="    CORE_MODULES = {" number="101" precision="precise"/><line any_info="No Anys on this line!" content="        'base'," number="102" precision="precise"/><line any_info="No Anys on this line!" content="        'web'," number="103" precision="precise"/><line any_info="No Anys on this line!" content="        'mail'," number="104" precision="precise"/><line any_info="No Anys on this line!" content="        'portal'," number="105" precision="precise"/><line any_info="No Anys on this line!" content="        'website'," number="106" precision="precise"/><line any_info="No Anys on this line!" content="        'account'," number="107" precision="precise"/><line any_info="No Anys on this line!" content="        'sale'," number="108" precision="precise"/><line any_info="No Anys on this line!" content="        'purchase'," number="109" precision="precise"/><line any_info="No Anys on this line!" content="        'stock'," number="110" precision="precise"/><line any_info="No Anys on this line!" content="        'mrp'," number="111" precision="precise"/><line any_info="No Anys on this line!" content="        'hr'," number="112" precision="precise"/><line any_info="No Anys on this line!" content="        'project'," number="113" precision="precise"/><line any_info="No Anys on this line!" content="        'crm'," number="114" precision="precise"/><line any_info="No Anys on this line!" content="        'calendar'," number="115" precision="precise"/><line any_info="No Anys on this line!" content="        'contacts'," number="116" precision="precise"/><line any_info="No Anys on this line!" content="        'product'," number="117" precision="precise"/><line any_info="No Anys on this line!" content="    }" number="118" precision="empty"/><line any_info="No Anys on this line!" content="" number="119" precision="empty"/><line any_info="No Anys on this line!" content="    def __init__(self, base_path: str = &quot;custom_modules&quot;):" number="120" precision="precise"/><line any_info="No Anys on this line!" content="        self.base_path = Path(base_path)" number="121" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors: List[str] = []" number="122" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings: List[str] = []" number="123" precision="precise"/><line any_info="No Anys on this line!" content="        self.info: List[str] = []" number="124" precision="precise"/><line any_info="No Anys on this line!" content="" number="125" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def error(self, message: str, module: str = &quot;&quot;, context: str = &quot;&quot;):" number="126" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an error message.&quot;&quot;&quot;" number="127" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{module}&quot; if module else &quot;&quot;" number="128" precision="precise"/><line any_info="No Anys on this line!" content="        context_str = f&quot; ({context})&quot; if context else &quot;&quot;" number="129" precision="precise"/><line any_info="No Anys on this line!" content="        self.errors.append(f&quot;❌ {location}: {message}{context_str}&quot;)" number="130" precision="precise"/><line any_info="No Anys on this line!" content="" number="131" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def warning(self, message: str, module: str = &quot;&quot;, context: str = &quot;&quot;):" number="132" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add a warning message.&quot;&quot;&quot;" number="133" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{module}&quot; if module else &quot;&quot;" number="134" precision="precise"/><line any_info="No Anys on this line!" content="        context_str = f&quot; ({context})&quot; if context else &quot;&quot;" number="135" precision="precise"/><line any_info="No Anys on this line!" content="        self.warnings.append(f&quot;⚠️  {location}: {message}{context_str}&quot;)" number="136" precision="precise"/><line any_info="No Anys on this line!" content="" number="137" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    def add_info(self, message: str, module: str = &quot;&quot;, context: str = &quot;&quot;):" number="138" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Add an info message.&quot;&quot;&quot;" number="139" precision="empty"/><line any_info="No Anys on this line!" content="        location = f&quot;{module}&quot; if module else &quot;&quot;" number="140" precision="precise"/><line any_info="No Anys on this line!" content="        context_str = f&quot; ({context})&quot; if context else &quot;&quot;" number="141" precision="precise"/><line any_info="No Anys on this line!" content="        self.info.append(f&quot;ℹ️  {location}: {message}{context_str}&quot;)" number="142" precision="precise"/><line any_info="No Anys on this line!" content="" number="143" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def parse_manifest_file(self, manifest_path: Path) -&gt; Optional[Dict[str, Any]]:" number="144" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="145" precision="empty"/><line any_info="No Anys on this line!" content="        Robustly parse a __manifest__.py file." number="146" precision="empty"/><line any_info="No Anys on this line!" content="" number="147" precision="empty"/><line any_info="No Anys on this line!" content="        Handles multiple formats:" number="148" precision="empty"/><line any_info="No Anys on this line!" content="        1. Dictionary-only format: # -*- coding: utf-8 -*- \n { ... }" number="149" precision="empty"/><line any_info="No Anys on this line!" content="        2. Explicit variable: __manifest__ = {...}" number="150" precision="empty"/><line any_info="No Anys on this line!" content="        3. Module-style with imports and complex expressions" number="151" precision="empty"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;" number="152" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="153" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x7)&#10;Explicit (x1)" content="            with open(manifest_path, 'r', encoding='utf-8') as f:" number="154" precision="precise"/><line any_info="No Anys on this line!" content="                content = f.read()" number="155" precision="precise"/><line any_info="No Anys on this line!" content="        except UnicodeDecodeError:" number="156" precision="precise"/><line any_info="No Anys on this line!" content="            # Try latin-1 encoding as fallback" number="157" precision="empty"/><line any_info="No Anys on this line!" content="            try:" number="158" precision="empty"/><line any_info="Any Types on this line: &#10;Unimported (x7)&#10;Explicit (x1)" content="                with open(manifest_path, 'r', encoding='latin-1') as f:" number="159" precision="precise"/><line any_info="No Anys on this line!" content="                    content = f.read()" number="160" precision="precise"/><line any_info="No Anys on this line!" content="            except Exception as e:" number="161" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Cannot read manifest file: {e}&quot;, context=&quot;encoding&quot;)" number="162" precision="any"/><line any_info="No Anys on this line!" content="                return None" number="163" precision="precise"/><line any_info="No Anys on this line!" content="        except Exception as e:" number="164" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Cannot read manifest file: {e}&quot;, context=&quot;file access&quot;)" number="165" precision="any"/><line any_info="No Anys on this line!" content="            return None" number="166" precision="precise"/><line any_info="No Anys on this line!" content="" number="167" precision="empty"/><line any_info="No Anys on this line!" content="        # Method 1: Try to parse as AST and extract dictionary" number="168" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="169" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x5)" content="            tree = ast.parse(content)" number="170" precision="precise"/><line any_info="No Anys on this line!" content="" number="171" precision="empty"/><line any_info="No Anys on this line!" content="            # Look for __manifest__ assignment first" number="172" precision="empty"/><line any_info="No Anys on this line!" content="            for node in ast.walk(tree):" number="173" precision="precise"/><line any_info="No Anys on this line!" content="                if (" number="174" precision="empty"/><line any_info="No Anys on this line!" content="                    isinstance(node, ast.Assign)" number="175" precision="precise"/><line any_info="No Anys on this line!" content="                    and isinstance(node.targets[0], ast.Name)" number="176" precision="precise"/><line any_info="No Anys on this line!" content="                    and node.targets[0].id == '__manifest__'" number="177" precision="precise"/><line any_info="No Anys on this line!" content="                ):" number="178" precision="empty"/><line any_info="No Anys on this line!" content="                    # Extract dictionary from AST" number="179" precision="empty"/><line any_info="No Anys on this line!" content="                    if isinstance(node.value, ast.Dict):" number="180" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="                        return self._extract_dict_from_ast(node.value)" number="181" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="182" precision="empty"/><line any_info="No Anys on this line!" content="            # If no __manifest__ variable found, check if entire file is a dictionary" number="183" precision="empty"/><line any_info="No Anys on this line!" content="            # This handles the common format: # -*- coding: utf-8 -*- \n { ... }" number="184" precision="empty"/><line any_info="No Anys on this line!" content="            if len(tree.body) == 1 and isinstance(tree.body[0], ast.Expr) and isinstance(tree.body[0].value, ast.Dict):" number="185" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="                return self._extract_dict_from_ast(tree.body[0].value)" number="186" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="187" precision="empty"/><line any_info="No Anys on this line!" content="        except SyntaxError as e:" number="188" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Syntax error in manifest: {e}&quot;, context=&quot;AST parsing&quot;)" number="189" precision="any"/><line any_info="No Anys on this line!" content="            return None" number="190" precision="precise"/><line any_info="No Anys on this line!" content="        except Exception:" number="191" precision="precise"/><line any_info="No Anys on this line!" content="            pass  # Fall through to other methods" number="192" precision="precise"/><line any_info="No Anys on this line!" content="" number="193" precision="empty"/><line any_info="No Anys on this line!" content="        # Method 2: Safe execution in controlled environment" number="194" precision="empty"/><line any_info="No Anys on this line!" content="        try:" number="195" precision="empty"/><line any_info="No Anys on this line!" content="            # Create a safe execution environment" number="196" precision="empty"/><line any_info="No Anys on this line!" content="            safe_globals = {" number="197" precision="precise"/><line any_info="No Anys on this line!" content="                '__builtins__': {}," number="198" precision="precise"/><line any_info="No Anys on this line!" content="                'False': False," number="199" precision="precise"/><line any_info="No Anys on this line!" content="                'True': True," number="200" precision="precise"/><line any_info="No Anys on this line!" content="                'None': None," number="201" precision="precise"/><line any_info="No Anys on this line!" content="            }" number="202" precision="empty"/><line any_info="No Anys on this line!" content="            safe_locals = {}" number="203" precision="precise"/><line any_info="No Anys on this line!" content="" number="204" precision="empty"/><line any_info="No Anys on this line!" content="            # Execute the manifest file" number="205" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)&#10;Unannotated (x2)" content="            exec(content, safe_globals, safe_locals)" number="206" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="207" precision="empty"/><line any_info="No Anys on this line!" content="            # Check for explicit __manifest__ variable" number="208" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            if '__manifest__' in safe_locals:" number="209" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="                manifest = safe_locals['__manifest__']" number="210" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)&#10;Omitted Generics (x18)" content="                if isinstance(manifest, dict):" number="211" precision="any"/><line any_info="No Anys on this line!" content="                    return manifest" number="212" precision="precise"/><line any_info="No Anys on this line!" content="                else:" number="213" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.error(&quot;__manifest__ is not a dictionary&quot;, context=&quot;type validation&quot;)" number="214" precision="any"/><line any_info="No Anys on this line!" content="                    return None" number="215" precision="precise"/><line any_info="No Anys on this line!" content="" number="216" precision="empty"/><line any_info="No Anys on this line!" content="            # Check if the result of execution itself is a dictionary (dictionary-only format)" number="217" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            elif len(safe_locals) == 0:" number="218" precision="imprecise"/><line any_info="No Anys on this line!" content="                # Try evaluating the content as a single expression" number="219" precision="empty"/><line any_info="No Anys on this line!" content="                try:" number="220" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x4)" content="                    result = eval(content, safe_globals)" number="221" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)&#10;Omitted Generics (x18)" content="                    if isinstance(result, dict):" number="222" precision="any"/><line any_info="No Anys on this line!" content="                        return result" number="223" precision="precise"/><line any_info="No Anys on this line!" content="                except:" number="224" precision="empty"/><line any_info="No Anys on this line!" content="                    pass" number="225" precision="precise"/><line any_info="No Anys on this line!" content="" number="226" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(" number="227" precision="any"/><line any_info="No Anys on this line!" content="                &quot;No __manifest__ variable found and file doesn't evaluate to dictionary&quot;, context=&quot;variable lookup&quot;" number="228" precision="precise"/><line any_info="No Anys on this line!" content="            )" number="229" precision="empty"/><line any_info="No Anys on this line!" content="            return None" number="230" precision="precise"/><line any_info="No Anys on this line!" content="" number="231" precision="empty"/><line any_info="No Anys on this line!" content="        except Exception as e:" number="232" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Cannot execute manifest file: {e}&quot;, context=&quot;execution&quot;)" number="233" precision="any"/><line any_info="No Anys on this line!" content="            return None" number="234" precision="precise"/><line any_info="No Anys on this line!" content="" number="235" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def _extract_dict_from_ast(self, dict_node: ast.Dict) -&gt; Dict[str, Any]:" number="236" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Extract dictionary values from AST node.&quot;&quot;&quot;" number="237" precision="empty"/><line any_info="No Anys on this line!" content="        result = {}" number="238" precision="precise"/><line any_info="No Anys on this line!" content="" number="239" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x9)&#10;Omitted Generics (x30)" content="        for key_node, value_node in zip(dict_node.keys, dict_node.values):" number="240" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if isinstance(key_node, ast.Str):" number="241" precision="precise"/><line any_info="No Anys on this line!" content="                key = key_node.s" number="242" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="            elif isinstance(key_node, ast.Constant) and isinstance(key_node.value, str):" number="243" precision="any"/><line any_info="No Anys on this line!" content="                key = key_node.value" number="244" precision="precise"/><line any_info="No Anys on this line!" content="            else:" number="245" precision="empty"/><line any_info="No Anys on this line!" content="                continue  # Skip non-string keys" number="246" precision="precise"/><line any_info="No Anys on this line!" content="" number="247" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            value = self._extract_value_from_ast(value_node)" number="248" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if value is not None:" number="249" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="                result[key] = value" number="250" precision="any"/><line any_info="No Anys on this line!" content="" number="251" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        return result" number="252" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="253" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def _extract_value_from_ast(self, value_node: ast.AST) -&gt; Any:" number="254" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Extract value from AST node.&quot;&quot;&quot;" number="255" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if isinstance(value_node, ast.Str):" number="256" precision="precise"/><line any_info="No Anys on this line!" content="            return value_node.s" number="257" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        elif isinstance(value_node, ast.Constant):" number="258" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            return value_node.value" number="259" precision="any"/><line any_info="No Anys on this line!" content="        elif isinstance(value_node, ast.List):" number="260" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="            return [self._extract_value_from_ast(item) for item in value_node.elts]" number="261" precision="any"/><line any_info="No Anys on this line!" content="        elif isinstance(value_node, ast.Dict):" number="262" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="            return self._extract_dict_from_ast(value_node)" number="263" precision="imprecise"/><line any_info="No Anys on this line!" content="        elif isinstance(value_node, ast.Name):" number="264" precision="precise"/><line any_info="No Anys on this line!" content="            # Handle True, False, None" number="265" precision="empty"/><line any_info="No Anys on this line!" content="            if value_node.id in ('True', 'False', 'None'):" number="266" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="                return eval(value_node.id)" number="267" precision="any"/><line any_info="No Anys on this line!" content="" number="268" precision="empty"/><line any_info="No Anys on this line!" content="        return None" number="269" precision="precise"/><line any_info="No Anys on this line!" content="" number="270" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_manifest_structure(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="271" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate the basic structure and required fields of a manifest.&quot;&quot;&quot;" number="272" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="273" precision="precise"/><line any_info="No Anys on this line!" content="" number="274" precision="empty"/><line any_info="No Anys on this line!" content="        # Odoo 18.0 required fields" number="275" precision="empty"/><line any_info="No Anys on this line!" content="        required_fields = {" number="276" precision="precise"/><line any_info="No Anys on this line!" content="            'name': str," number="277" precision="precise"/><line any_info="No Anys on this line!" content="            'version': str," number="278" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="            'depends': list," number="279" precision="precise"/><line any_info="No Anys on this line!" content="            'author': str," number="280" precision="precise"/><line any_info="No Anys on this line!" content="            'license': str," number="281" precision="precise"/><line any_info="No Anys on this line!" content="        }" number="282" precision="empty"/><line any_info="No Anys on this line!" content="" number="283" precision="empty"/><line any_info="No Anys on this line!" content="        # Check required fields" number="284" precision="empty"/><line any_info="No Anys on this line!" content="        for field, expected_type in required_fields.items():" number="285" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if field not in manifest:" number="286" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Missing required field '{field}'&quot;, module_name, &quot;required fields&quot;)" number="287" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="288" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="            elif not isinstance(manifest[field], expected_type):" number="289" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(" number="290" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x4)" content="                    f&quot;Field '{field}' should be {expected_type.__name__}, got {type(manifest[field]).__name__}&quot;," number="291" precision="any"/><line any_info="No Anys on this line!" content="                    module_name," number="292" precision="precise"/><line any_info="No Anys on this line!" content="                    &quot;field types&quot;," number="293" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="294" precision="empty"/><line any_info="No Anys on this line!" content="                success = False" number="295" precision="precise"/><line any_info="No Anys on this line!" content="" number="296" precision="empty"/><line any_info="No Anys on this line!" content="        # Highly recommended fields" number="297" precision="empty"/><line any_info="No Anys on this line!" content="        recommended_fields = {" number="298" precision="precise"/><line any_info="No Anys on this line!" content="            'summary': str," number="299" precision="precise"/><line any_info="No Anys on this line!" content="            'description': str," number="300" precision="precise"/><line any_info="No Anys on this line!" content="            'category': str," number="301" precision="precise"/><line any_info="No Anys on this line!" content="            'website': str," number="302" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="            'data': list," number="303" precision="precise"/><line any_info="No Anys on this line!" content="        }" number="304" precision="empty"/><line any_info="No Anys on this line!" content="" number="305" precision="empty"/><line any_info="No Anys on this line!" content="        for field, expected_type in recommended_fields.items():" number="306" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if field not in manifest:" number="307" precision="imprecise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Missing recommended field '{field}'&quot;, module_name, &quot;best practices&quot;)" number="308" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            elif field in manifest and not isinstance(manifest[field], expected_type):" number="309" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(" number="310" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x4)" content="                    f&quot;Field '{field}' should be {expected_type.__name__}, got {type(manifest[field]).__name__}&quot;," number="311" precision="any"/><line any_info="No Anys on this line!" content="                    module_name," number="312" precision="precise"/><line any_info="No Anys on this line!" content="                    &quot;field types&quot;," number="313" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="314" precision="empty"/><line any_info="No Anys on this line!" content="" number="315" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="316" precision="precise"/><line any_info="No Anys on this line!" content="" number="317" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_version_format(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="318" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate version format compliance with semantic versioning.&quot;&quot;&quot;" number="319" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'version' not in manifest:" number="320" precision="imprecise"/><line any_info="No Anys on this line!" content="            return True  # Already reported as missing required field" number="321" precision="precise"/><line any_info="No Anys on this line!" content="" number="322" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="        version = manifest['version']" number="323" precision="any"/><line any_info="No Anys on this line!" content="        success = True" number="324" precision="precise"/><line any_info="No Anys on this line!" content="" number="325" precision="empty"/><line any_info="No Anys on this line!" content="        # Semantic versioning format: X.Y.Z or X.Y.Z-prerelease+build" number="326" precision="empty"/><line any_info="No Anys on this line!" content="        # Odoo commonly uses variations like X.Y.Z.W for series compatibility" number="327" precision="empty"/><line any_info="No Anys on this line!" content="        # Examples: &quot;1.0&quot;, &quot;1.2.3&quot;, &quot;18.0.1.0&quot;, &quot;1.0.0-alpha+build.1&quot;" number="328" precision="empty"/><line any_info="No Anys on this line!" content="" number="329" precision="empty"/><line any_info="No Anys on this line!" content="        # Basic format check - should start with numbers and dots" number="330" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if not re.match(r'^\d+(\.\d+)*', version):" number="331" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(" number="332" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="                f&quot;Invalid version format '{version}'. Should start with numeric version (e.g., '1.0', '18.0.1.0')&quot;," number="333" precision="any"/><line any_info="No Anys on this line!" content="                module_name," number="334" precision="precise"/><line any_info="No Anys on this line!" content="                &quot;version format&quot;," number="335" precision="precise"/><line any_info="No Anys on this line!" content="            )" number="336" precision="empty"/><line any_info="No Anys on this line!" content="            success = False" number="337" precision="precise"/><line any_info="No Anys on this line!" content="            return success" number="338" precision="precise"/><line any_info="No Anys on this line!" content="" number="339" precision="empty"/><line any_info="No Anys on this line!" content="        # Extract base version (before any pre-release or build metadata)" number="340" precision="empty"/><line any_info="Any Types on this line: &#10;Error (x1)&#10;Explicit (x1)" content="        base_version = re.match(r'^(\d+(?:\.\d+)*)', version).group(1)" number="341" precision="any"/><line any_info="No Anys on this line!" content="        version_parts = base_version.split('.')" number="342" precision="precise"/><line any_info="No Anys on this line!" content="" number="343" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate minimum version parts (at least major.minor)" number="344" precision="empty"/><line any_info="No Anys on this line!" content="        if len(version_parts) &lt; 2:" number="345" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(" number="346" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="                f&quot;Version '{version}' has only {len(version_parts)} part(s). Consider using at least major.minor format (e.g., '1.0')&quot;," number="347" precision="any"/><line any_info="No Anys on this line!" content="                module_name," number="348" precision="precise"/><line any_info="No Anys on this line!" content="                &quot;version convention&quot;," number="349" precision="precise"/><line any_info="No Anys on this line!" content="            )" number="350" precision="empty"/><line any_info="No Anys on this line!" content="" number="351" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for Odoo 18.0 compatibility" number="352" precision="empty"/><line any_info="No Anys on this line!" content="        if len(version_parts) &gt;= 2:" number="353" precision="precise"/><line any_info="No Anys on this line!" content="            try:" number="354" precision="empty"/><line any_info="No Anys on this line!" content="                major = int(version_parts[0])" number="355" precision="precise"/><line any_info="No Anys on this line!" content="                minor = int(version_parts[1])" number="356" precision="precise"/><line any_info="No Anys on this line!" content="" number="357" precision="empty"/><line any_info="No Anys on this line!" content="                # Suggest Odoo version alignment" number="358" precision="empty"/><line any_info="No Anys on this line!" content="                if major != 18:" number="359" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(" number="360" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="                        f&quot;Version '{version}' doesn't start with '18' - consider aligning with Odoo 18.0 series&quot;," number="361" precision="any"/><line any_info="No Anys on this line!" content="                        module_name," number="362" precision="precise"/><line any_info="No Anys on this line!" content="                        &quot;Odoo version alignment&quot;," number="363" precision="precise"/><line any_info="No Anys on this line!" content="                    )" number="364" precision="empty"/><line any_info="No Anys on this line!" content="" number="365" precision="empty"/><line any_info="No Anys on this line!" content="                # Check for common Odoo versioning patterns" number="366" precision="empty"/><line any_info="No Anys on this line!" content="                if major == 18 and minor == 0 and len(version_parts) &gt;= 4:" number="367" precision="precise"/><line any_info="No Anys on this line!" content="                    # This is a valid Odoo 18.0.x.y pattern" number="368" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(" number="369" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="                        f&quot;Using Odoo 18.0 series versioning pattern: {version}&quot;, module_name, &quot;version pattern&quot;" number="370" precision="any"/><line any_info="No Anys on this line!" content="                    )" number="371" precision="empty"/><line any_info="No Anys on this line!" content="" number="372" precision="empty"/><line any_info="No Anys on this line!" content="            except ValueError:" number="373" precision="precise"/><line any_info="No Anys on this line!" content="                # Non-numeric version parts are handled by the regex above" number="374" precision="empty"/><line any_info="No Anys on this line!" content="                pass" number="375" precision="precise"/><line any_info="No Anys on this line!" content="" number="376" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for excessive version parts (more than 5 is unusual)" number="377" precision="empty"/><line any_info="No Anys on this line!" content="        if len(version_parts) &gt; 5:" number="378" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(" number="379" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="                f&quot;Version '{version}' has {len(version_parts)} parts - this is unusually long for semantic versioning&quot;," number="380" precision="any"/><line any_info="No Anys on this line!" content="                module_name," number="381" precision="precise"/><line any_info="No Anys on this line!" content="                &quot;version complexity&quot;," number="382" precision="precise"/><line any_info="No Anys on this line!" content="            )" number="383" precision="empty"/><line any_info="No Anys on this line!" content="" number="384" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="385" precision="precise"/><line any_info="No Anys on this line!" content="" number="386" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_dependencies(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="387" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate module dependencies.&quot;&quot;&quot;" number="388" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'depends' not in manifest:" number="389" precision="imprecise"/><line any_info="No Anys on this line!" content="            return True  # Already reported as missing" number="390" precision="precise"/><line any_info="No Anys on this line!" content="" number="391" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="        depends = manifest['depends']" number="392" precision="any"/><line any_info="No Anys on this line!" content="        success = True" number="393" precision="precise"/><line any_info="No Anys on this line!" content="" number="394" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)&#10;Omitted Generics (x3)" content="        if not isinstance(depends, list):" number="395" precision="any"/><line any_info="No Anys on this line!" content="            return True  # Already reported as wrong type" number="396" precision="precise"/><line any_info="No Anys on this line!" content="" number="397" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for empty dependencies" number="398" precision="empty"/><line any_info="No Anys on this line!" content="        if not depends:" number="399" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;No dependencies specified. Consider adding 'base'&quot;, module_name, &quot;dependencies&quot;)" number="400" precision="any"/><line any_info="No Anys on this line!" content="" number="401" precision="empty"/><line any_info="No Anys on this line!" content="        # Check if 'base' is included (usually required)" number="402" precision="empty"/><line any_info="No Anys on this line!" content="        if 'base' not in depends:" number="403" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;'base' module not in dependencies. Usually required.&quot;, module_name, &quot;dependencies&quot;)" number="404" precision="any"/><line any_info="No Anys on this line!" content="" number="405" precision="empty"/><line any_info="No Anys on this line!" content="        # Check for duplicate dependencies" number="406" precision="empty"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="        if len(depends) != len(set(depends)):" number="407" precision="precise"/><line any_info="Any Types on this line: &#10;Omitted Generics (x3)" content="            duplicates = [dep for dep in set(depends) if depends.count(dep) &gt; 1]" number="408" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;Duplicate dependencies: {duplicates}&quot;, module_name, &quot;dependencies&quot;)" number="409" precision="any"/><line any_info="No Anys on this line!" content="" number="410" precision="empty"/><line any_info="No Anys on this line!" content="        # Validate dependency names" number="411" precision="empty"/><line any_info="No Anys on this line!" content="        for dep in depends:" number="412" precision="precise"/><line any_info="No Anys on this line!" content="            if not isinstance(dep, str):" number="413" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Explicit (x2)" content="                self.error(f&quot;Dependency should be string, got {type(dep).__name__}: {dep}&quot;, module_name, &quot;dependencies&quot;)" number="414" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="415" precision="precise"/><line any_info="No Anys on this line!" content="                continue" number="416" precision="precise"/><line any_info="No Anys on this line!" content="" number="417" precision="empty"/><line any_info="No Anys on this line!" content="            # Check dependency name format" number="418" precision="empty"/><line any_info="No Anys on this line!" content="            if not re.match(r'^[a-z][a-z0-9_]*$', dep):" number="419" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Dependency name '{dep}' doesn't follow naming convention&quot;, module_name, &quot;dependencies&quot;)" number="420" precision="any"/><line any_info="No Anys on this line!" content="" number="421" precision="empty"/><line any_info="No Anys on this line!" content="        # Suggest common dependencies based on module patterns" number="422" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        self._suggest_dependencies(manifest, module_name, depends)" number="423" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="424" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="425" precision="precise"/><line any_info="No Anys on this line!" content="" number="426" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def _suggest_dependencies(self, manifest: Dict[str, Any], module_name: str, depends: List[str]) -&gt; None:" number="427" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Suggest additional dependencies based on module content.&quot;&quot;&quot;" number="428" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x9)&#10;Omitted Generics (x2)" content="        name = manifest.get('name', '').lower()" number="429" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x9)&#10;Omitted Generics (x2)" content="        category = manifest.get('category', '').lower()" number="430" precision="any"/><line any_info="No Anys on this line!" content="" number="431" precision="empty"/><line any_info="No Anys on this line!" content="        suggestions = []" number="432" precision="precise"/><line any_info="No Anys on this line!" content="" number="433" precision="empty"/><line any_info="No Anys on this line!" content="        # Suggest based on category" number="434" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'sale' in category and 'sale' not in depends:" number="435" precision="any"/><line any_info="No Anys on this line!" content="            suggestions.append(&quot;'sale' (for Sales category)&quot;)" number="436" precision="precise"/><line any_info="No Anys on this line!" content="" number="437" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'account' in category and 'account' not in depends:" number="438" precision="any"/><line any_info="No Anys on this line!" content="            suggestions.append(&quot;'account' (for Accounting category)&quot;)" number="439" precision="precise"/><line any_info="No Anys on this line!" content="" number="440" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'website' in category and 'website' not in depends:" number="441" precision="any"/><line any_info="No Anys on this line!" content="            suggestions.append(&quot;'website' (for Website category)&quot;)" number="442" precision="precise"/><line any_info="No Anys on this line!" content="" number="443" precision="empty"/><line any_info="No Anys on this line!" content="        # Suggest based on name" number="444" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if any(word in name for word in ['sale', 'order', 'customer']) and 'sale' not in depends:" number="445" precision="any"/><line any_info="No Anys on this line!" content="            suggestions.append(&quot;'sale' (based on module name)&quot;)" number="446" precision="precise"/><line any_info="No Anys on this line!" content="" number="447" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if any(word in name for word in ['accounting', 'invoice', 'payment']) and 'account' not in depends:" number="448" precision="any"/><line any_info="No Anys on this line!" content="            suggestions.append(&quot;'account' (based on module name)&quot;)" number="449" precision="precise"/><line any_info="No Anys on this line!" content="" number="450" precision="empty"/><line any_info="No Anys on this line!" content="        if suggestions:" number="451" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(f&quot;Consider adding dependencies: {', '.join(suggestions)}&quot;, module_name, &quot;suggestions&quot;)" number="452" precision="any"/><line any_info="No Anys on this line!" content="" number="453" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_category(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="454" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate module category.&quot;&quot;&quot;" number="455" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'category' not in manifest:" number="456" precision="imprecise"/><line any_info="No Anys on this line!" content="            return True  # Already reported as missing recommended field" number="457" precision="precise"/><line any_info="No Anys on this line!" content="" number="458" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="        category = manifest['category']" number="459" precision="any"/><line any_info="No Anys on this line!" content="" number="460" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if not isinstance(category, str):" number="461" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Explicit (x3)" content="            self.warning(f&quot;Category should be string, got {type(category).__name__}&quot;, module_name, &quot;category&quot;)" number="462" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="463" precision="precise"/><line any_info="No Anys on this line!" content="" number="464" precision="empty"/><line any_info="No Anys on this line!" content="        # Check if category is in standard Odoo categories" number="465" precision="empty"/><line any_info="No Anys on this line!" content="        if category not in self.STANDARD_CATEGORIES:" number="466" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;Category '{category}' is not a standard Odoo category&quot;, module_name, &quot;category validation&quot;)" number="467" precision="any"/><line any_info="No Anys on this line!" content="" number="468" precision="empty"/><line any_info="No Anys on this line!" content="            # Suggest similar categories" number="469" precision="empty"/><line any_info="No Anys on this line!" content="            similar = [" number="470" precision="precise"/><line any_info="No Anys on this line!" content="                cat" number="471" precision="precise"/><line any_info="No Anys on this line!" content="                for cat in self.STANDARD_CATEGORIES" number="472" precision="precise"/><line any_info="No Anys on this line!" content="                if category.lower() in cat.lower() or cat.lower() in category.lower()" number="473" precision="precise"/><line any_info="No Anys on this line!" content="            ]" number="474" precision="empty"/><line any_info="No Anys on this line!" content="            if similar:" number="475" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.add_info(" number="476" precision="any"/><line any_info="No Anys on this line!" content="                    f&quot;Similar standard categories: {', '.join(similar[:3])}&quot;, module_name, &quot;category suggestions&quot;" number="477" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="478" precision="empty"/><line any_info="No Anys on this line!" content="" number="479" precision="empty"/><line any_info="No Anys on this line!" content="        return True" number="480" precision="precise"/><line any_info="No Anys on this line!" content="" number="481" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_license(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="482" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate license field.&quot;&quot;&quot;" number="483" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'license' not in manifest:" number="484" precision="imprecise"/><line any_info="No Anys on this line!" content="            return True  # Already reported as missing required field" number="485" precision="precise"/><line any_info="No Anys on this line!" content="" number="486" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="        license_value = manifest['license']" number="487" precision="any"/><line any_info="No Anys on this line!" content="" number="488" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if not isinstance(license_value, str):" number="489" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)&#10;Explicit (x3)" content="            self.error(f&quot;License should be string, got {type(license_value).__name__}&quot;, module_name, &quot;license&quot;)" number="490" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="491" precision="precise"/><line any_info="No Anys on this line!" content="" number="492" precision="empty"/><line any_info="No Anys on this line!" content="        if license_value not in self.VALID_LICENSES:" number="493" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(f&quot;License '{license_value}' is not a standard Odoo license&quot;, module_name, &quot;license validation&quot;)" number="494" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.add_info(" number="495" precision="any"/><line any_info="Any Types on this line: &#10;Omitted Generics (x5)" content="                f&quot;Standard licenses: {', '.join(sorted(self.VALID_LICENSES))}&quot;, module_name, &quot;license options&quot;" number="496" precision="precise"/><line any_info="No Anys on this line!" content="            )" number="497" precision="empty"/><line any_info="No Anys on this line!" content="" number="498" precision="empty"/><line any_info="No Anys on this line!" content="        return True" number="499" precision="precise"/><line any_info="No Anys on this line!" content="" number="500" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_data_files(self, manifest: Dict[str, Any], module_name: str, module_path: Path) -&gt; bool:" number="501" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate data files listed in manifest.&quot;&quot;&quot;" number="502" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'data' not in manifest:" number="503" precision="imprecise"/><line any_info="No Anys on this line!" content="            return True" number="504" precision="precise"/><line any_info="No Anys on this line!" content="" number="505" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="        data_files = manifest['data']" number="506" precision="any"/><line any_info="No Anys on this line!" content="        success = True" number="507" precision="precise"/><line any_info="No Anys on this line!" content="" number="508" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)&#10;Omitted Generics (x3)" content="        if not isinstance(data_files, list):" number="509" precision="any"/><line any_info="No Anys on this line!" content="            return True  # Already reported as wrong type" number="510" precision="precise"/><line any_info="No Anys on this line!" content="" number="511" precision="empty"/><line any_info="No Anys on this line!" content="        for data_file in data_files:" number="512" precision="precise"/><line any_info="No Anys on this line!" content="            if not isinstance(data_file, str):" number="513" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(" number="514" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="                    f&quot;Data file should be string, got {type(data_file).__name__}: {data_file}&quot;," number="515" precision="precise"/><line any_info="No Anys on this line!" content="                    module_name," number="516" precision="precise"/><line any_info="No Anys on this line!" content="                    &quot;data files&quot;," number="517" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="518" precision="empty"/><line any_info="No Anys on this line!" content="                success = False" number="519" precision="precise"/><line any_info="No Anys on this line!" content="                continue" number="520" precision="precise"/><line any_info="No Anys on this line!" content="" number="521" precision="empty"/><line any_info="No Anys on this line!" content="            # Check if file exists" number="522" precision="empty"/><line any_info="No Anys on this line!" content="            file_path = module_path / data_file" number="523" precision="precise"/><line any_info="No Anys on this line!" content="            if not file_path.exists():" number="524" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(f&quot;Data file not found: {data_file}&quot;, module_name, &quot;data files&quot;)" number="525" precision="any"/><line any_info="No Anys on this line!" content="                success = False" number="526" precision="precise"/><line any_info="No Anys on this line!" content="                continue" number="527" precision="precise"/><line any_info="No Anys on this line!" content="" number="528" precision="empty"/><line any_info="No Anys on this line!" content="            # Validate file extension" number="529" precision="empty"/><line any_info="No Anys on this line!" content="            file_ext = file_path.suffix.lower()" number="530" precision="precise"/><line any_info="No Anys on this line!" content="            valid_extensions = {'.xml', '.csv', '.yml', '.yaml'}" number="531" precision="precise"/><line any_info="No Anys on this line!" content="            if file_ext not in valid_extensions:" number="532" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(f&quot;Unusual data file extension '{file_ext}' for {data_file}&quot;, module_name, &quot;data files&quot;)" number="533" precision="any"/><line any_info="No Anys on this line!" content="" number="534" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="535" precision="precise"/><line any_info="No Anys on this line!" content="" number="536" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_author_and_contact(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="537" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate author and contact information.&quot;&quot;&quot;" number="538" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="539" precision="precise"/><line any_info="No Anys on this line!" content="" number="540" precision="empty"/><line any_info="No Anys on this line!" content="        # Author validation" number="541" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'author' in manifest:" number="542" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            author = manifest['author']" number="543" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if isinstance(author, str) and author.strip():" number="544" precision="any"/><line any_info="No Anys on this line!" content="                # Check for email in author field (common practice)" number="545" precision="empty"/><line any_info="No Anys on this line!" content="                if '@' in author:" number="546" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.add_info(" number="547" precision="any"/><line any_info="No Anys on this line!" content="                        &quot;Author field contains email - consider using 'maintainer' field for emails&quot;," number="548" precision="precise"/><line any_info="No Anys on this line!" content="                        module_name," number="549" precision="precise"/><line any_info="No Anys on this line!" content="                        &quot;best practices&quot;," number="550" precision="precise"/><line any_info="No Anys on this line!" content="                    )" number="551" precision="empty"/><line any_info="No Anys on this line!" content="            else:" number="552" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(&quot;Author field is empty or invalid&quot;, module_name, &quot;author info&quot;)" number="553" precision="any"/><line any_info="No Anys on this line!" content="" number="554" precision="empty"/><line any_info="No Anys on this line!" content="        # Website validation" number="555" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'website' in manifest:" number="556" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            website = manifest['website']" number="557" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if isinstance(website, str) and website:" number="558" precision="any"/><line any_info="No Anys on this line!" content="                # Basic URL validation" number="559" precision="empty"/><line any_info="No Anys on this line!" content="                if not re.match(r'^https?://', website):" number="560" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                    self.warning(" number="561" precision="any"/><line any_info="No Anys on this line!" content="                        f&quot;Website URL should start with http:// or https://: {website}&quot;, module_name, &quot;website&quot;" number="562" precision="precise"/><line any_info="No Anys on this line!" content="                    )" number="563" precision="empty"/><line any_info="No Anys on this line!" content="            else:" number="564" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(&quot;Website field is empty&quot;, module_name, &quot;contact info&quot;)" number="565" precision="any"/><line any_info="No Anys on this line!" content="" number="566" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="567" precision="precise"/><line any_info="No Anys on this line!" content="" number="568" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="    def validate_technical_fields(self, manifest: Dict[str, Any], module_name: str) -&gt; bool:" number="569" precision="imprecise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate technical fields.&quot;&quot;&quot;" number="570" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="571" precision="precise"/><line any_info="No Anys on this line!" content="" number="572" precision="empty"/><line any_info="No Anys on this line!" content="        # Installable field" number="573" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'installable' in manifest:" number="574" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            installable = manifest['installable']" number="575" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if not isinstance(installable, bool):" number="576" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(" number="577" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="                    f&quot;'installable' should be boolean, got {type(installable).__name__}&quot;," number="578" precision="any"/><line any_info="No Anys on this line!" content="                    module_name," number="579" precision="precise"/><line any_info="No Anys on this line!" content="                    &quot;technical fields&quot;," number="580" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="581" precision="empty"/><line any_info="No Anys on this line!" content="                success = False" number="582" precision="precise"/><line any_info="No Anys on this line!" content="            elif not installable:" number="583" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.warning(&quot;Module marked as not installable&quot;, module_name, &quot;technical fields&quot;)" number="584" precision="any"/><line any_info="No Anys on this line!" content="" number="585" precision="empty"/><line any_info="No Anys on this line!" content="        # Auto-install field" number="586" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'auto_install' in manifest:" number="587" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            auto_install = manifest['auto_install']" number="588" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if not isinstance(auto_install, bool):" number="589" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(" number="590" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="                    f&quot;'auto_install' should be boolean, got {type(auto_install).__name__}&quot;," number="591" precision="any"/><line any_info="No Anys on this line!" content="                    module_name," number="592" precision="precise"/><line any_info="No Anys on this line!" content="                    &quot;technical fields&quot;," number="593" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="594" precision="empty"/><line any_info="No Anys on this line!" content="                success = False" number="595" precision="precise"/><line any_info="No Anys on this line!" content="" number="596" precision="empty"/><line any_info="No Anys on this line!" content="        # Application field" number="597" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if 'application' in manifest:" number="598" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="            application = manifest['application']" number="599" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="            if not isinstance(application, bool):" number="600" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="                self.error(" number="601" precision="any"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="                    f&quot;'application' should be boolean, got {type(application).__name__}&quot;," number="602" precision="any"/><line any_info="No Anys on this line!" content="                    module_name," number="603" precision="precise"/><line any_info="No Anys on this line!" content="                    &quot;technical fields&quot;," number="604" precision="precise"/><line any_info="No Anys on this line!" content="                )" number="605" precision="empty"/><line any_info="No Anys on this line!" content="                success = False" number="606" precision="precise"/><line any_info="No Anys on this line!" content="" number="607" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="608" precision="precise"/><line any_info="No Anys on this line!" content="" number="609" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_module_manifest(self, module_name: str) -&gt; bool:" number="610" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate a single module's manifest file.&quot;&quot;&quot;" number="611" precision="empty"/><line any_info="No Anys on this line!" content="        module_path = self.base_path / module_name" number="612" precision="precise"/><line any_info="No Anys on this line!" content="        manifest_path = module_path / &quot;__manifest__.py&quot;" number="613" precision="precise"/><line any_info="No Anys on this line!" content="" number="614" precision="empty"/><line any_info="No Anys on this line!" content="        if not manifest_path.exists():" number="615" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Manifest file not found: __manifest__.py&quot;, module_name, &quot;file existence&quot;)" number="616" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="617" precision="precise"/><line any_info="No Anys on this line!" content="" number="618" precision="empty"/><line any_info="No Anys on this line!" content="        # Parse the manifest" number="619" precision="empty"/><line any_info="Any Types on this line: &#10;Explicit (x3)" content="        manifest = self.parse_manifest_file(manifest_path)" number="620" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x1)" content="        if manifest is None:" number="621" precision="imprecise"/><line any_info="No Anys on this line!" content="            return False" number="622" precision="precise"/><line any_info="No Anys on this line!" content="" number="623" precision="empty"/><line any_info="No Anys on this line!" content="        # Run all validations" number="624" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="625" precision="precise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_manifest_structure(manifest, module_name)" number="626" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_version_format(manifest, module_name)" number="627" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_dependencies(manifest, module_name)" number="628" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_category(manifest, module_name)" number="629" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_license(manifest, module_name)" number="630" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_data_files(manifest, module_name, module_path)" number="631" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_author_and_contact(manifest, module_name)" number="632" precision="imprecise"/><line any_info="Any Types on this line: &#10;Explicit (x2)" content="        success &amp;= self.validate_technical_fields(manifest, module_name)" number="633" precision="imprecise"/><line any_info="No Anys on this line!" content="" number="634" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="635" precision="precise"/><line any_info="No Anys on this line!" content="" number="636" precision="empty"/><line any_info="No Anys on this line!" content="    def validate_all_modules(self) -&gt; bool:" number="637" precision="precise"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Validate all modules in custom_modules directory.&quot;&quot;&quot;" number="638" precision="empty"/><line any_info="No Anys on this line!" content="        if not self.base_path.exists():" number="639" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.error(f&quot;Custom modules directory not found: {self.base_path}&quot;)" number="640" precision="any"/><line any_info="No Anys on this line!" content="            return False" number="641" precision="precise"/><line any_info="No Anys on this line!" content="" number="642" precision="empty"/><line any_info="No Anys on this line!" content="        modules = [d for d in self.base_path.iterdir() if d.is_dir() and not d.name.startswith('.')]" number="643" precision="precise"/><line any_info="No Anys on this line!" content="" number="644" precision="empty"/><line any_info="No Anys on this line!" content="        if not modules:" number="645" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            self.warning(&quot;No modules found in custom_modules directory&quot;)" number="646" precision="any"/><line any_info="No Anys on this line!" content="            return True" number="647" precision="precise"/><line any_info="No Anys on this line!" content="" number="648" precision="empty"/><line any_info="No Anys on this line!" content="        success = True" number="649" precision="precise"/><line any_info="No Anys on this line!" content="        for module_dir in modules:" number="650" precision="precise"/><line any_info="No Anys on this line!" content="            if not self.validate_module_manifest(module_dir.name):" number="651" precision="precise"/><line any_info="No Anys on this line!" content="                success = False" number="652" precision="precise"/><line any_info="No Anys on this line!" content="" number="653" precision="empty"/><line any_info="No Anys on this line!" content="        return success" number="654" precision="precise"/><line any_info="No Anys on this line!" content="" number="655" precision="empty"/><line any_info="No Anys on this line!" content="    def print_results(self):" number="656" precision="any"/><line any_info="No Anys on this line!" content="        &quot;&quot;&quot;Print validation results in a clear, structured format.&quot;&quot;&quot;" number="657" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="658" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;🔍 ODOO MANIFEST VALIDATION RESULTS&quot;)" number="659" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="660" precision="any"/><line any_info="No Anys on this line!" content="" number="661" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        total_issues = len(self.errors) + len(self.warnings)" number="662" precision="any"/><line any_info="No Anys on this line!" content="" number="663" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.errors:" number="664" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n❌ CRITICAL ERRORS ({len(self.errors)}):&quot;)" number="665" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for error in self.errors:" number="666" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {error}&quot;)" number="667" precision="any"/><line any_info="No Anys on this line!" content="" number="668" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.warnings:" number="669" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\n⚠️  WARNINGS ({len(self.warnings)}):&quot;)" number="670" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for warning in self.warnings:" number="671" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {warning}&quot;)" number="672" precision="any"/><line any_info="No Anys on this line!" content="" number="673" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        if self.info:" number="674" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;\nℹ️  SUGGESTIONS ({len(self.info)}):&quot;)" number="675" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="            for info in self.info:" number="676" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="                print(f&quot;  {info}&quot;)" number="677" precision="any"/><line any_info="No Anys on this line!" content="" number="678" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        print(&quot;\n&quot; + &quot;=&quot; * 70)" number="679" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="        if not self.errors and not self.warnings:" number="680" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;✅ ALL MANIFEST VALIDATIONS PASSED!&quot;)" number="681" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        elif not self.errors:" number="682" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x7)" content="            print(f&quot;✅ No errors found ({len(self.warnings)} warnings)&quot;)" number="683" precision="any"/><line any_info="No Anys on this line!" content="        else:" number="684" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x11)" content="            print(f&quot;❌ Validation failed: {len(self.errors)} errors, {len(self.warnings)} warnings&quot;)" number="685" precision="any"/><line any_info="No Anys on this line!" content="" number="686" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        if total_issues == 0:" number="687" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="            print(&quot;🎉 Your manifest files are ready for deployment!&quot;)" number="688" precision="any"/><line any_info="No Anys on this line!" content="" number="689" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        print(&quot;=&quot; * 70)" number="690" precision="any"/><line any_info="No Anys on this line!" content="" number="691" precision="empty"/><line any_info="No Anys on this line!" content="" number="692" precision="empty"/><line any_info="No Anys on this line!" content="def main():" number="693" precision="any"/><line any_info="No Anys on this line!" content="    &quot;&quot;&quot;Main function.&quot;&quot;&quot;" number="694" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    validator = ManifestValidator()" number="695" precision="any"/><line any_info="No Anys on this line!" content="" number="696" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="    print(&quot;🔍 Starting Odoo Manifest Validation...&quot;)" number="697" precision="any"/><line any_info="No Anys on this line!" content="" number="698" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    if len(sys.argv) &gt; 1:" number="699" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="        module_name = sys.argv[1]" number="700" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x6)" content="        print(f&quot;📦 Validating module: {module_name}&quot;)" number="701" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="        success = validator.validate_module_manifest(module_name)" number="702" precision="any"/><line any_info="No Anys on this line!" content="    else:" number="703" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x1)" content="        print(&quot;📦 Validating all modules...&quot;)" number="704" precision="any"/><line any_info="Any Types on this line: &#10;Unannotated (x4)" content="        success = validator.validate_all_modules()" number="705" precision="any"/><line any_info="No Anys on this line!" content="" number="706" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x3)" content="    validator.print_results()" number="707" precision="any"/><line any_info="No Anys on this line!" content="" number="708" precision="empty"/><line any_info="No Anys on this line!" content="    # Exit with error code if validation failed" number="709" precision="empty"/><line any_info="Any Types on this line: &#10;Unannotated (x5)" content="    sys.exit(0 if success and not validator.errors else 1)" number="710" precision="any"/><line any_info="No Anys on this line!" content="" number="711" precision="empty"/><line any_info="No Anys on this line!" content="" number="712" precision="empty"/><line any_info="No Anys on this line!" content="if __name__ == &quot;__main__&quot;:" number="713" precision="precise"/><line any_info="Any Types on this line: &#10;Unannotated (x2)" content="    main()" number="714" precision="any"/></mypy-report-file>
